
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УзелОбмена = Параметры.УзелОбмена;
	ПринудительнаяПолноеОбновлениеДанныхТовара = Параметры.ПринудительнаяПолноеОбновлениеДанныхТовара;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыполняетсяОбмен;
	ЭтаФорма.ПодключитьОбработчикОжидания("ЗапуститьВыполнениеОбмена", 0.1, Истина);
	
	ЭтаФорма.ПодключитьОбработчикОжидания("ОбновлениеИнформацииОСинхронизации", 3);

КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеИнформацииОСинхронизации()
	
	ОбновлениеИнформацииОСинхронизацииСервер();	
	
	ДлинаПротокола = СтрДлина(Протокол);
	
	Если ДлинаПротокола > 0 тогда           
		Элементы.Протокол.УстановитьГраницыВыделения(ДлинаПротокола,ДлинаПротокола);
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ОбновлениеИнформацииОСинхронизацииСервер()
	
	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("УникальныйИдентификатор", ИдентификаторЗадания));
	
	Если Задания.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Задание = Задания[0];
	
	Сообщения = Задание.ПолучитьСообщенияПользователю(Истина);
	
	Для Каждого Сообщение Из Сообщения Цикл
		
		ТекстСообщения = Сообщение.Текст;
		
		Протокол = Протокол + ТекстСообщения + Символы.ПС; 
	
	КонецЦикла;
	
КонецПроцедуры	


&НаКлиенте
Процедура ЗапуститьВыполнениеОбмена()
	
	ПараметрыОбмена = Новый Структура;
	ПараметрыОбмена.Вставить("УзелОбмена"									, УзелОбмена);
	ПараметрыОбмена.Вставить("ПринудительнаяПолноеОбновлениеДанныхТовара"	, ПринудительнаяПолноеОбновлениеДанныхТовара);
	
	ДлительнаяОперация = ВыполнитьОбменССайтомНаСервере(ПараметрыОбмена);
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗавершенииОперацииЗагрузки", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗавершенииОперацииЗагрузки(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.ПодробноеПредставлениеОшибки) тогда
		СообщитьООшибкеСервер(Результат.ПодробноеПредставлениеОшибки);	
		
		Элементы.НадписьВыполняетсяОбмен.Заголовок 	= "Обмен завершен с ошибкой";
		Элементы.КартинкаВыполняетсяОбмен.Видимость = Ложь;
		
	Иначе
		
	ПоказатьОповещениеПользователя(
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 ""%2""'"),
			Формат(ТекущаяДата(), "ДЛФ=DT"),
			УзелОбмена) 
		,,
		НСтр("ru = 'Обмен с сайтом завершен'"),
		БиблиотекаКартинок.Информация32);
		
		Элементы.НадписьВыполняетсяОбмен.Заголовок 	= "Обмен завершена";
		Элементы.КартинкаВыполняетсяОбмен.Видимость = Ложь;
	
	//Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьОбменССайтомНаСервере(ПараметрыОбмена)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Выполнение обмена с сайтом Битрикс'");
	
	Результат = ДлительныеОперации.ВыполнитьВФоне("Б_ОбменССайтомСервер.ВыполнитьОбменИнтерактивно", ПараметрыОбмена, ПараметрыВыполнения);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура СообщитьООшибкеСервер(Ошибка)
	Б_ОбменССайтомСервер.ДобавитьИнформациюООшибкеВОбмене(УзелОбмена, Ошибка);
КонецПроцедуры

