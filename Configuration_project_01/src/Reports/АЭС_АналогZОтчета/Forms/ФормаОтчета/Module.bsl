

&НаСервере
Процедура КомандаСформироватьОтчетZaНаСервере()
	ТабДок = ЭтотОбъект.ЭтаФорма.ТабДок;
	ТабДок.Очистить();
	
	БезНал=Перечисления.ФормыОплаты.Безналичная;
	Если ЭтотОбъект.Отчет.ПериодНачало = Дата(1,1,1) Тогда 
		ЭтотОбъект.Отчет.ПериодНачало = НачалоДня(ТекущаяДата());
	КонецЕсли;
	
	Если ЭтотОбъект.Отчет.ПериодКонец = Дата(1,1,1) Тогда 
		ЭтотОбъект.Отчет.ПериодКонец = КонецДня(ТекущаяДата());
	КонецЕсли;
	
	ДатаОт = НачалоДня(ЭтотОбъект.Отчет.ПериодНачало);
	ДатаПо = КонецДня(ЭтотОбъект.Отчет.ПериодКонец);
	Нал = Перечисления.ФормыОплаты.Наличная;
	Статус = Перечисления.СтатусыЧековККМ.Пробит;
	
	   
	//Макет = ВнешниеОбработки.ВнешняяОбработкаZ.ПолучитьМакет("МакетZa");
	Макет = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("МакетZa");
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АЭС_ПлатежиОсновнаяДеятельность.Ссылка.КассаККМ.Подразделение КАК КассаККМПодразделение,
		|	АЭС_ПлатежиОсновнаяДеятельность.Секция КАК Секция,
		|	АЭС_ПлатежиОсновнаяДеятельность.ВидОплаты КАК ВидОплаты,
		|	АЭС_ПлатежиОсновнаяДеятельность.ФормаОплаты КАК ФормаОплаты,
		|	ВЫБОР
		|		КОГДА АЭС_ПлатежиОсновнаяДеятельность.ФормаОплаты = &Нал
		|			ТОГДА АЭС_ПлатежиОсновнаяДеятельность.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНал,
		|	ВЫБОР
		|		КОГДА АЭС_ПлатежиОсновнаяДеятельность.ФормаОплаты = &Нал
		|			ТОГДА АЭС_ПлатежиОсновнаяДеятельность.Объем
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоНал,
		|	ВЫБОР
		|		КОГДА НЕ АЭС_ПлатежиОсновнаяДеятельность.ФормаОплаты = &Нал
		|			ТОГДА АЭС_ПлатежиОсновнаяДеятельность.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБезНал,
		|	ВЫБОР
		|		КОГДА НЕ АЭС_ПлатежиОсновнаяДеятельность.ФормаОплаты = &Нал
		|			ТОГДА АЭС_ПлатежиОсновнаяДеятельность.Объем
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоБезНал,
		|	АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА АЭС_ПлатежиОсновнаяДеятельность.ФормаОплаты = &Нал
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧекНал,
		|	ВЫБОР
		|		КОГДА НЕ АЭС_ПлатежиОсновнаяДеятельность.ФормаОплаты = &Нал
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧекБезНал,
		|	АЭС_ПлатежиОсновнаяДеятельность.СозданныйПКО КАК СозданныйПКО
		|ПОМЕСТИТЬ ВТ_од
		|ИЗ
		|	Документ.АЭС_Платежи.ОсновнаяДеятельность КАК АЭС_ПлатежиОсновнаяДеятельность
		|ГДЕ
		|	АЭС_ПлатежиОсновнаяДеятельность.ДокументПродажи.Статус = &Статус
		|	И АЭС_ПлатежиОсновнаяДеятельность.ДокументПродажи.Дата МЕЖДУ &ДатаОт И &ДатаПо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АЭС_ПлатежиТовары.Секция КАК Секция,
		|	АЭС_ПлатежиТовары.ДокументПродажи.ФормаОплаты КАК ДокументПродажиФормаОплаты,
		|	ВЫБОР
		|		КОГДА АЭС_ПлатежиТовары.ДокументПродажи.ФормаОплаты = &Нал
		|			ТОГДА АЭС_ПлатежиТовары.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНал,
		|	ВЫБОР
		|		КОГДА АЭС_ПлатежиТовары.ДокументПродажи.ФормаОплаты = &Нал
		|			ТОГДА АЭС_ПлатежиТовары.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоНал,
		|	ВЫБОР
		|		КОГДА НЕ АЭС_ПлатежиТовары.ДокументПродажи.ФормаОплаты = &Нал
		|			ТОГДА АЭС_ПлатежиТовары.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБезНал,
		|	ВЫБОР
		|		КОГДА НЕ АЭС_ПлатежиТовары.ДокументПродажи.ФормаОплаты = &Нал
		|			ТОГДА АЭС_ПлатежиТовары.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоБезНал,
		|	АЭС_ПлатежиТовары.Ссылка.КассаККМ.Подразделение КАК КассаККМПодразделение,
		|	АЭС_ПлатежиТовары.ВидОплаты КАК ВидОплаты,
		|	ВЫБОР
		|		КОГДА АЭС_ПлатежиТовары.ФормаОплаты = &Нал
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧекНал,
		|	ВЫБОР
		|		КОГДА НЕ АЭС_ПлатежиТовары.ФормаОплаты = &Нал
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧекБезнал,
		|	АЭС_ПлатежиТовары.Ссылка КАК Ссылка,
		|	АЭС_ПлатежиТовары.СозданныйПКО КАК СозданныйПКО
		|ПОМЕСТИТЬ ВТ_товары
		|ИЗ
		|	Документ.АЭС_Платежи.Товары КАК АЭС_ПлатежиТовары
		|ГДЕ
		|	АЭС_ПлатежиТовары.ДокументПродажи.Статус = &Статус
		|	И АЭС_ПлатежиТовары.ДокументПродажи.Дата МЕЖДУ &ДатаОт И &ДатаПо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_од.КассаККМПодразделение КАК КассаККМПодразделение,
		|	ВТ_од.Секция КАК Секция,
		|	СУММА(ВТ_од.СуммаНал) КАК СуммаНал,
		|	СУММА(ВТ_од.КоличествоНал) КАК КоличествоНал,
		|	СУММА(ВТ_од.СуммаБезНал) КАК СуммаБезНал,
		|	СУММА(ВТ_од.КоличествоБезНал) КАК КоличествоБезНал,
		|	СУММА(ВТ_од.ЧекНал) КАК ЧекНал,
		|	СУММА(ВТ_од.ЧекБезНал) КАК ЧекБезнал,
		|	ВТ_од.ВидОплаты КАК ВидОплаты,
		|	ВТ_од.СозданныйПКО КАК СозданныйПКО
		|ИЗ
		|	ВТ_од КАК ВТ_од
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_од.Секция,
		|	ВТ_од.КассаККМПодразделение,
		|	ВТ_од.ВидОплаты,
		|	ВТ_од.СозданныйПКО
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_товары.КассаККМПодразделение,
		|	ВТ_товары.Секция,
		|	СУММА(ВТ_товары.СуммаНал),
		|	СУММА(ВТ_товары.КоличествоНал),
		|	СУММА(ВТ_товары.СуммаБезНал),
		|	СУММА(ВТ_товары.КоличествоБезНал),
		|	СУММА(ВТ_товары.ЧекНал),
		|	СУММА(ВТ_товары.ЧекБезнал),
		|	ВТ_товары.ВидОплаты,
		|	ВТ_товары.СозданныйПКО
		|ИЗ
		|	ВТ_товары КАК ВТ_товары
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_товары.КассаККМПодразделение,
		|	ВТ_товары.Секция,
		|	ВТ_товары.ВидОплаты,
		|	ВТ_товары.СозданныйПКО
		|
		|УПОРЯДОЧИТЬ ПО
		|	КассаККМПодразделение,
		|	Секция
		|ИТОГИ
		|	СУММА(СуммаНал),
		|	СУММА(КоличествоНал),
		|	СУММА(СуммаБезНал),
		|	СУММА(КоличествоБезНал),
		|	СУММА(ЧекНал),
		|	СУММА(ЧекБезнал)
		|ПО
		|	ОБЩИЕ,
		|	КассаККМПодразделение,
		|	Секция";
	
	Запрос.УстановитьПараметр("БезНал", БезНал);
	Запрос.УстановитьПараметр("ДатаОт", ДатаОт);
	Запрос.УстановитьПараметр("ДатаПо", ДатаПо);
	Запрос.УстановитьПараметр("Нал", Нал);
	Запрос.УстановитьПараметр("Статус", Статус);
	Если не КассаККМ.Пустая() Тогда 
		Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
		  Запрос.Текст =  СтрЗаменить(Запрос.Текст,"И АЭС_ПлатежиОсновнаяДеятельность.ДокументПродажи.Дата МЕЖДУ &ДатаОт И &ДатаПо","И АЭС_ПлатежиОсновнаяДеятельность.ДокументПродажи.Дата МЕЖДУ &ДатаОт И &ДатаПо И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.КассаККМ = &КассаККМ ");
		  Запрос.Текст =  СтрЗаменить(Запрос.Текст,"И АЭС_ПлатежиТовары.ДокументПродажи.Дата МЕЖДУ &ДатаОт И &ДатаПо","И АЭС_ПлатежиТовары.ДокументПродажи.Дата МЕЖДУ &ДатаОт И &ДатаПо И АЭС_ПлатежиТовары.Ссылка.КассаККМ = &КассаККМ ");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьКассаККМПодразделение = Макет.ПолучитьОбласть("КассаККМПодразделение");
	ОбластьСекция = Макет.ПолучитьОбласть("Секция");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());
	
	ВыборкаКассаККМПодразделение = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКассаККМПодразделение.Следующий() Цикл
		ОбластьКассаККМПодразделение.Параметры.Заполнить(ВыборкаКассаККМПодразделение);
		ОбластьКассаККМПодразделение.Параметры.ВыручкаНал		 = ВыборкаКассаККМПодразделение.СуммаНал;
		ОбластьКассаККМПодразделение.Параметры.ВыручкаБезНал	 = ВыборкаКассаККМПодразделение.СуммаБезНал;
			
		ТабДок.Вывести(ОбластьКассаККМПодразделение, ВыборкаКассаККМПодразделение.Уровень());
	
		ВыборкаСекция = ВыборкаКассаККМПодразделение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаСекция.Следующий() Цикл
			ОбластьСекция.Параметры.Заполнить(ВыборкаСекция);
			ОбластьСекция.Параметры.ВыручкаНал		 = ВыборкаСекция.СуммаНал;
			ОбластьСекция.Параметры.ВыручкаБезНал	 = ВыборкаСекция.СуммаБезНал;
			ТабДок.Вывести(ОбластьСекция, ВыборкаСекция.Уровень());
	
			ВыборкаДетальныеЗаписи = ВыборкаСекция.Выбрать();
	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
				ОбластьДетальныхЗаписей.Параметры.ВыручкаНал	 = ВыборкаДетальныеЗаписи.СуммаНал;
				ОбластьДетальныхЗаписей.Параметры.ВыручкаБезНал	 = ВыборкаДетальныеЗаписи.СуммаБезНал;
				ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура КомандаСформироватьОтчетZa(Команда)
	КомандаСформироватьОтчетZaНаСервере();
КонецПроцедуры




&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СписокКассККМ = Справочники.НастройкиРМК.НайтиПоРеквизиту("РабочееМесто",МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента()).КассыККМ;	

	Если СписокКассККМ.Количество() = 0 Тогда
		//Отказ = Истина;
		Сообщить("Для текущего рабочего места не настроено РМК!");
		//Возврат;
	ИначеЕсли СписокКассККМ.Количество() = 1 тогда
		//ЭтотОбъект.Отчет.КассаККМ = СписокКассККМ[0].КассаККМ;
		КассаККМ = СписокКассККМ[0].КассаККМ;
		//ЭтотОбъект.Элементы.КассаККМ.ТолькоПросмотр = Истина;
	Иначе
		//СписокВыбора = ЭтотОбъект.Элементы.КассаККМ.СписокВыбора;
		//СписокВыбора.Очистить();
		//Для Каждого стрТЗ Из СписокКассККМ Цикл
		//	СписокВыбора.Добавить(стрТЗ.КассаККМ);
		//КонецЦикла;
		//
	КонецЕсли;
	
	Если ЭтотОбъект.Отчет.ПериодНачало = Дата(1,1,1) Тогда 
		ЭтотОбъект.Отчет.ПериодНачало = НачалоДня(ТекущаяДата());
	КонецЕсли;
	
	Если ЭтотОбъект.Отчет.ПериодКонец = Дата(1,1,1) Тогда 
		ЭтотОбъект.Отчет.ПериодКонец = КонецДня(ТекущаяДата());
	КонецЕсли;
	Если РольДоступна("ПолныеПрава") Тогда
		Элементы.КассаККМ.КнопкаОчистки = Истина;
		ЭтотОбъект.Элементы.КассаККМ.ТолькоПросмотр = Ложь;
	КонецЕсли;

	
КонецПроцедуры

