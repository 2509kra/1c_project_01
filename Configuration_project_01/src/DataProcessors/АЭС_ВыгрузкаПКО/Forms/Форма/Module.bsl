
&НаСервере
Процедура ВыгрузитьПКОНаСервере(БД)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВложенныйЗапрос.КассаККМ КАК КассаККМ,
	               |	ВложенныйЗапрос.Контрагент КАК Контрагент,
	               |	ВложенныйЗапрос.Сумма КАК Сумма,
	               |	ВложенныйЗапрос.Секция КАК Секция,
	               |	ВложенныйЗапрос.СозданныйПКО КАК СозданныйПКО,
	               |	ВложенныйЗапрос.Кассир КАК Кассир,
	               |	ВложенныйЗапрос.ВидОплаты КАК ВидОплаты,
	               |	ВложенныйЗапрос.КассаККМПодразделение КАК КассаККМПодразделение,
	               |	КассыДополнительныеРеквизиты.Значение КАК НомерКассы,
	               |	СтруктураПредприятияДополнительныеРеквизиты.Значение КАК КодУчастка,
	               |	ВложенныйЗапрос.ПериодПлатежа КАК ПериодПлатежа,
	               |	ВложенныйЗапрос.ДокументПродажиНомер КАК ДокументПродажиНомер,
	               |	ВложенныйЗапрос.ИсполнительУслуг КАК ИсполнительУслуг
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.КассаККМ КАК КассаККМ,
	               |		ПОДСТРОКА(АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Контрагент.НомерЛС, 3, 2) + ""0"" КАК Контрагент,
	               |		СУММА(АЭС_ПлатежиОсновнаяДеятельность.Сумма) КАК Сумма,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Секция КАК Секция,
	               |		NULL КАК ПериодПлатежа,
	               |		АЭС_ПлатежиОсновнаяДеятельность.СозданныйПКО КАК СозданныйПКО,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Кассир КАК Кассир,
	               |		АЭС_ПлатежиОсновнаяДеятельность.ВидОплаты КАК ВидОплаты,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.КассаККМ.Подразделение КАК КассаККМПодразделение,
	               |		АЭС_ПлатежиОсновнаяДеятельность.СозданныйПКО.Касса КАК Касса,
	               |		NULL КАК ДокументПродажиНомер,
	               |		АЭС_ПлатежиОсновнаяДеятельность.ИсполнительУслуг КАК ИсполнительУслуг
	               |	ИЗ
	               |		Документ.АЭС_Платежи.ОсновнаяДеятельность КАК АЭС_ПлатежиОсновнаяДеятельность
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМВозврат КАК ЧекККМВозврат
	               |			ПО АЭС_ПлатежиОсновнаяДеятельность.ДокументПродажи = ЧекККМВозврат.ЧекККМ
	               |	ГДЕ
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Организация = &Организация
	               |		И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Дата МЕЖДУ &НачПериода И &КонПериода
	               |		И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Статус = ЗНАЧЕНИЕ(перечисление.СтатусыЧековККМ.Пробит)
	               |		И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Возврат = ЛОЖЬ
	               |		И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	               |		И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.КассаККМ = &КассаККМ
	               |		И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Проведен = ИСТИНА
	               |		И (НЕ ЧекККМВозврат.Статус = ЗНАЧЕНИЕ(перечисление.СтатусыЧековККМ.Пробит)
	               |				ИЛИ ЧекККМВозврат.Ссылка ЕСТЬ NULL)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.КассаККМ,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Секция,
	               |		АЭС_ПлатежиОсновнаяДеятельность.СозданныйПКО,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Кассир,
	               |		АЭС_ПлатежиОсновнаяДеятельность.ВидОплаты,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.КассаККМ.Подразделение,
	               |		АЭС_ПлатежиОсновнаяДеятельность.СозданныйПКО.Касса,
	               |		ПОДСТРОКА(АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Контрагент.НомерЛС, 3, 2) + ""0"",
	               |		АЭС_ПлатежиОсновнаяДеятельность.ИсполнительУслуг
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.КассаККМ,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Контрагент.НомерЛС,
	               |		СУММА(АЭС_ПлатежиОсновнаяДеятельность.Сумма),
	               |		АЭС_ПлатежиОсновнаяДеятельность.Секция,
	               |		АЭС_ПлатежиОсновнаяДеятельность.ПериодПлатежа,
	               |		АЭС_ПлатежиОсновнаяДеятельность.СозданныйПКО,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Кассир,
	               |		АЭС_ПлатежиОсновнаяДеятельность.ВидОплаты,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.КассаККМ.Подразделение,
	               |		АЭС_ПлатежиОсновнаяДеятельность.СозданныйПКО.Касса,
	               |		АЭС_ПлатежиОсновнаяДеятельность.ДокументПродажи.Номер,
	               |		АЭС_ПлатежиОсновнаяДеятельность.ИсполнительУслуг
	               |	ИЗ
	               |		Документ.АЭС_Платежи.ОсновнаяДеятельность КАК АЭС_ПлатежиОсновнаяДеятельность
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМВозврат КАК ЧекККМВозврат
	               |			ПО АЭС_ПлатежиОсновнаяДеятельность.ДокументПродажи = ЧекККМВозврат.ЧекККМ
	               |	ГДЕ
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Организация = &Организация
	               |		И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Дата МЕЖДУ &НачПериода И &КонПериода
	               |		И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Статус = ЗНАЧЕНИЕ(перечисление.СтатусыЧековККМ.Пробит)
	               |		И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Возврат = ЛОЖЬ
	               |		И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	               |		И НЕ АЭС_ПлатежиОсновнаяДеятельность.Секция = 7
	               |		И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.КассаККМ = &КассаККМ
	               |		И АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Проведен = ИСТИНА
	               |		И (НЕ ЧекККМВозврат.Статус = ЗНАЧЕНИЕ(перечисление.СтатусыЧековККМ.Пробит)
	               |				ИЛИ ЧекККМВозврат.Ссылка ЕСТЬ NULL)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.КассаККМ,
	               |		АЭС_ПлатежиОсновнаяДеятельность.ПериодПлатежа,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Секция,
	               |		АЭС_ПлатежиОсновнаяДеятельность.СозданныйПКО,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Кассир,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.Контрагент.НомерЛС,
	               |		АЭС_ПлатежиОсновнаяДеятельность.ВидОплаты,
	               |		АЭС_ПлатежиОсновнаяДеятельность.Ссылка.КассаККМ.Подразделение,
	               |		АЭС_ПлатежиОсновнаяДеятельность.СозданныйПКО.Касса,
	               |		АЭС_ПлатежиОсновнаяДеятельность.ДокументПродажи.Номер,
	               |		АЭС_ПлатежиОсновнаяДеятельность.ИсполнительУслуг) КАК ВложенныйЗапрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Кассы.ДополнительныеРеквизиты КАК КассыДополнительныеРеквизиты
	               |		ПО (КассыДополнительныеРеквизиты.Свойство.Заголовок = ""Порядковый номер ККМ"")
	               |			И ВложенныйЗапрос.Касса = КассыДополнительныеРеквизиты.Ссылка.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия.ДополнительныеРеквизиты КАК СтруктураПредприятияДополнительныеРеквизиты
	               |		ПО ВложенныйЗапрос.КассаККМПодразделение = СтруктураПредприятияДополнительныеРеквизиты.Ссылка.Ссылка
	               |			И (СтруктураПредприятияДополнительныеРеквизиты.Свойство.Заголовок = ""Код подразделения"")
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Секция,
	               |	ВидОплаты,
	               |	Контрагент";
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("НачПериода", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("КонПериода", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("КассаККМ", Объект.КассаККМ);
	
	  
  	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Оплата = "";
		Если Выборка.ВидОплаты.наименование <> "Плата за э/э на содерж. ОИ" Тогда
			СтруктураДанных = Новый Структура;
			СтруктураДанных.Вставить("Kassa",		Выборка.КассаККМ.СерийныйНомер);
			СтруктураДанных.Вставить("Nsek",		Выборка.Секция);
			если Выборка.ВидОплаты.наименование = "Электроэнергия"  Тогда
				Оплата = "Оплата за электроэнергию";	
			ИначеЕсли Выборка.ВидОплаты.наименование = "Пени"  Тогда
				Оплата = "Оплата за пени";
			ИначеЕсли Выборка.ВидОплаты.наименование = "Отключение\подключение"  Тогда
				Оплата = "Оплата за отключение/подключение";
			ИначеЕсли Выборка.ВидОплаты.наименование = "Госпошлина"  Тогда
				Оплата = "Компенсация судебных расходов (госпошлина)";
			ИначеЕсли Выборка.ВидОплаты.наименование = "Электроэнергия (Аванс)"  Тогда
				Оплата = "Предоплата за электроэнергию";	
			ИначеЕсли Выборка.ВидОплаты.наименование = "Подключение"  Тогда
				Оплата = "Услуга по ограничению (возобновлению) электроснабжения";				
			//МИС
			//по просьбе Беломестного А.
			ИначеЕсли Выборка.ВидОплаты.наименование = "Пени по судебному акту" Тогда
				Оплата = "Пени по судебному акту";				
			//По просьбе Беломестного А.: не должен выгружаться Универсал, все остальное должно
			ИначеЕсли СтрНайти(ВРЕГ(Выборка.ИсполнительУслуг.Наименование),"УНИВЕРСАЛ")>0 Тогда			
			    Продолжить;
			КонецЕсли;	
			//СтруктураДанных.Вставить("VidDoh",		Выборка.ВидОплаты);
			СтруктураДанных.Вставить("VidDoh",		Оплата);
			СтруктураДанных.Вставить("Summa",		Выборка.Сумма);
			СтруктураДанных.Вставить("Data",		Объект.Дата);
			СтруктураДанных.Вставить("NachPeriod",	Выборка.ПериодПлатежа);
			СтруктураДанных.Вставить("KonPeriod",	Выборка.ПериодПлатежа);
			стрПоиска = стрНайти(Выборка.СозданныйПКО.Номер,"/");
			Тема = лев(Выборка.СозданныйПКО.Номер,стрПоиска);
			Длина = СтрДлина(Выборка.СозданныйПКО.Номер)-СтрПоиска;
			NPKO = Прав(Выборка.СозданныйПКО.Номер,Длина);
			СтруктураДанных.Вставить("NPKO",		NPKO);
			СтруктураДанных.Вставить("TEMA",		Тема);
			//СтруктураДанных.Вставить("NPKO",		Выборка.СозданныйПКО.Номер);
			//СтруктураДанных.Вставить("TEMA",		"Кур" + Выборка.КодУчастка + Выборка.НомерКассы);
			СтруктураДанных.Вставить("Avtor",		Выборка.Кассир);
			Если Выборка.Контрагент = null Тогда 
				СтруктураДанных.Вставить("Kod_kagent",	""+Выборка.КодУчастка + Выборка.НомерКассы);
			Иначе
				СтруктураДанных.Вставить("Kod_kagent",	Выборка.Контрагент);
			КонецЕсли;
			СтруктураДанных.Вставить("NN", Прав(Выборка.ДокументПродажиНомер,6));		
			БД.Добавить(СтруктураДанных);
		КонецЕсли;
	КонецЦикла;
		
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПКО(Команда)
	БД = Новый XBase;
	БД.Поля.Добавить("Kassa",		"S", 8);
	БД.Поля.Добавить("Nsek", 		"N", 10,0);
	БД.Поля.Добавить("VidDoh", 		"S", 80);
	БД.Поля.Добавить("Summa", 		"N", 10,2);
	БД.Поля.Добавить("Data",		"D", 8);
	БД.Поля.Добавить("NachPeriod", 	"D", 8);
	БД.Поля.Добавить("KonPeriod", 	"D", 8);
	БД.Поля.Добавить("NPKO", 		"S", 15);
	БД.Поля.Добавить("TEMA", 		"S", 15);
	БД.Поля.Добавить("Avtor",		"S", 30);
	БД.Поля.Добавить("Kod_kagent", 	"N", 10);
	БД.Поля.Добавить("NN", 			"N", 10);
	
	БДС = Новый XBase;
	БДС.Поля.Добавить("Kassa",		"S", 8);
	БДС.Поля.Добавить("Nsek", 		"N", 10,0);
	БДС.Поля.Добавить("VidDoh", 		"S", 80);
	БДС.Поля.Добавить("Summa", 		"N", 10,2);
	БДС.Поля.Добавить("Data",		"D", 8);
	БДС.Поля.Добавить("NachPeriod", 	"D", 8);
	БДС.Поля.Добавить("KonPeriod", 	"D", 8);
	БДС.Поля.Добавить("NPKO", 		"S", 15);
	БДС.Поля.Добавить("TEMA", 		"S", 15);
	БДС.Поля.Добавить("Avtor",		"S", 30);
	БДС.Поля.Добавить("Kod_kagent", 	"N", 10);
	БДС.Поля.Добавить("NN", 			"N", 10);
	
	
	
	ИмяФайла = ПолучитьКодУчастка()+"_"+?(СтрДлина(Строка(День(Объект.Дата)))=2, Строка(День(Объект.Дата)), "0"+Строка(День(Объект.Дата)))+?(СтрДлина(Строка(Месяц(Объект.Дата)))=2, Строка(Месяц(Объект.Дата)), "0"+Строка(Месяц(Объект.Дата)));
	ИмяФайлаКарта = "C"+ПолучитьКодУчастка()+"_"+?(СтрДлина(Строка(День(Объект.Дата)))=2, Строка(День(Объект.Дата)), "0"+Строка(День(Объект.Дата)))+?(СтрДлина(Строка(Месяц(Объект.Дата)))=2, Строка(Месяц(Объект.Дата)), "0"+Строка(Месяц(Объект.Дата)));
	
	БД.АвтоСохранение = Истина;
	БДС.АвтоСохранение = Истина;
	БД.СоздатьФайл(?(Прав(Объект.ПутьКФайлу,1)="\",Объект.ПутьКФайлу+ИмяФайла,Объект.ПутьКФайлу+"\"+ИмяФайла));
	БДС.СоздатьФайл(?(Прав(Объект.ПутьКФайлу,1)="\",Объект.ПутьКФайлу+ИмяФайлаКарта,Объект.ПутьКФайлу+"\"+ИмяФайлаКарта));
	БД.Кодировка=КодировкаXBase.OEM;
	БДС.Кодировка=КодировкаXBase.OEM;
	
	МассивДанных =Новый Массив;
	ВыгрузитьПКОНаСервере(МассивДанных);
	
	Для Каждого СТР из МассивДанных Цикл
		Если СТР.Nsek = 7 Тогда 
			БДС.Добавить();
			ЗаполнитьЗначенияСвойств(БДС,СТР);
		Иначе
			БД.Добавить();
			ЗаполнитьЗначенияСвойств(БД,СТР);
		КонецЕсли;
	КонецЦикла;
	БД.ЗакрытьФайл();
	БДС.ЗакрытьФайл();
	Сообщить("Обработка Закончена");
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбора.Заголовок = "Выберите файл";

	ДиалогВыбора.ПолноеИмяФайла = "";
    Текст = "ru = ""Текст""; en = ""Text""";
    Фильтр = "ДБФ (*.dbf)|*.dbf";
    ДиалогВыбора.Фильтр = Фильтр;
    ДиалогВыбора.МножественныйВыбор = Ложь;

	Если ДиалогВыбора.Выбрать() Тогда
		Объект.ПутьКФайлу = ДиалогВыбора.Каталог;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьКодУчастка()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СтруктураПредприятияДополнительныеРеквизиты.Значение
	               |ИЗ
	               |	Справочник.СтруктураПредприятия.ДополнительныеРеквизиты КАК СтруктураПредприятияДополнительныеРеквизиты
	               |ГДЕ
	               |	СтруктураПредприятияДополнительныеРеквизиты.Ссылка.Ссылка = &Ссылка
	               |	И СтруктураПредприятияДополнительныеРеквизиты.Свойство.Заголовок = ""Код подразделения""";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.КассаККМ.Подразделение);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Строка(Выборка.Значение);
	Иначе
		Возврат "00";
	КонецЕсли;
КонецФункции
