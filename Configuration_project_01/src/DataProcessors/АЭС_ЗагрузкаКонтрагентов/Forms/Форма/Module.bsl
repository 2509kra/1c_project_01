
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбора.Заголовок = "Выберите файл";

	ДиалогВыбора.ПолноеИмяФайла = "";
    Текст = "ru = ""Текст""; en = ""Text""";
    Фильтр = "ДБФ (*.dbf)|*.dbf";
    ДиалогВыбора.Фильтр = Фильтр;
    ДиалогВыбора.МножественныйВыбор = Ложь;

	Если ДиалогВыбора.Выбрать() Тогда
		Объект.ПутьКФайлу = ДиалогВыбора.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере()
	КС = Новый КвалификаторыСтроки(500);
	КЧ = Новый КвалификаторыЧисла(15,2);
	КД = Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя);	
	Массив = Новый Массив;                            
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , КЧ);
	Массив.Очистить();
	Массив.Добавить(Тип("Дата"));
	ОписаниеТиповД = Новый ОписаниеТипов(Массив, , КД);
	Массив.Очистить();
	Массив.Добавить(Тип("Булево"));
	ОписаниеТиповБулево = Новый ОписаниеТипов(Массив);
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.Партнеры"));
	ОписаниеТиповПартнер = Новый ОписаниеТипов(Массив);
	
	ТЗ = Новый ТаблицаЗначений;	
	ТЗ.Колонки.Добавить("Партнер", ОписаниеТиповПартнер);
	ТЗ.Колонки.Добавить("ЛС", ОписаниеТиповС);
	ТЗ.Колонки.Добавить("ФИО", ОписаниеТиповС);
	ТЗ.Колонки.Добавить("Адрес", ОписаниеТиповС);
	ТЗ.Колонки.Добавить("ПризнакОплатыПоСчетчику", ОписаниеТиповБулево);
	ТЗ.Колонки.Добавить("ПоследниеПоказания", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("ДатаПоследнейОплаты", ОписаниеТиповД);
	ТЗ.Колонки.Добавить("Задолженность", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Начислено", ОписаниеТиповЧ);

	ФайлДБФ = Новый XBase;
	ФайлДБФ.Кодировка = КодировкаXBase.OEM;
	ФайлДБФ.ОткрытьФайл(Объект.ПутьКФайлу);
	ФайлДБФ.Первая();
	
	Пока Не ФайлДБФ.ВКонце() Цикл
		СтруктураДанных = ТЗ.Добавить();
		СтруктураДанных.Партнер					= Объект.Патрнер;
		СтруктураДанных.ЛС						= ФайлДБФ.LSHET;
		СтруктураДанных.ФИО 					= ФайлДБФ.FIO;
		СтруктураДанных.Адрес 					= ФайлДБФ.ADRES;
		СтруктураДанных.ПризнакОплатыПоСчетчику	= ФайлДБФ.PR_STH;
		СтруктураДанных.ПоследниеПоказания		= ФайлДБФ.LAST_P;
		СтруктураДанных.ДатаПоследнейОплаты		= ФайлДБФ.DATE_P;
		СтруктураДанных.Задолженность			= ФайлДБФ.SUMMA;
		СтруктураДанных.Начислено				= ФайлДБФ.TEKSUMMA;
		ФайлДБФ.Следующая();
	КонецЦикла;
	ФайлДБФ.ЗакрытьФайл();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Контрагенты.Партнер,
	               |	Контрагенты.ЛС,
	               |	Контрагенты.ФИО,
	               |	Контрагенты.Адрес,
	               |	Контрагенты.ПризнакОплатыПоСчетчику,
	               |	Контрагенты.ПоследниеПоказания,
	               |	Контрагенты.ДатаПоследнейОплаты,
	               |	Контрагенты.Задолженность,
	               |	Контрагенты.Начислено
	               |ПОМЕСТИТЬ ВТ_Список
	               |ИЗ
	               |	&МассивДанных КАК Контрагенты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Контрагенты.Ссылка КАК Контрагент,
	               |	ВТ_Список.Партнер,
	               |	ВТ_Список.ЛС,
	               |	ВТ_Список.ФИО,
	               |	ВТ_Список.Адрес,
	               |	ВТ_Список.ПризнакОплатыПоСчетчику,
	               |	ВТ_Список.ПоследниеПоказания,
	               |	ВТ_Список.ДатаПоследнейОплаты,
	               |	ВТ_Список.Задолженность,
	               |	ВТ_Список.Начислено
	               |ИЗ
	               |	ВТ_Список КАК ВТ_Список
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	               |		ПО ВТ_Список.Партнер = Контрагенты.Партнер
	               |			И ВТ_Список.ЛС = Контрагенты.НомерЛС";
	
	Запрос.УстановитьПараметр("МассивДанных", ТЗ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Контрагент = null Тогда
			Контрагент							= Справочники.Контрагенты.СоздатьЭлемент();
			Контрагент.ЮрФизЛицо 				= Перечисления.ЮрФизЛицо.ФизЛицо;
			Контрагент.Партнер					= Выборка.Партнер;
			Контрагент.НомерЛС					= Выборка.ЛС;
			Контрагент.Наименование				= Выборка.ФИО;
			Контрагент.НаименованиеПолное		= Выборка.ФИО;
			Контрагент.АдресЛС					= Выборка.Адрес;
			КонтактнаяИнформация				= Контрагент.КонтактнаяИнформация.Добавить();
			КонтактнаяИнформация.Тип			= Перечисления.ТипыКонтактнойИнформации.Адрес;
			КонтактнаяИнформация.Вид			= Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
			КонтактнаяИнформация.Представление	= Выборка.Адрес;
			Контрагент.Записать();
		Иначе
			Контрагент = Выборка.Контрагент;
		КонецЕсли;
	    НаборЗаписей = РегистрыСведений.АЭС_ДанныеКонтрагентов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(Объект.Период);
		НаборЗаписей.Отбор.Контрагент.Установить(Контрагент);
		
		НоваяЗапись							= НаборЗаписей.Добавить();
		НоваяЗапись.Период 					= Объект.Период;
		НоваяЗапись.Контрагент 				= Контрагент;
		НоваяЗапись.ПризнакОплатыПоСчетчику = Выборка.ПризнакОплатыПоСчетчику;
		НоваяЗапись.ПоследниеПоказания		= Выборка.ПоследниеПоказания;
		НоваяЗапись.ДатаПоследнейОплаты		= Выборка.ДатаПоследнейОплаты;
		НоваяЗапись.Задолженность			= Выборка.Задолженность;
		НоваяЗапись.Начислено				= Выборка.Начислено;
		
		НаборЗаписей.Записать(); 
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузитьНаСервере();
КонецПроцедуры
