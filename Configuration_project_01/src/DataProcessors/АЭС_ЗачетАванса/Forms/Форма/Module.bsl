
&НаСервере
Процедура ЗаполнитьНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслуг.Партнер КАК Партнер,
		|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
		|	РеализацияТоваровУслуг.Организация КАК Организация,
		|	РеализацияТоваровУслуг.Соглашение.ИспользуютсяДоговорыКонтрагентов КАК ИспользуютсяДоговорыКонтрагентов,
		|	РеализацияТоваровУслуг.Договор КАК Договор,
		|	РеализацияТоваровУслуг.ЗаказКлиента КАК ЗаказКлиента
		|ПОМЕСТИТЬ ВТ_Документы
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Дата > &Дата
		|	И РеализацияТоваровУслуг.Проведен = ИСТИНА
		|	И РеализацияТоваровУслуг.Контрагент.ЮрФизЛицо = &ЮрФизЛицо
		|	И РеализацияТоваровУслуг.Организация = &Организация
		|	И РеализацияТоваровУслуг.Подразделение = &Подразделение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияУслугПрочихАктивов.Ссылка,
		|	РеализацияУслугПрочихАктивов.Партнер,
		|	РеализацияУслугПрочихАктивов.Контрагент,
		|	РеализацияУслугПрочихАктивов.Организация,
		|	РеализацияУслугПрочихАктивов.Соглашение.ИспользуютсяДоговорыКонтрагентов,
		|	РеализацияУслугПрочихАктивов.Договор,
		|	РеализацияУслугПрочихАктивов.Договор
		|ИЗ
		|	Документ.РеализацияУслугПрочихАктивов КАК РеализацияУслугПрочихАктивов
		|ГДЕ
		|	РеализацияУслугПрочихАктивов.Дата > &Дата
		|	И РеализацияУслугПрочихАктивов.Проведен = ИСТИНА
		|	И РеализацияУслугПрочихАктивов.Контрагент.ЮрФизЛицо = &ЮрФизЛицо
		|	И РеализацияУслугПрочихАктивов.Организация = &Организация
		|	И РеализацияУслугПрочихАктивов.Подразделение = &Подразделение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка,
		|	СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Партнер,
		|	СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.Контрагент,
		|	СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Организация,
		|	ЛОЖЬ,
		|	СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ДоговорСЗаказчиком,
		|	СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Заказ
		|ИЗ
		|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа
		|ГДЕ
		|	СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.Дата > &Дата
		|	И СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.Проведен = ИСТИНА
		|	И СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.Контрагент.ЮрФизЛицо = &ЮрФизЛицо
		|	И СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.Организация = &Организация
		|	И СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.Подразделение = &Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Документы.Ссылка КАК Документ,
		|	РасчетыСКлиентамиОстатки.ЗаказКлиента КАК ЗаказКлиента,
		|	РасчетыСКлиентамиОстатки.КОплатеОстаток КАК КОплатеОстаток,
		|	ВТ_Документы.Ссылка.СуммаДокумента КАК Сумма
		|ИЗ
		|	ВТ_Документы КАК ВТ_Документы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами.Остатки КАК РасчетыСКлиентамиОстатки
		|		ПО ВТ_Документы.Партнер = РасчетыСКлиентамиОстатки.АналитикаУчетаПоПартнерам.Партнер
		|			И ВТ_Документы.Контрагент = РасчетыСКлиентамиОстатки.АналитикаУчетаПоПартнерам.Контрагент
		|			И ВТ_Документы.Организация = РасчетыСКлиентамиОстатки.АналитикаУчетаПоПартнерам.Организация
		|			И (ВЫБОР
		|				КОГДА ВТ_Документы.ИспользуютсяДоговорыКонтрагентов
		|					ТОГДА ВЫБОР
		|							КОГДА НЕ ВТ_Документы.Договор.Ссылка ЕСТЬ NULL
		|								ТОГДА ВЫБОР
		|										КОГДА ВТ_Документы.Договор.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		|											ТОГДА ВТ_Документы.Договор = РасчетыСКлиентамиОстатки.ЗаказКлиента
		|										ИНАЧЕ ВТ_Документы.Ссылка = РасчетыСКлиентамиОстатки.ЗаказКлиента
		|									КОНЕЦ
		|							ИНАЧЕ ВТ_Документы.Ссылка = РасчетыСКлиентамиОстатки.ЗаказКлиента
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ ВТ_Документы.ЗаказКлиента.Ссылка ЕСТЬ NULL
		|							ТОГДА ВТ_Документы.ЗаказКлиента = РасчетыСКлиентамиОстатки.ЗаказКлиента
		|						ИНАЧЕ ВТ_Документы.Ссылка = РасчетыСКлиентамиОстатки.ЗаказКлиента
		|					КОНЕЦ
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
		|		ПО ВТ_Документы.Ссылка = ФискальныеОперации.ДокументОснование
		|ГДЕ
		|	РасчетыСКлиентамиОстатки.КОплатеОстаток ЕСТЬ NULL
		|	И ФискальныеОперации.ИдентификаторЗаписи ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Дата", НачалоДня(Константы.АЭС_ДатаЗачетаАванса.Получить()));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ЮрФизЛицо", Перечисления.ЮрФизЛицо.ФизЛицо);
	Запрос.УстановитьПараметр("Подразделение", Пользователи.ТекущийПользователь().Подразделение);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
    Объект.Данные.Загрузить(РезультатЗапроса);
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗачетОплаты(Команда)
	Если Объект.Данные.Количество()>0 Тогда 
		РозничныеПродажиКлиент.ОбработатьСостояниеСмены(ЭтотОбъект,Новый ОписаниеОповещения("ПослеОбработкиСостоянияСмены", ЭтотОбъект));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеОбработкиСостоянияСмены(Результат, ДополнительныеПараметры) Экспорт
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	Для Каждого СТЧ Из Объект.Данные Цикл
		ЧекРаспечатан = ПроверитьДокумент(СТЧ.Документ);
		Если Не ЧекРаспечатан Тогда
			ДанныеДокумент = ПолучитьДанныеДокумента(СТЧ.Документ);
			Если НЕ ДанныеДокумент.Организация = Организация Тогда
				Сообщить("Ошибка печати Чека по документу:"+СТЧ.Документ+". Организация документа: "+ДанныеДокумент.Организация+" несоответствует организации рабочего места: "+МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента());
				Продолжить;
			КонецЕсли;
			ЗаполнитьПараметры(СТЧ.Документ, СТЧ.Сумма);
			ПечатьЧека();
		Иначе
			Сообщить("По документу :"+СТЧ.Документ+" чек распечатан ранее");
		КонецЕсли;
	КонецЦикла;
	Объект.Данные.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЧека() 
	Оповещение        = Новый ОписаниеОповещения("ПечатьЧека_Завершение", ЭтотОбъект);
	ПослеОткрытияЧека = Новый ОписаниеОповещения("ПечатьЧека_ПослеОткрытияЧека",  ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьФискализациюЧекаНаФискальномУстройстве(Оповещение, УникальныйИдентификатор, ПараметрыОперацииФискализацииЧека, ПараметрыККТ.ИдентификаторУстройства, ПослеОткрытияЧека);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЧека_ПослеОткрытияЧека(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ШапкаЧека = ПараметрыВыполнения.ВходныеПараметры;
	ШапкаЧека.НомерСмены = ПараметрыВыполнения.НомерСмены;
	ШапкаЧека.НомерЧека  = ПараметрыВыполнения.НомерЧека;
	ВыполнитьОбработкуОповещения(ПараметрыВыполнения.ОповещениеПродолжения, ПараметрыВыполнения);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЧека_Завершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		ПараметрыФискализации = Неопределено;
		// Если данные в регистр ФискальныеОперации не были записаны - произошла ошибка при записи.
		Если РезультатВыполнения.Свойство("ВыходныеПараметры") И РезультатВыполнения.ВыходныеПараметры.Количество() > 8 Тогда
			ПараметрыФискализации = РезультатВыполнения.ВыходныеПараметры[8];
		КонецЕсли;
		ОповещениеПриЗавершении        = Новый ОписаниеОповещения("Завершение", ЭтотОбъект);
		ПараметрыЗавершения = Новый Структура;
		ПараметрыЗавершения.Вставить("ЗакрытьФорму",                Ложь);
		ПараметрыЗавершения.Вставить("Форма",                       ЭтотОбъект);
		ПараметрыЗавершения.Вставить("ФискальнаяОперацияРеквизиты", ПараметрыФискализации);
		ПараметрыЗавершения.Вставить("ОповещениеПриЗавершении",		ОповещениеПриЗавершении);
		
		// в любом случае, даже при успешной записи, переходим к выполнению действий после записи 
		ПодключаемоеОборудованиеУТКлиент.ВыполнитьДействиеПослеЗаписиФискальнойОперацииВЖурнал(
			ЭтотОбъект,
			Новый ОписаниеОповещения("ФискальнаяОперацияЗаписанаВЖурнал", ПодключаемоеОборудованиеУТКлиент, ПараметрыЗавершения),
			НСтр("ru = 'Не удалось записать данные в журнал фискальных операций.'"));
		
	Иначе
		
		ТекстСообщения = НСтр("ru = 'При печати чека произошла ошибка.
		                            |Чек не напечатан на фискальном устройстве.
		                            |Дополнительное описание:
		                            |%ДополнительноеОписание%'");
		
		ТекстСообщения = СтрЗаменить(
			ТекстСообщения,
			"%ДополнительноеОписание%",
			РезультатВыполнения.ОписаниеОшибки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте 
Процедура Завершение(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	Сообщить("Документ: "+ПараметрыОперацииФискализацииЧека.ДокументОснование+" чек распечатан");
КонецПроцедуры

&НаСервере
Функция ПроверитьДокумент(Документ)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФискальныеОперации.ИдентификаторЗаписи КАК ИдентификаторЗаписи
		|ИЗ
		|	РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
		|ГДЕ
		|	ФискальныеОперации.ДокументОснование = &Документ";
	
	Запрос.УстановитьПараметр("Документ", Документ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;

КонецФункции

&НаСервере
Функция ПолучитьДанныеДокумента(Документ)	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Документ.Партнер КАК Партнер,
		|	Документ.Организация КАК Организация
		|ИЗ
		|	Документ."+Документ.Метаданные().Имя+" КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Документ";
	
	Запрос.УстановитьПараметр("Документ", Документ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ДанныеДокумента = Новый Структура;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		ДанныеДокумента.Вставить("Партнер", ВыборкаДетальныеЗаписи.Партнер); 	
		ДанныеДокумента.Вставить("Организация", ВыборкаДетальныеЗаписи.Организация); 	
	КонецЕсли;
	Возврат ДанныеДокумента;
КонецФункции

&НаСервере
Процедура ЗаполнитьПараметры(Документ, Сумма)
	ПараметрыОперацииФискализацииЧека = Документы[Документ.Метаданные().Имя].ПараметрыОперацииФискализацииЧека(Документ,Сумма,ВерсияФФД);
КонецПроцедуры

&НаСервере
Функция ДобавитьВТаблицуОборудования(ПодключаемоеОборудование)
	
	ТипОборудования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПодключаемоеОборудование, "ТипОборудования");
	
	СчитанаВерсияФФД = Ложь;
	ЗначениеВерсияФФД = "";
	Если ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ПринтерЧеков Тогда
		СчитанаВерсияФФД = Истина;
		ЗначениеВерсияФФД = МаксимальнаяВерсияФФД();
	ИначеЕсли ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ФискальныйРегистратор Тогда
		СчитанаВерсияФФД = Истина;
		ЗначениеВерсияФФД = ВерсияФФДПоУмолчанию();
	Иначе
		
		ПараметрыРегистрацииУстройства = МенеджерОборудованияВызовСервера.ПолучитьПараметрыРегистрацииУстройства(ПодключаемоеОборудование);
		Если ПараметрыРегистрацииУстройства.ЕстьДанные Тогда
			ЗначениеВерсияФФД = ПараметрыРегистрацииУстройства.ВерсияФФДККТ;
		Иначе
			ЗначениеВерсияФФД = ВерсияФФДПоУмолчанию();
		КонецЕсли;
		
	КонецЕсли;
	НовоеОборудование = ТаблицаОборудования.Добавить();
	НовоеОборудование.Оборудование     = ПодключаемоеОборудование;
	НовоеОборудование.ВерсияФФД        = ЗначениеВерсияФФД;
	НовоеОборудование.СчитанаВерсияФФД = СчитанаВерсияФФД;
	
	Возврат ЗначениеВерсияФФД;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВерсияФФДПоУмолчанию()
	
	Возврат "1.0";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция МаксимальнаяВерсияФФД()
	
	Возврат "1.1";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция АктуальнаяВерсияФФД()
	
	Возврат "1.0.5";
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Параметры.ОборудованиеККТ) И ЗначениеЗаполнено(Параметры.Организация)
		И ЗначениеЗаполнено(Параметры.ТипОборудования) И ЗначениеЗаполнено(Параметры.СерийныйНомер) Тогда 
		Организация = Параметры.Организация;
		ВерсияФФД = ДобавитьВТаблицуОборудования(Параметры.ОборудованиеККТ);
		
		ПараметрыККТ = Новый Структура;
		ПараметрыККТ.Вставить("ТипОборудования",         Параметры.ТипОборудования);
		ПараметрыККТ.Вставить("СерийныйНомер",           Параметры.СерийныйНомер);
		ПараметрыККТ.Вставить("ИдентификаторУстройства", Параметры.ОборудованиеККТ);
	Иначе 
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПодключаемоеОборудование.Ссылка КАК ККТ,
		|	ПодключаемоеОборудование.Организация КАК Организация,
		|	ПодключаемоеОборудование.ТипОборудования КАК ТипОборудования,
		|	ПодключаемоеОборудование.СерийныйНомер КАК СерийныйНомер
		|ИЗ
		|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
		|ГДЕ
		|	НЕ ПодключаемоеОборудование.ПометкаУдаления
		|	И ПодключаемоеОборудование.УстройствоИспользуется
		|	И ПодключаемоеОборудование.РабочееМесто = &РабочееМесто
		|	И НЕ ПодключаемоеОборудование.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)");
		
		Запрос.УстановитьПараметр("РабочееМесто", МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента());
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Организация = Выборка.Организация;
			ОборудованиеККТ = Выборка.ККТ;
			ВерсияФФД = ДобавитьВТаблицуОборудования(ОборудованиеККТ);
			
			ПараметрыККТ = Новый Структура;
			ПараметрыККТ.Вставить("ТипОборудования",         Выборка.ТипОборудования);
			ПараметрыККТ.Вставить("СерийныйНомер",           Выборка.СерийныйНомер);
			ПараметрыККТ.Вставить("ИдентификаторУстройства", ОборудованиеККТ);
		КонецЕсли;
	КонецЕсли;
	ТипЧека = "Чек";
	ПраваДоступа     = НастройкиПродажДляПользователейСервер.ПраваДоступаРМК(Пользователи.ТекущийПользователь());
	РеквизитыКассира = РозничныеПродажи.РеквизитыКассира(Пользователи.ТекущийПользователь());
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДанныеДокументПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Данные.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущаяСтрока.Документ) Тогда
		ДанныеДокумента = ПолучитьСуммуДокумента(ТекущаяСтрока.Документ);
		Если ДанныеДокумента.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") Тогда
			ТекущаяСтрока.Сумма = ДанныеДокумента.СуммаДокумента;	
		Иначе
			Сообщить("Зачет авансов производится только по физическим лицам");
			ТекущаяСтрока.Документ = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСуммуДокумента(Документ)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Документ.СуммаДокумента КАК СуммаДокумента,
	|	Документ.Контрагент.ЮрФизЛицо КАК ЮрФизЛицо
	|ИЗ
	|	Документ."+Документ.Метаданные().Имя+" КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ДанныеДокумента = Новый Структура;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		ДанныеДокумента.Вставить("СуммаДокумента", ВыборкаДетальныеЗаписи.СуммаДокумента); 	
		ДанныеДокумента.Вставить("ЮрФизЛицо", ВыборкаДетальныеЗаписи.ЮрФизЛицо); 	
	КонецЕсли;
	Возврат ДанныеДокумента;
КонецФункции






