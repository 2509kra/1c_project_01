

&НаСервере
Процедура ЗаполнитьНачальныйКонечныйНомерЛСНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(Контрагенты.НомерЛС) КАК МинНомерЛС,
	|	МАКСИМУМ(Контрагенты.НомерЛС) КАК МаксНомерЛС
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.НомерЛС ПОДОБНО &НомерЛС";
	
	
	Запрос.УстановитьПараметр("НомерЛС", Строка(Объект.ПрефиксНомераЛС) + "%");
	
	Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;	
	
	Выб = Рез.Выбрать();
	Выб.Следующий();
	Сообщить(Выб.МинНомерЛС);
	Сообщить(Выб.МаксНомерЛС);
	
	Объект.НачальныйНомерЛС	= Выб.МинНомерЛС;
	Объект.КонечныйНомерЛС	= Выб.МаксНомерЛС;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНачальныйКонечныйНомерЛС(Команда)
	ЗаполнитьНачальныйКонечныйНомерЛСНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНомераУслугПоНачислениямЗаПериодНаСервере()
	
	Соотв = Новый Соответствие;
	
	Сообщить(ТекущаяДата());
	
	НачЛС = Число(Объект.НачальныйНомерЛС);
	КонЛС = Число(Объект.КонечныйНомерЛС);
	лСоединение = Неопределено;// иниц-я
	ТаблицаСвертки = Неопределено;
	Для й = НачЛС По КонЛС Цикл
		//ОбработкаПрерыванияПользователя();
		НомерЛС = Формат(й, "ЧГ=0");
		СтруктураСтатуса = АЭС_Стек.ПолучитьСтатусЛицевогоСчета(НомерЛС, Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо, лСоединение);
			
		Если СтруктураСтатуса <> Неопределено И СтруктураСтатуса.СуществуетЛС 
			//И СтруктураСтатуса.СтатусЛС > 0 
			Тогда
			ТЗ = АЭС_Стек.ПолучитьТаблицуЗадолженности(НомерЛС, Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо, Объект.Период); 
			Если ТЗ <> Неопределено И ТЗ.Количество() > 0 Тогда
				Если Ложь Тогда ТЗ = Новый ТаблицаЗначений КонецЕсли;
				Если ТаблицаСвертки = Неопределено Тогда
					ТаблицаСвертки = ТЗ.СкопироватьКолонки();
				КонецЕсли;
				
				Для Каждого стрТЗ Из ТЗ Цикл
					//Сообщить(Строка(стрТЗ.НомерУслуги) + "	" + стрТЗ.НаименованиеУслугиКраткое);
					//Соотв.Вставить(стрТЗ.НомерУслуги, стрТЗ.НаименованиеУслугиКраткое); 
					
					НовСтр = ТаблицаСвертки.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр, стрТЗ);
					
					
				КонецЦикла;	
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаСвертки.Свернуть("НомерУслуги, НаименованиеУслугиКраткое, НаименованиеУслугиПолное");
	
	ТаблицаПроверки = ТаблицаСвертки.Скопировать();
	
	ТаблицаПроверки.Свернуть("НомерУслуги");
	
	Если ТаблицаСвертки.Количество() <> ТаблицаПроверки.Количество() Тогда
		//Сообщить();
		ВызватьИсключение "Одинаковые номера услуг!";
	КонецЕсли;
	
	ТЧ = Объект.ТабличнаяЧасть;
	
	Для Каждого стрТЗ Из ТаблицаСвертки Цикл
		НовСтр = ТЧ.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, стрТЗ);
		УслугаСТЕК = АЭС_Сервер.ПолучитьУслугуСТЕКПоНомеру(стрТЗ.НомерУслуги, Объект.Организация, стрТЗ.НаименованиеУслугиКраткое, стрТЗ.НаименованиеУслугиПолное);
		
		НовСтр.УслугаСТЕК = УслугаСТЕК;
		
		НовСтр.Номенклатура = УслугаСТЕК.Номенклатура;
	КонецЦикла;
	
	Сообщить(ТекущаяДата());
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомераУслугПоНачислениямЗаПериод(Команда)
	ЗаполнитьНомераУслугПоНачислениямЗаПериодНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНоменклатурВУслугуЕслиНеСовпадаетНаСервере()
	
	Для Каждого стрТЧ Из Объект.ТабличнаяЧасть Цикл
		Если стрТЧ.Номенклатура = стрТЧ.УслугаСТЕК.Номенклатура И ЗначениеЗаполнено(стрТЧ.Номенклатура) Тогда
			
			УслугаОб = стрТЧ.УслугаСТЕК.ПолучитьОбъект();
			УслугаОб.Номенклатура = стрТЧ.Номенклатура;
			УслугаОб.Записать();
		КонецЕсли;
	КонецЦикла;
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНоменклатурВУслугуЕслиНеСовпадает(Команда)
	ЗаписатьНоменклатурВУслугуЕслиНеСовпадаетНаСервере();
КонецПроцедуры
