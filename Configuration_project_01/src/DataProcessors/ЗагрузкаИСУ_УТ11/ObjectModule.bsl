Перем мИнтерактивноеОткрытиОбработки;

Перем мСоотвСчетов;

Перем мМассивДоплатыИНадбавки;
Перем мМассивОплатаПоСреднемуЗаработку;
Перем мМассивОтпускИДопОтпуск;
Перем мМассивБезПроводок;
Перем мМассивПрофсоюзныеВзносы;
Перем мМассивРезервыПоВзносам;
Перем мМассивРезервыПоВзносамДоп;
Перем мМассивОплатаДополнительногоОтработанногоВремени;
Перем мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91;
Перем мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты;
Перем мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС;
Перем мМассивПрочиеРазовыеИРегулярныеУдержания;
Перем мМассивССохранениемСреднегоЗаработка;
Перем мМассивССохранениемСреднегоЗаработка_Затраты;
Перем мМассивЗПпоТарифнымСтавкамОкладам;
Перем мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты;
Перем мМассивКорректирующиеВидыОплат;
Перем мМассивКорректирующиеВидыОплат_ФСС;
Перем мМассивРайонныеКоэффициентИСеверныеНадбавки;
Перем мМассивПроводкиПоРезервуОтпусков;
Перем мМассивПроводкиПоРезервуКПЭ;
Перем МассивСчетовПоПроводкамРезерва;

Перем мСоответствиеОрганизацийПодразделений;

Перем мПодразделениеСчетаЗатрат;

Перем мСправочникиСтатьиЗатрат_ОплатаТруда;//Оплата труда
Перем мСправочникиСтатьиЗатрат_СВЗаСчетРаботодателя;
Перем мСправочникиСтатьиЗатрат_НалогиИСборы_НСвФСС;//Налоги и сборы (НС в ФСС)
Перем мСправочникиСтатьиЗатрат_СтраховыеВзносы;

Перем мСправочникиРезервыНайтиПоКоду000000001;
Перем мСправочникиРезервы_КПЭ;

Перем мПВХ_ТабНомерИАСУП;
Перем мПВХ_ИдентификаторМВЗ;
Перем мПВХ_СчетЗатратЗП;
Перем мПВХ_СчетЗатратПодразделения;
Перем Организация;
Перем мКомиссариаты;

Перем мЭтоФилиалОП;
Перем СчетКомиссариат;
////////////////////////////////////////////////////////////////////////////////////////////////////////



Функция СведенияОВнешнейОбработке(ВторойВариантРегистрации = Ложь, ПараметрыРегистрации = Неопределено) Экспорт
	
	Выполнить("ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке(""2.1.3.1"")");	
	
	ПараметрыРегистрации.Версия = "2.5";
	ПараметрыРегистрации.БезопасныйРежим = Истина;
	ПараметрыРегистрации.Информация = "";
	
	Если ВторойВариантРегистрации Тогда	
		Выполнить("ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка()");
		ПараметрыРегистрации.Наименование = "Загрузка данных ЗП";
		
		НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
		НоваяКоманда.Представление = "Загрузка данных ЗП";
		НоваяКоманда.Идентификатор = "ЗаполнитьДанныхЗП";
		Выполнить("НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы()");
		НоваяКоманда.ПоказыватьОповещение = Истина;	
	Иначе	
		Выполнить("ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиЗаполнениеОбъекта()");
		ПараметрыРегистрации.Наименование = "Загрузка данных ЗП";
				
		НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
		НоваяКоманда.Представление = "Загрузка данных ЗП";
		НоваяКоманда.Идентификатор = "ЗаполнитьДанныхЗП";
		Выполнить("НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы()");
		НоваяКоманда.ПоказыватьОповещение = Истина;
	КонецЕсли;

	Возврат ПараметрыРегистрации;
	
КонецФункции
 
Процедура ВыполнитьКоманду(ИмяКоманды, ОбъектыНазначения, ПараметрыВыполнения) Экспорт
	
	ПараметрыРегистрации = СведенияОВнешнейОбработке();
	ПараметрыРегистрации.Команды.Колонки.Идентификатор.Имя = "ИмяКоманды";
	ЭтаКоманда = ПараметрыРегистрации.Команды.Найти(ИмяКоманды, "ИмяКоманды");
	Если ЭтаКоманда = Неопределено Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Команда ""%1"" не поддерживается обработкой ""%2""'"),
			ИмяКоманды,
			Метаданные().Представление()
		);
	КонецЕсли;
	
КонецПроцедуры


// Служебная процедура Инициализировать
//
Процедура Инициализировать20220826(Объект, ИмяТабличнойЧасти, ТабличнеПолеОбъекта) Экспорт
	
	//Если Не ЗначениеЗаполнено(Каталог) Тогда
	//	ВыбратьКаталог();
	//Иначе
	//	//это интерактивное открытие
	//	//Объект = Документ.ПолучитьОбъект();
	//КонецЕсли;
	
	//Если Не ЗначениеЗаполнено(Каталог) Тогда
	//	Возврат;
	//КонецЕсли;
	   
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ДокОтражениеЗарплатыБухучет.Организация) Тогда
		Сообщить("Не выбрана Организация!");
		Возврат;
	КонецЕсли;
	Организация = ЭтотОбъект.ДокОтражениеЗарплатыБухучет.Организация; 
	ТабЧасть = Объект[ИмяТабличнойЧасти];
	
	//Если ТабЧасть.Количество() > 0 Тогда
	//	
	//	ТекстВопроса = "Табличная часть будет очищена! Продолжить?";
	//	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	//	Если Ответ <> КодВозвратаДиалога.Да Тогда
	//		Возврат;
	//	КонецЕсли;
	//	
	//	Объект[ИмяТабличнойЧасти].Очистить()
	//	
	//КонецЕсли;
	мПодразделениеСчетаЗатрат = мСоответствиеОрганизацийПодразделений.СкопироватьКолонки("Подразделение, МВЗ");
	Отбор = Новый Структура;
	Отбор.Вставить("Организация",Объект.Организация); 
	НайденныеСтроки = мСоответствиеОрганизацийПодразделений.НайтиСтроки(Отбор);
	Для Каждого СТЧ Из НайденныеСтроки Цикл
		НоваяСтрока = мПодразделениеСчетаЗатрат.Добавить();
		НоваяСтрока.Подразделение	= СТЧ.Подразделение; 
		НоваяСтрока.МВЗ				= СТЧ.МВЗ; 
	КонецЦикла;
	 
	мЭтоФилиалОП = ЗначениеЗаполнено(Объект.Организация.ГоловнаяОрганизация);
	мСправочникиСтатьиЗатрат_ОплатаТруда			= Справочники.СтатьиЗатрат.НайтиПоКоду("20010200");
	мСправочникиСтатьиЗатрат_НалогиИСборы_НСвФСС	= Справочники.СтатьиЗатрат.НайтиПоКоду("30000001");
	мСправочникиСтатьиЗатрат_СтраховыеВзносы		= Справочники.СтатьиЗатрат.НайтиПоКоду("30000000");
	мСправочникиСтатьиЗатрат_СВЗаСчетРаботодателя	= Справочники.СтатьиЗатрат.НайтиПоКоду("20010100");
	
	мПВХ_ТабНомерИАСУП				= "ТабНомерИАСУП";//ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("ТабНомерИАСУП", Истина);
	мПВХ_ИдентификаторМВЗ			= "ИдентификаторМВЗ";//ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("ИдентификаторМВЗ" , Истина);
	мПВХ_СчетЗатратЗП				= "СчетЗатратЗП";//ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("СчетЗатратЗП", Истина);
	мПВХ_СчетЗатратПодразделения	= "СчетЗатратПодразделения";//ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("СчетЗатратПодразделения" , Истина);
	
	мСправочникиРезервыНайтиПоКоду000000001 = Справочники.Резервы.НайтиПоКоду("000000001");
	//мСправочникиРезервы_КПЭ = Справочники.Резервы.НайтиПоКоду("Оценочное об-во по выплате вознаграждений КПЭ " + Формат(Год(Документ.Дата), "ЧГ=0"));
	мСправочникиРезервы_КПЭ = Справочники.Резервы.НайтиПоКоду("000000013");
	
	//МассивФайлов = НайтиФайлы(Каталог, "*.csv");
	//
	//Для Каждого Файл Из МассивФайлов Цикл
	//	Если Ложь Тогда Файл = новый Файл; КонецЕсли;
		//ТЗ = ПрочитатьЦСВ(Каталог + "\", Файл.Имя, 23);
		//ТЗ = ПрочитатьЦСВ(Каталог);
		//Если ЗаполнитьПустые Тогда
		//	КоличествоСтрТЗ = ТЗ.Количество();
		//	Пока КоличествоСтрТЗ > 0 Цикл
		//		КоличествоСтрТЗ = КоличествоСтрТЗ - 1;
		//		СтрТЗ = ТЗ.Получить(КоличествоСтрТЗ);
		//		Если СокрЛП(Строка(СтрТЗ.СубконтоДТ1)) = "" И КоличествоСтрТЗ < (ТЗ.Количество()-1) Тогда
		//			 СтрТЗ.СубконтоДТ1 = ТЗ.Получить(КоличествоСтрТЗ + 1).СубконтоДТ1;
		//		//	
		//		КонецЕсли;
		//	КонецЦикла;
		//КонецЕсли;
		ТЗ = Объект.ТабДокумент;
		ОтдельноПоКаждому = Ложь;

		//Сворачивание ТЗ правильного расчета
		Если ОтдельноПоКаждому = Ложь Тогда
				ТЗСтрВзн = ТЗ.Скопировать();
				//Сообщить("Перед началом");
				ТЗСтрВзн.Свернуть("Видоплаты,СчетДт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоДт4,СубконтоДт5,СубконтоДт6,СубконтоДт7,СчетКт,СубконтоКт1,СубконтоКт2,СубконтоКт3,СубконтоКт4,СубконтоКт5", "Сумма");
				ТЗСтрВзн.Сортировать("Видоплаты,СчетДт,СчетКт,СубконтоДт1,СубконтоКт1,СубконтоДт2,СубконтоКт2,СубконтоДт3,СубконтоКт3");
				Сообщить("ВидОплаты;СчетДт;СубконтоДт1;СубконтоДт2;СубконтоДт3;СубконтоДт4;СубконтоДт5;СубконтоДт6;СубконтоДт7;СчетКт;СубконтоКт1;СубконтоКт2;СубконтоКт3;СубконтоКт4;СубконтоКт5;Сумма");
				Для Каждого СтрТЗ ИЗ  ТЗСтрВзн Цикл
					Сообщить(СтрТЗ.Видоплаты+";"+СтрТЗ.СчетДт+";"+СтрТЗ.СубконтоДт1+";"+СтрТЗ.СубконтоДт2+";"+СтрТЗ.СубконтоДт3+";"+СтрТЗ.СубконтоДт4+";"+СтрТЗ.СубконтоДт5+";"+СтрТЗ.СубконтоДт6+";"+СтрТЗ.СубконтоДт7+";"+СтрТЗ.СчетКт+";"+СтрТЗ.СубконтоКт1+";"+СтрТЗ.СубконтоКт2+";"+СтрТЗ.СубконтоКт3+";"+СтрТЗ.СубконтоКт4+";"+СтрТЗ.СубконтоКт5+";"+Строка(СтрТЗ.Сумма));	
				КонецЦикла;	
				Сообщить("Завершение перед началом"+Символы.ПС);
				
				Отбор = Новый Структура;
				Отбор.Вставить("СубконтоДт2","8000");
				МассивСтрВзн = ТЗ.НайтиСтроки(Отбор);
				ТЗСтрВзн = ТЗ.Скопировать(МассивСтрВзн);
				Для Каждого СТЗ Из МассивСтрВзн Цикл
					ТЗ.Удалить(СТЗ);
				КонецЦикла;
				ТЗСтрВзн.ЗаполнитьЗначения("","Табн");
				ТЗСтрВзн.ЗаполнитьЗначения("","СубконтоДт1");
				ТЗСтрВзн.Свернуть("Табн,ДляПериод,ВПериод,Видоплаты,ТекстВидаОплаты,СчетДт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоДт4,СубконтоДт6,СубконтоДт7,СчетКт,СубконтоКт1,СубконтоКт2,СубконтоКт3,СубконтоКт4,СубконтоКт5,Содержание,Количество,СубконтоДт5,Валюта", "Сумма");
				й = 0;
				Для Каждого стрТЗ Из ТЗ Цикл
					//ОбработкаПрерыванияПользователя();
					//Состояние("Заполнение строк "+Строка(Формат(?(ТЗ.Количество()=0,0,((100*й)/ТЗ.Количество())),"ЧЦ=3; ЧДЦ=0"))+" %");
					
					СтруктураСтрТЧ = ПолучитьСтруктуруСтрокиТабЧасти(стрТЗ);
					
					Если СтруктураСтрТЧ <> Неопределено Тогда
						НовСтрТЧ = ТабЧасть.Добавить();
						ЗаполнитьЗначенияСвойств(НовСтрТЧ, СтруктураСтрТЧ);
						//Если Год(Дата(стрТЗ.ДляПериод+"01"))=Год(ТекущаяДата())Тогда
							Если СтруктураСтрТЧ.ВидОплатыИАСУП = "9RA1" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8RA1" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8RA2" 
								ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "9S01" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8S01" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8S02" Тогда
								НовСтрТЧ.СуммаВР = СтруктураСтрТЧ.Сумма;
							ИначеЕсли Не мМассивПроводкиПоРезервуОтпусков.Найти(СтруктураСтрТЧ.ВидОплатыИАСУП) = Неопределено и СтруктураСтрТЧ.СчетДт.Код = "96.01" Тогда
								ОбработатьСтрокуРезерваПоОтпускм(СтруктураСтрТЧ, ТабЧасть, стрТЗ);
								//НовСтрТЧ.СуммаНУ = СтруктураСтрТЧ.Сумма;
							ИначеЕсли СтруктураСтрТЧ.ВидОплатыИАСУП = "922A" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8B1A" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8B2A" ИЛИ
								СтруктураСтрТЧ.ВидОплатыИАСУП = "922K" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8BK1" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8BK2" Тогда 
								НовСтрТЧ.СуммаВР = СтруктураСтрТЧ.Сумма;
							ИначеЕсли Не мМассивПроводкиПоРезервуКПЭ.Найти(СтруктураСтрТЧ.ВидОплатыИАСУП) = Неопределено и СтруктураСтрТЧ.СчетДт.Код = "96.03" Тогда 
								ОбработатьСтрокуРезерваПоОтпускм(СтруктураСтрТЧ, ТабЧасть, стрТЗ);
								//НовСтрТЧ.СуммаНУ = СтруктураСтрТЧ.Сумма;
							ИначеЕсли СтруктураСтрТЧ.ВидОплатыИАСУП = "3492" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "3493" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "2006"
								ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "2007" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "1420" Тогда
								НовСтрТЧ.СуммаНУ = 0;
								НовСтрТЧ.СуммаПР = СтруктураСтрТЧ.Сумма;
							Иначе
								НовСтрТЧ.СуммаНУ = СтруктураСтрТЧ.Сумма;
							КонецЕсли;
						//Иначе
						//	НовСтрТЧ.СуммаНУ = СтруктураСтрТЧ.Сумма;
						//КонецЕсли;
					КонецЕсли;
					й = й+1;	
				КонецЦикла;
				
				й = 0;
				Для Каждого стрТЗ Из ТЗСтрВзн Цикл
					//ОбработкаПрерыванияПользователя();
					//Состояние("Заполнение строк "+Строка(Формат(?(ТЗСтрВзн.Количество()=0,0,((100*й)/ТЗСтрВзн.Количество())),"ЧЦ=3; ЧДЦ=0"))+" %");
					
					СтруктураСтрТЧ = ПолучитьСтруктуруСтрокиТабЧасти(стрТЗ);
					
					Если СтруктураСтрТЧ <> Неопределено Тогда
						НовСтрТЧ = ТабЧасть.Добавить();
						ЗаполнитьЗначенияСвойств(НовСтрТЧ, СтруктураСтрТЧ);
						НовСтрТЧ.СуммаНУ = СтруктураСтрТЧ.Сумма;
					КонецЕсли;
					й = й+1;	
				КонецЦикла;
				
			//КонецЦикла;
			
			
			// 2509кра +++ 20211227 грубая замена ИФНС и субконто в АО АЭС
			ТЧОтражениеВУчете = Объект.ОтражениеВУчете;
				номерСтр = 1;
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 1: Обработана строка  "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					
					Если СтрОтражениеВУчете.СчетДт  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.02")
						И  СтрОтражениеВУчете.СубконтоДт1 <> Справочники.Резервы.НайтиПоКоду("000000013") 
						И  ТипЗнч(СтрОтражениеВУчете.СубконтоДт1) <> Тип("СправочникСсылка.Резервы") Тогда
						   СтрОтражениеВУчете.СубконтоДт1  = Справочники.Резервы.НайтиПоКоду("000000013");
					КонецЕсли;   
					Если СтрОтражениеВУчете.СчетДт  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02")
						И  СтрОтражениеВУчете.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("2610100") Тогда   
							СтрОтражениеВУчете.СубконтоДт1  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("25901000"); //3000000 //2509кра 20211230
					КонецЕсли; 
					Если СтрОтражениеВУчете.СчетДт  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02")
						И  (ТипЗнч(СтрОтражениеВУчете.СубконтоДт1) = Тип("СправочникСсылка.ПодразделенияОрганизаций") ИЛИ Строка(СтрОтражениеВУчете.СубконтоДт1)="" )Тогда   
							СтрОтражениеВУчете.СубконтоДт1  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("25901000"); //3000000  
					КонецЕсли; 
					Если СтрОтражениеВУчете.СчетДт  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02")
						И  СтрОтражениеВУчете.СубконтоДт1 = НЕОПРЕДЕЛЕНО  Тогда   
							СтрОтражениеВУчете.СубконтоДт1  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("25901000"); //3000000 
					КонецЕсли; 
					Если СтрОтражениеВУчете.СчетДт  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02")
						И  Строка(СтрОтражениеВУчете.СубконтоДт1)="" Тогда   
							СтрОтражениеВУчете.СубконтоДт1  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("25901000"); //3000000 
					КонецЕсли; 
					
					
					
						
					Если СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.01")
						И СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030100")
						И СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.01")  Тогда
						 СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030200");
						
					КонецЕсли;	
					
					
					Если
						//(СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.01") ИЛИ СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("26"))
						СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.02")
						И СтрОтражениеВУчете.СубконтоКт1 <> Справочники.Резервы.НайтиПоКоду("000000015") Тогда
						 СтрОтражениеВУчете.СубконтоКт1 = Справочники.Резервы.НайтиПоКоду("000000015");
						
					КонецЕсли;	
					
					Если
						СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02")
						И СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70")
						Тогда
						СтрОтражениеВУчете.СуммаВР = СтрОтражениеВУчете.СуммаНУ;
						СтрОтражениеВУчете.СуммаНУ = 0;
						
					КонецЕсли;	
						
				КонецЦикла;	

			
			
			
			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
			//	ТЧОтражениеВУчете = Объект.ОтражениеВУчете;
				номерСтр = 1;
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 2: Обработана строка "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					
					Если СтрОтражениеВУчете.СубконтоКт2 = Справочники.РегистрацияВИФНС.НайтиПоКоду("9976") Тогда
						 СтрОтражениеВУчете.СубконтоКт2 = Справочники.РегистрацияВИФНС.НайтиПоНаименованию("АО ""АтомЭнергоСбыт"" ИФНС № 25 (с 12.10.2016г.)");
					КонецЕсли;	
					
					 
					Если (СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("26") ИЛИ СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.01"))
						И СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.01")
						И СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030100")
						И СтрОтражениеВУчете.СубконтоКт1 = Справочники.Резервы.НайтиПоКоду("000000001")
						Тогда 
					       СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030200");
					КонецЕсли;
					   
					   
					Если (СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("26") ИЛИ СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.01"))
						И СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.01")
						И СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500100")
						И СтрОтражениеВУчете.СубконтоКт1 = Справочники.Резервы.НайтиПоКоду("000000001")
						Тогда 
					       СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500200");
					КонецЕсли;
		   
					   
					   
					   
					   
				КонецЦикла;	
			Конецесли;
			
			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда

				ЭлПодразделениеДт = "" ;
				ЭлПодразделениеКт = "" ;

				
				номерСтр = 1;

				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 3: Обработана строка  "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество())+" - заполняем пустой реквизит Подразделение...");
					номерСтр = номерСтр + 1;
					Если Строка(СтрОтражениеВУчете.ПодразделениеДт) <> ""  Тогда
						ЭлПодразделениеДт = СтрОтражениеВУчете.ПодразделениеДт;
					Конецесли;
					Если Строка(СтрОтражениеВУчете.ПодразделениеКт) <> ""  Тогда
						ЭлПодразделениеКт = СтрОтражениеВУчете.ПодразделениеКт;
					Конецесли;

					
				КонецЦикла;
				
				
				Если Строка(ЭлПодразделениеДт) = "" И Строка(ЭлПодразделениеКт) <> "" Тогда
					   ЭлПодразделениеДт = ЭлПодразделениеКт;
				Конецесли;
				Если Строка(ЭлПодразделениеКт) = "" И Строка(ЭлПодразделениеДт) <> "" Тогда
					   ЭлПодразделениеКт = ЭлПодразделениеДт;
				Конецесли;
				   
				   
				номерСтр = 1;
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					номерСтр = номерСтр + 1;
					
					Если Строка(СтрОтражениеВУчете.ПодразделениеДт) = "" И Строка(ЭлПодразделениеДт) <> "" Тогда
						СтрОтражениеВУчете.ПодразделениеДт = ЭлПодразделениеДт;				 
					КонецЕсли;	
					
					Если Строка(СтрОтражениеВУчете.ПодразделениеКт) = "" И Строка(ЭлПодразделениеКт) <> "" Тогда
						
						 СтрОтражениеВУчете.ПодразделениеКт = ЭлПодразделениеКт;	
					КонецЕсли;	
					
					
				КонецЦикла;   
				   
			КонецЕсли;
			
			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
				номерСтр = 1;

				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 4: Обработана строка  "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					Если СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44") Тогда
						Если  СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.01") Тогда
							Если СтрОтражениеВУчете.Сумма = 0 Тогда
								Если СтрОтражениеВУчете.СуммаВР < 0 Тогда
									Если СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500100") Тогда
										Если СтрОтражениеВУчете.СубконтоКт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("000000001") Тогда
											СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500200")
										КонецЕсли;	
									КонецЕсли;	
								 Конецесли;
							КонецЕсли;	
						КонецЕсли;	
					КонецЕсли;	
					
					Если СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44") Тогда
						Если  СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.01") Тогда
							Если СтрОтражениеВУчете.Сумма = 0 Тогда
								Если СтрОтражениеВУчете.СуммаВР < 0 Тогда
									Если СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030100") Тогда
										Если СтрОтражениеВУчете.СубконтоКт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("000000001") Тогда
											СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030200")
										КонецЕсли;	
									КонецЕсли;	
								 Конецесли;
							КонецЕсли;	
						КонецЕсли;	
					КонецЕсли;
					
					
					
				КонецЦикла;
			КонецЕсли;

			
			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
			//	ТЧОтражениеВУчете = Объект.ОтражениеВУчете;
				номерСтр = 1;
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 5: Обработана строка "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					
					Если  СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.09.3") И СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70") Тогда
						Если Строка(СтрОтражениеВУчете.СубконтоКт1) = "" Тогда
							СтрОтражениеВУчете.СубконтоКт1 = Справочники.Контрагенты.НайтиПоКоду("00013576");
							СтрОтражениеВУчете.СубконтоКт2 = Справочники.ДоговорыКонтрагентов.НайтиПоКоду("000017254");

							
							
						КонецЕсли;
					КонецЕсли;   
					   
				КонецЦикла;	
			Конецесли;

			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
			//	ТЧОтражениеВУчете = Объект.ОтражениеВУчете;
				номерСтр = 1;
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 6: Обработана строка "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					
					Если  СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70") И СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02")
						И (СтрОтражениеВУчете.ВидОплатыИАСУП = "5265" ИЛИ СтрОтражениеВУчете.ВидОплатыИАСУП = "5311")Тогда
						   СтрОтражениеВУчете.СуммаПР = СтрОтражениеВУчете.Сумма;
						   СтрОтражениеВУчете.СуммаНУ = 0;
						   СтрОтражениеВУчете.СуммаВР = 0;
					КонецЕсли;   
					   
				КонецЦикла;	
			Конецесли;

			
			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
			//	ТЧОтражениеВУчете = Объект.ОтражениеВУчете;
				номерСтр = 1;
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 7: Обработана строка "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					
					Если  СтрОтражениеВУчете.ВидОплатыИАСУП = "4431" Тогда
						   СтрОтражениеВУчете.СуммаПР = 0;
						   СтрОтражениеВУчете.СуммаНУ = СтрОтражениеВУчете.Сумма;
						   СтрОтражениеВУчете.СуммаВР = 0;
					   КонецЕсли; 
					   
					Если  СтрОтражениеВУчете.ВидОплатыИАСУП = "4452" ИЛИ СтрОтражениеВУчете.ВидОплатыИАСУП = "4458" Тогда
						   СтрОтражениеВУчете.СуммаПР = СтрОтражениеВУчете.Сумма;
						   СтрОтражениеВУчете.СуммаНУ = 0;
						   СтрОтражениеВУчете.СуммаВР = 0;
					КонецЕсли;     
					
					
					Если  СтрОтражениеВУчете.ВидОплатыИАСУП = "4452" ИЛИ СтрОтражениеВУчете.ВидОплатыИАСУП = "4458" Тогда
						   СтрОтражениеВУчете.СуммаПР = СтрОтражениеВУчете.Сумма;
						   СтрОтражениеВУчете.СуммаНУ = 0;
						   СтрОтражениеВУчете.СуммаВР = 0;
					КонецЕсли; 
					
					Если  СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44") Тогда
						   СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.01"); 
					КонецЕсли;   
					
					
					
				КонецЦикла;	
			Конецесли;

			
			
			
			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
			//	ТЧОтражениеВУчете = Объект.ОтражениеВУчете;
				номерСтр = 1;
				
				ТЧОтражениеВУчетеТаблицаЗначений = Объект.ОтражениеВУчете.Выгрузить();
				
				ТЧОтражениеВУчетеТаблицаЗначений.Свернуть("СчетДт,СубконтоДт1,СубконтоДт2,СубконтоДт3,ПодразделениеДт,СчетКт,СубконтоКт1,СубконтоКт2,СубконтоКт3,ПодразделениеКт","Сумма,СуммаПР,СуммаВР,СуммаНУ");
				ТЧОтражениеВУчетеТаблицаЗначений.Сортировать("СчетДт, СчетКт");
				//ОчиститьСообщения();
				Сообщить("СчетДт;СубконтоДт1;СубконтоДт2;СубконтоДт3;ПодразделениеДт;СчетКт;СубконтоКт1;СубконтоКт2;СубконтоКт3;ПодразделениеКт;Сумма;СуммаПР;СуммаВР;СуммаНУ");
				//Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчетеТаблицаЗначений Цикл
					//Состояние("Действие - Выгрузка в CSV: Обработана строка "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					СтрДт =  Строка(СтрОтражениеВУчете.СчетДт)+";"+Строка(СтрОтражениеВУчете.СубконтоДт1)+";"+Строка(СтрОтражениеВУчете.СубконтоДт2)+";"+Строка(СтрОтражениеВУчете.СубконтоДт3)+";"+Строка(СтрОтражениеВУчете.ПодразделениеДт)+";";
					СтрКт =  Строка(СтрОтражениеВУчете.СчетКт)+";"+Строка(СтрОтражениеВУчете.СубконтоКт1)+";"+Строка(СтрОтражениеВУчете.СубконтоКт2)+";"+Строка(СтрОтражениеВУчете.СубконтоКт3)+";"+Строка(СтрОтражениеВУчете.ПодразделениеКт)+";";
					//Сумма;СуммаПР;СуммаВР;СуммаНУ
					СтрСуммы = Строка(Формат(СтрОтражениеВУчете.Сумма,"ЧГ="))+";"+Строка(Формат(СтрОтражениеВУчете.СуммаПР,"ЧГ="))+";"+Строка(Формат(СтрОтражениеВУчете.СуммаВР,"ЧГ="))+";"+Строка(Формат(СтрОтражениеВУчете.СуммаНУ,"ЧГ="));
					
					Сообщить(СтрДт+СтрКт+СтрСуммы);
					   
					   
					   
					   
					   
				КонецЦикла;	
			Конецесли;
			
			
			// 2509кра --- 20211227 грубая замена ИФНС и субконто в АО АЭС
			
			//2509кра +++ 20220523 Дт 26 Кт 69.11
			
			    Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
					номерСтр = 0;
					КолСтрТЧОтражениеВУчете = ТЧОтражениеВУчете.Количество();
					Пока номерСтр < КолСтрТЧОтражениеВУчете Цикл
						СтрОтражениеВУчете = ТЧОтражениеВУчете.Получить(номерСтр);
						номерСтр = номерСтр + 1;
						//Состояние("Действие 8: Обработана строка "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
						
						
						//Если  СтрОтражениеВУчете.ВидОплатыИАСУП = "4431" Тогда
						//	   СтрОтражениеВУчете.СуммаПР = 0;
						//	   СтрОтражениеВУчете.СуммаНУ = СтрОтражениеВУчете.Сумма;
						//	   СтрОтражениеВУчете.СуммаВР = 0;
						//   КонецЕсли; 
						//   
						//Если  СтрОтражениеВУчете.ВидОплатыИАСУП = "4452" ИЛИ СтрОтражениеВУчете.ВидОплатыИАСУП = "4458" Тогда
						//	   СтрОтражениеВУчете.СуммаПР = СтрОтражениеВУчете.Сумма;
						//	   СтрОтражениеВУчете.СуммаНУ = 0;
						//	   СтрОтражениеВУчете.СуммаВР = 0;
						//КонецЕсли;     
						//
						//
						//Если  СтрОтражениеВУчете.ВидОплатыИАСУП = "4452" ИЛИ СтрОтражениеВУчете.ВидОплатыИАСУП = "4458" Тогда
						//	   СтрОтражениеВУчете.СуммаПР = СтрОтражениеВУчете.Сумма;
						//	   СтрОтражениеВУчете.СуммаНУ = 0;
						//	   СтрОтражениеВУчете.СуммаВР = 0;
						//КонецЕсли; 
						
						Если  СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.03") И СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.11") Тогда
							    	   СтрОтражениеВУчете.СуммаПР = 0;
									   СтрОтражениеВУчете.СуммаНУ = 0;
									   СтрОтражениеВУчете.СуммаВР = 0;
									   
							Стр26Новая = ТЧОтражениеВУчете.Добавить();
							ЗаполнитьЗначенияСвойств(Стр26Новая,СтрОтражениеВУчете);
							Стр26Новая.СубконтоДт1 = СтрОтражениеВУчете.СубконтоДт1;
							Стр26Новая.СуммаНУ = 0;
							Стр26Новая.СуммаВР = СтрОтражениеВУчете.Сумма * (-1);
							Стр26Новая.СуммаПР = 0;
							Стр26Новая.Сумма = 0;
							Стр26Новая.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.03");
							Стр26Новая.СубконтоКт1 = СтрОтражениеВУчете.СубконтоДт1;
							
							
							Стр26Новая = ТЧОтражениеВУчете.Добавить();
							ЗаполнитьЗначенияСвойств(Стр26Новая,СтрОтражениеВУчете);
							Стр26Новая.СубконтоДт1 = СтрОтражениеВУчете.СубконтоДт1;
							Стр26Новая.СуммаНУ = СтрОтражениеВУчете.Сумма;
							Стр26Новая.СуммаВР = 0;
							Стр26Новая.СуммаПР = 0;
							Стр26Новая.Сумма = 0;

							

						КонецЕсли;   
						
						
						
					КонецЦикла;	
			Конецесли;

			
			//2509кра --- 20220523 Дт 26 Кт 69.11
			
			
			
			//Если мИнтерактивноеОткрытиОбработки Тогда
			//	Объект.Записать();
			//КонецЕсли;
		Иначе
			//формируем ТЗ по списку сотрудников - код сотрудника
			
			ТЗ_КодСотрудника = ТЗ.Скопировать();
			ТЗ_КодСотрудника.Свернуть("Табн");
			//ДокументДо = Документ.ПолучитьОбъект().Скопировать();
			Для Каждого СтрТЗ_КодСотрудника ИЗ ТЗ_КодСотрудника Цикл
				 Отбор = Новый Структура;
				 Отбор.Вставить("Табн",СтрТЗ_КодСотрудника.Табн);
				 ТЗ_сотрудник = ТЗ.Скопировать(Отбор);
				 // копируем документ 
				 //Документ = ДокументДО.Скопировать();
				 //Документ.Записать();
				 
				 //Документ.Дата = ДокументДО.Дата;
				 //Документ.Записать();
				//// ДокументДо = Документ.ПолучитьОбъект().Скопировать();
				//// ДокументДо.Дата = Документ.Дата;
				//// ДокументДо.Комментарий = СтрТЗ_КодСотрудника.Табн+" - "+Формат(ТекущаяДата(),"ДЛФ=ДВ");
				//// ДокументДо.Записать();
				//// Объект = ДокументДо.Ссылка.ПолучитьОбъект();
				////Если ОчиститьТЧ Тогда
				////	Объект.ОтражениеВУчете.Очистить();
				////КонецЕсли;
				
				
				ТабЧасть = ЭтотОбъект.ОтражениеВУчете;
				 
				 
				 // Сам Процесс создания документа
				 ТЗСтрВзн = ТЗ_сотрудник.Скопировать();
				//Сообщить("Перед началом");
				ТЗСтрВзн.Свернуть("Видоплаты,СчетДт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоДт4,СубконтоДт5,СубконтоДт6,СубконтоДт7,СчетКт,СубконтоКт1,СубконтоКт2,СубконтоКт3,СубконтоКт4,СубконтоКт5", "Сумма");
				ТЗСтрВзн.Сортировать("Видоплаты,СчетДт,СчетКт,СубконтоДт1,СубконтоКт1,СубконтоДт2,СубконтоКт2,СубконтоДт3,СубконтоКт3");
				//Сообщить("ВидОплаты;СчетДт;СубконтоДт1;СубконтоДт2;СубконтоДт3;СубконтоДт4;СубконтоДт5;СубконтоДт6;СубконтоДт7;СчетКт;СубконтоКт1;СубконтоКт2;СубконтоКт3;СубконтоКт4;СубконтоКт5;Сумма");
				Для Каждого СтрТЗ ИЗ  ТЗСтрВзн Цикл
					Сообщить(СтрТЗ.Видоплаты+";"+СтрТЗ.СчетДт+";"+СтрТЗ.СубконтоДт1+";"+СтрТЗ.СубконтоДт2+";"+СтрТЗ.СубконтоДт3+";"+СтрТЗ.СубконтоДт4+";"+СтрТЗ.СубконтоДт5+";"+СтрТЗ.СубконтоДт6+";"+СтрТЗ.СубконтоДт7+";"+СтрТЗ.СчетКт+";"+СтрТЗ.СубконтоКт1+";"+СтрТЗ.СубконтоКт2+";"+СтрТЗ.СубконтоКт3+";"+СтрТЗ.СубконтоКт4+";"+СтрТЗ.СубконтоКт5+";"+Строка(СтрТЗ.Сумма));	
				КонецЦикла;	
				Сообщить("Завершение перед началом"+Символы.ПС);
				
				Отбор = Новый Структура;
				Отбор.Вставить("СубконтоДт2","8000");
				МассивСтрВзн = ТЗ_сотрудник.НайтиСтроки(Отбор);
				ТЗСтрВзн = ТЗ_сотрудник.Скопировать(МассивСтрВзн);
				Для Каждого СТЗ Из МассивСтрВзн Цикл
					ТЗ_сотрудник.Удалить(СТЗ);
				КонецЦикла;
				ТЗСтрВзн.ЗаполнитьЗначения("","Табн");
				ТЗСтрВзн.ЗаполнитьЗначения("","СубконтоДт1");
				ТЗСтрВзн.Свернуть("Табн,ДляПериод,ВПериод,Видоплаты,ТекстВидаОплаты,СчетДт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоДт4,СубконтоДт6,СубконтоДт7,СчетКт,СубконтоКт1,СубконтоКт2,СубконтоКт3,СубконтоКт4,СубконтоКт5,Содержание,Количество,СубконтоДт5,Валюта", "Сумма");
				й = 0;
				Для Каждого стрТЗ Из ТЗ_сотрудник Цикл
					//ОбработкаПрерыванияПользователя();
					//Состояние("Заполнение строк "+Строка(Формат(?(ТЗ_сотрудник.Количество()=0,0,((100*й)/ТЗ_сотрудник.Количество())),"ЧЦ=3; ЧДЦ=0"))+" %");
					
					СтруктураСтрТЧ = ПолучитьСтруктуруСтрокиТабЧасти(стрТЗ);
					
					Если СтруктураСтрТЧ <> Неопределено Тогда
						НовСтрТЧ = ТабЧасть.Добавить();
						ЗаполнитьЗначенияСвойств(НовСтрТЧ, СтруктураСтрТЧ);
						//Если Год(Дата(стрТЗ.ДляПериод+"01"))=Год(ТекущаяДата())Тогда
							Если СтруктураСтрТЧ.ВидОплатыИАСУП = "9RA1" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8RA1" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8RA2" 
								ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "9S01" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8S01" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8S02" Тогда
								НовСтрТЧ.СуммаВР = СтруктураСтрТЧ.Сумма;
							ИначеЕсли Не мМассивПроводкиПоРезервуОтпусков.Найти(СтруктураСтрТЧ.ВидОплатыИАСУП) = Неопределено и СтруктураСтрТЧ.СчетДт.Код = "96.01" Тогда
								ОбработатьСтрокуРезерваПоОтпускм(СтруктураСтрТЧ, ТабЧасть, стрТЗ);
								//НовСтрТЧ.СуммаНУ = СтруктураСтрТЧ.Сумма;
							ИначеЕсли СтруктураСтрТЧ.ВидОплатыИАСУП = "922A" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8B1A" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8B2A" ИЛИ
								СтруктураСтрТЧ.ВидОплатыИАСУП = "922K" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8BK1" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "8BK2" Тогда 
								НовСтрТЧ.СуммаВР = СтруктураСтрТЧ.Сумма;
							ИначеЕсли Не мМассивПроводкиПоРезервуКПЭ.Найти(СтруктураСтрТЧ.ВидОплатыИАСУП) = Неопределено и СтруктураСтрТЧ.СчетДт.Код = "96.03" Тогда 
								ОбработатьСтрокуРезерваПоОтпускм(СтруктураСтрТЧ, ТабЧасть, стрТЗ);
								//НовСтрТЧ.СуммаНУ = СтруктураСтрТЧ.Сумма;
							ИначеЕсли СтруктураСтрТЧ.ВидОплатыИАСУП = "3492" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "3493" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "2006"
								ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "2007" ИЛИ СтруктураСтрТЧ.ВидОплатыИАСУП = "1420" Тогда
								НовСтрТЧ.СуммаНУ = 0;
								НовСтрТЧ.СуммаПР = СтруктураСтрТЧ.Сумма;
							Иначе
								НовСтрТЧ.СуммаНУ = СтруктураСтрТЧ.Сумма;
							КонецЕсли;
						//Иначе
						//	НовСтрТЧ.СуммаНУ = СтруктураСтрТЧ.Сумма;
						//КонецЕсли;
					КонецЕсли;
					й = й+1;	
				КонецЦикла;
				
				й = 0;
				Для Каждого стрТЗ Из ТЗСтрВзн Цикл
					//ОбработкаПрерыванияПользователя();
					//Состояние("Заполнение строк "+Строка(Формат(?(ТЗСтрВзн.Количество()=0,0,((100*й)/ТЗСтрВзн.Количество())),"ЧЦ=3; ЧДЦ=0"))+" %");
					
					СтруктураСтрТЧ = ПолучитьСтруктуруСтрокиТабЧасти(стрТЗ);
					
					Если СтруктураСтрТЧ <> Неопределено Тогда
						НовСтрТЧ = ТабЧасть.Добавить();
						ЗаполнитьЗначенияСвойств(НовСтрТЧ, СтруктураСтрТЧ);
						НовСтрТЧ.СуммаНУ = СтруктураСтрТЧ.Сумма;
					КонецЕсли;
					й = й+1;	
				КонецЦикла;
				
			//КонецЦикла;
			
			
			// 2509кра +++ 20211227 грубая замена ИФНС и субконто в АО АЭС
			ТЧОтражениеВУчете = Объект.ОтражениеВУчете;
				номерСтр = 1;
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 1: Обработана строка  "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					
					Если СтрОтражениеВУчете.СчетДт  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.02")
						И  СтрОтражениеВУчете.СубконтоДт1 <> Справочники.Резервы.НайтиПоКоду("000000013") 
						И  ТипЗнч(СтрОтражениеВУчете.СубконтоДт1) <> Тип("СправочникСсылка.Резервы") Тогда
						   СтрОтражениеВУчете.СубконтоДт1  = Справочники.Резервы.НайтиПоКоду("000000013");
					КонецЕсли;   
					Если СтрОтражениеВУчете.СчетДт  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02")
						И  СтрОтражениеВУчете.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("2610100") Тогда   
							СтрОтражениеВУчете.СубконтоДт1  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("25901000"); //3000000 //2509кра 20211230
					КонецЕсли; 
					Если СтрОтражениеВУчете.СчетДт  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02")
						И  (ТипЗнч(СтрОтражениеВУчете.СубконтоДт1) = Тип("СправочникСсылка.ПодразделенияОрганизаций") ИЛИ Строка(СтрОтражениеВУчете.СубконтоДт1)="" )Тогда   
							СтрОтражениеВУчете.СубконтоДт1  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("25901000"); //3000000  
					КонецЕсли; 
					Если СтрОтражениеВУчете.СчетДт  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02")
						И  СтрОтражениеВУчете.СубконтоДт1 = НЕОПРЕДЕЛЕНО  Тогда   
							СтрОтражениеВУчете.СубконтоДт1  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("25901000"); //3000000 
					КонецЕсли; 
					Если СтрОтражениеВУчете.СчетДт  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02")
						И  Строка(СтрОтражениеВУчете.СубконтоДт1)="" Тогда   
							СтрОтражениеВУчете.СубконтоДт1  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("25901000"); //3000000 
					КонецЕсли; 
					
					
					
						
					Если СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.01")
						И СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030100")
						И СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.01")  Тогда
						 СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030200");
						
					КонецЕсли;	
					
					
					Если
						//(СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.01") ИЛИ СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("26"))
						СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.02")
						И СтрОтражениеВУчете.СубконтоКт1 <> Справочники.Резервы.НайтиПоКоду("000000015") Тогда
						 СтрОтражениеВУчете.СубконтоКт1 = Справочники.Резервы.НайтиПоКоду("000000015");
						
					КонецЕсли;	
					
					Если
						СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02")
						И СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70")
						Тогда
						СтрОтражениеВУчете.СуммаВР = СтрОтражениеВУчете.СуммаНУ;
						СтрОтражениеВУчете.СуммаНУ = 0;
						
					КонецЕсли;	
						
				КонецЦикла;	

			
			
			
			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
			//	ТЧОтражениеВУчете = Объект.ОтражениеВУчете;
				номерСтр = 1;
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 2: Обработана строка "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					
					Если СтрОтражениеВУчете.СубконтоКт2 = Справочники.РегистрацияВИФНС.НайтиПоКоду("9976") Тогда
						 СтрОтражениеВУчете.СубконтоКт2 = Справочники.РегистрацияВИФНС.НайтиПоНаименованию("АО ""АтомЭнергоСбыт"" ИФНС № 25 (с 12.10.2016г.)");
					КонецЕсли;	
					
					 
					Если (СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("26") ИЛИ СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.01"))
						И СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.01")
						И СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030100")
						И СтрОтражениеВУчете.СубконтоКт1 = Справочники.Резервы.НайтиПоКоду("000000001")
						Тогда 
					       СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030200");
					КонецЕсли;
					   
					   
					Если (СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("26") ИЛИ СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.01"))
						И СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.01")
						И СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500100")
						И СтрОтражениеВУчете.СубконтоКт1 = Справочники.Резервы.НайтиПоКоду("000000001")
						Тогда 
					       СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500200");
					КонецЕсли;
		   
					   
					   
					   
					   
				КонецЦикла;	
			Конецесли;
			
			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда

				ЭлПодразделениеДт = "" ;
				ЭлПодразделениеКт = "" ;

				
				номерСтр = 1;

				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 3: Обработана строка  "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество())+" - заполняем пустой реквизит Подразделение...");
					номерСтр = номерСтр + 1;
					Если Строка(СтрОтражениеВУчете.ПодразделениеДт) <> ""  Тогда
						ЭлПодразделениеДт = СтрОтражениеВУчете.ПодразделениеДт;
					Конецесли;
					Если Строка(СтрОтражениеВУчете.ПодразделениеКт) <> ""  Тогда
						ЭлПодразделениеКт = СтрОтражениеВУчете.ПодразделениеКт;
					Конецесли;

					
				КонецЦикла;
				
				
				Если Строка(ЭлПодразделениеДт) = "" И Строка(ЭлПодразделениеКт) <> "" Тогда
					   ЭлПодразделениеДт = ЭлПодразделениеКт;
				Конецесли;
				Если Строка(ЭлПодразделениеКт) = "" И Строка(ЭлПодразделениеДт) <> "" Тогда
					   ЭлПодразделениеКт = ЭлПодразделениеДт;
				Конецесли;
				   
				   
				номерСтр = 1;
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					номерСтр = номерСтр + 1;
					
					Если Строка(СтрОтражениеВУчете.ПодразделениеДт) = "" И Строка(ЭлПодразделениеДт) <> "" Тогда
						СтрОтражениеВУчете.ПодразделениеДт = ЭлПодразделениеДт;				 
					КонецЕсли;	
					
					Если Строка(СтрОтражениеВУчете.ПодразделениеКт) = "" И Строка(ЭлПодразделениеКт) <> "" Тогда
						
						 СтрОтражениеВУчете.ПодразделениеКт = ЭлПодразделениеКт;	
					КонецЕсли;	
					
					
				КонецЦикла;   
				   
			КонецЕсли;
			
			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
				номерСтр = 1;

				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 4: Обработана строка  "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					Если СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44") Тогда
						Если  СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.01") Тогда
							Если СтрОтражениеВУчете.Сумма = 0 Тогда
								Если СтрОтражениеВУчете.СуммаВР < 0 Тогда
									Если СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500100") Тогда
										Если СтрОтражениеВУчете.СубконтоКт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("000000001") Тогда
											СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500200")
										КонецЕсли;	
									КонецЕсли;	
								 Конецесли;
							КонецЕсли;	
						КонецЕсли;	
					КонецЕсли;	
					
					Если СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44") Тогда
						Если  СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.01") Тогда
							Если СтрОтражениеВУчете.Сумма = 0 Тогда
								Если СтрОтражениеВУчете.СуммаВР < 0 Тогда
									Если СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030100") Тогда
										Если СтрОтражениеВУчете.СубконтоКт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("000000001") Тогда
											СтрОтражениеВУчете.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030200")
										КонецЕсли;	
									КонецЕсли;	
								 Конецесли;
							КонецЕсли;	
						КонецЕсли;	
					КонецЕсли;
					
					
					
				КонецЦикла;
			КонецЕсли;

			
			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
			//	ТЧОтражениеВУчете = Объект.ОтражениеВУчете;
				номерСтр = 1;
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 5: Обработана строка "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					
					Если  СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.09.3") И СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70") Тогда
						Если Строка(СтрОтражениеВУчете.СубконтоКт1) = "" Тогда
							СтрОтражениеВУчете.СубконтоКт1 = Справочники.Контрагенты.НайтиПоКоду("00013576");
							СтрОтражениеВУчете.СубконтоКт2 = Справочники.ДоговорыКонтрагентов.НайтиПоКоду("000017254");

							
							
						КонецЕсли;
					КонецЕсли;   
					   
				КонецЦикла;	
			Конецесли;

			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
			//	ТЧОтражениеВУчете = Объект.ОтражениеВУчете;
				номерСтр = 1;
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 6: Обработана строка "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					
					Если  СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70") И СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02")
						И (СтрОтражениеВУчете.ВидОплатыИАСУП = "5265" ИЛИ СтрОтражениеВУчете.ВидОплатыИАСУП = "5311")Тогда
						   СтрОтражениеВУчете.СуммаПР = СтрОтражениеВУчете.Сумма;
						   СтрОтражениеВУчете.СуммаНУ = 0;
						   СтрОтражениеВУчете.СуммаВР = 0;
					КонецЕсли;   
					   
				КонецЦикла;	
			Конецесли;

			
			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
			//	ТЧОтражениеВУчете = Объект.ОтражениеВУчете;
				номерСтр = 1;
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
					//Состояние("Действие 7: Обработана строка "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					
					Если  СтрОтражениеВУчете.ВидОплатыИАСУП = "4431" Тогда
						   СтрОтражениеВУчете.СуммаПР = 0;
						   СтрОтражениеВУчете.СуммаНУ = СтрОтражениеВУчете.Сумма;
						   СтрОтражениеВУчете.СуммаВР = 0;
					   КонецЕсли; 
					   
					Если  СтрОтражениеВУчете.ВидОплатыИАСУП = "4452" ИЛИ СтрОтражениеВУчете.ВидОплатыИАСУП = "4458" Тогда
						   СтрОтражениеВУчете.СуммаПР = СтрОтражениеВУчете.Сумма;
						   СтрОтражениеВУчете.СуммаНУ = 0;
						   СтрОтражениеВУчете.СуммаВР = 0;
					КонецЕсли;     
					
					
					Если  СтрОтражениеВУчете.ВидОплатыИАСУП = "4452" ИЛИ СтрОтражениеВУчете.ВидОплатыИАСУП = "4458" Тогда
						   СтрОтражениеВУчете.СуммаПР = СтрОтражениеВУчете.Сумма;
						   СтрОтражениеВУчете.СуммаНУ = 0;
						   СтрОтражениеВУчете.СуммаВР = 0;
					КонецЕсли; 
					
					Если  СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44") Тогда
						   СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.01"); 
					КонецЕсли;   
					
					
					
				КонецЦикла;	
			Конецесли;

			
			//2509кра +++ 20220523 Дт 26 Кт 69.11
			
			    Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
					номерСтр = 0;
					КолСтрТЧОтражениеВУчете = ТЧОтражениеВУчете.Количество();
					Пока номерСтр < КолСтрТЧОтражениеВУчете Цикл
						СтрОтражениеВУчете = ТЧОтражениеВУчете.Получить(номерСтр);
						номерСтр = номерСтр + 1;
						//Состояние("Действие 8: Обработана строка "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
						
						
						//Если  СтрОтражениеВУчете.ВидОплатыИАСУП = "4431" Тогда
						//	   СтрОтражениеВУчете.СуммаПР = 0;
						//	   СтрОтражениеВУчете.СуммаНУ = СтрОтражениеВУчете.Сумма;
						//	   СтрОтражениеВУчете.СуммаВР = 0;
						//   КонецЕсли; 
						//   
						//Если  СтрОтражениеВУчете.ВидОплатыИАСУП = "4452" ИЛИ СтрОтражениеВУчете.ВидОплатыИАСУП = "4458" Тогда
						//	   СтрОтражениеВУчете.СуммаПР = СтрОтражениеВУчете.Сумма;
						//	   СтрОтражениеВУчете.СуммаНУ = 0;
						//	   СтрОтражениеВУчете.СуммаВР = 0;
						//КонецЕсли;     
						//
						//
						//Если  СтрОтражениеВУчете.ВидОплатыИАСУП = "4452" ИЛИ СтрОтражениеВУчете.ВидОплатыИАСУП = "4458" Тогда
						//	   СтрОтражениеВУчете.СуммаПР = СтрОтражениеВУчете.Сумма;
						//	   СтрОтражениеВУчете.СуммаНУ = 0;
						//	   СтрОтражениеВУчете.СуммаВР = 0;
						//КонецЕсли; 
						
						Если  СтрОтражениеВУчете.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.03") И СтрОтражениеВУчете.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.11") Тогда
							    	   СтрОтражениеВУчете.СуммаПР = 0;
									   СтрОтражениеВУчете.СуммаНУ = 0;
									   СтрОтражениеВУчете.СуммаВР = 0;
									   
							Стр26Новая = ТЧОтражениеВУчете.Добавить();
							ЗаполнитьЗначенияСвойств(Стр26Новая,СтрОтражениеВУчете);
							Стр26Новая.СубконтоДт1 = СтрОтражениеВУчете.СубконтоДт1;
							Стр26Новая.СуммаНУ = 0;
							Стр26Новая.СуммаВР = СтрОтражениеВУчете.Сумма * (-1);
							Стр26Новая.СуммаПР = 0;
							Стр26Новая.Сумма = 0;
							Стр26Новая.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.03");
							Стр26Новая.СубконтоКт1 = СтрОтражениеВУчете.СубконтоДт1;
							
							
							Стр26Новая = ТЧОтражениеВУчете.Добавить();
							ЗаполнитьЗначенияСвойств(Стр26Новая,СтрОтражениеВУчете);
							Стр26Новая.СубконтоДт1 = СтрОтражениеВУчете.СубконтоДт1;
							Стр26Новая.СуммаНУ = СтрОтражениеВУчете.Сумма;
							Стр26Новая.СуммаВР = 0;
							Стр26Новая.СуммаПР = 0;
							Стр26Новая.Сумма = 0;
														

							

						КонецЕсли;   
						
						
						
					КонецЦикла;	
			Конецесли;

			
			//2509кра --- 20220523 Дт 26 Кт 69.11

			
			
			
			
			
			Если Объект.Организация = Справочники.Организации.НайтиПоКоду("000000002") Тогда
			//	ТЧОтражениеВУчете = Объект.ОтражениеВУчете;
				номерСтр = 1;
				
				ТЧОтражениеВУчетеТаблицаЗначений = Объект.ОтражениеВУчете.Выгрузить();
				
				ТЧОтражениеВУчетеТаблицаЗначений.Свернуть("СчетДт,СубконтоДт1,СубконтоДт2,СубконтоДт3,ПодразделениеДт,СчетКт,СубконтоКт1,СубконтоКт2,СубконтоКт3,ПодразделениеКт","Сумма,СуммаПР,СуммаВР,СуммаНУ");
				ТЧОтражениеВУчетеТаблицаЗначений.Сортировать("СчетДт, СчетКт");
				//ОчиститьСообщения();
				//Сообщить("СчетДт;СубконтоДт1;СубконтоДт2;СубконтоДт3;ПодразделениеДт;СчетКт;СубконтоКт1;СубконтоКт2;СубконтоКт3;ПодразделениеКт;Сумма;СуммаПР;СуммаВР;СуммаНУ");
				//Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчете Цикл
				Для Каждого СтрОтражениеВУчете ИЗ ТЧОтражениеВУчетеТаблицаЗначений Цикл
					//Состояние("Действие - Выгрузка в CSV: Обработана строка "+Строка(номерСтр)+" из "+Строка(ТЧОтражениеВУчете.Количество()));
					номерСтр = номерСтр + 1;
					СтрДт =  Строка(СтрОтражениеВУчете.СчетДт)+";"+Строка(СтрОтражениеВУчете.СубконтоДт1)+";"+Строка(СтрОтражениеВУчете.СубконтоДт2)+";"+Строка(СтрОтражениеВУчете.СубконтоДт3)+";"+Строка(СтрОтражениеВУчете.ПодразделениеДт)+";";
					СтрКт =  Строка(СтрОтражениеВУчете.СчетКт)+";"+Строка(СтрОтражениеВУчете.СубконтоКт1)+";"+Строка(СтрОтражениеВУчете.СубконтоКт2)+";"+Строка(СтрОтражениеВУчете.СубконтоКт3)+";"+Строка(СтрОтражениеВУчете.ПодразделениеКт)+";";
					//Сумма;СуммаПР;СуммаВР;СуммаНУ
					СтрСуммы = Строка(Формат(СтрОтражениеВУчете.Сумма,"ЧГ="))+";"+Строка(Формат(СтрОтражениеВУчете.СуммаПР,"ЧГ="))+";"+Строка(Формат(СтрОтражениеВУчете.СуммаВР,"ЧГ="))+";"+Строка(Формат(СтрОтражениеВУчете.СуммаНУ,"ЧГ="));
					
					Сообщить(СтрДт+СтрКт+СтрСуммы);
					   
					   
					   
					   
					   
				КонецЦикла;	
			Конецесли;

				 
				 Объект.Записать();
			     //
			 КонецЦикла;
			 Объект.Записать();
			 //Документ = ДокументДо;
		КонецЕсли;
		
		
			
			
			
			
			Если мИнтерактивноеОткрытиОбработки Тогда
				Объект.Записать();
			КонецЕсли;

КонецПроцедуры

Процедура ОбработатьСтрокуРезерваПоОтпускм(СтрокаТЧ, ТабЧасть, стрТЗ);
	
	////Строно НУ
	//НоваяСтрока = ТабЧасть.Добавить();
	//ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
	//НоваяСтрока.СуммаНУ	= НоваяСтрока.Сумма *-1;
	//НоваяСтрока.Сумма	= 0;
	
	//Сторно ВР
	НоваяСтрока = ТабЧасть.Добавить();
	НоваяСтрока.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ);
	НоваяСтрока.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
	Если СтрокаТЧ.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда Тогда 
		НоваяСтрока.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030100");
	ИначеЕсли Не МассивСчетовПоПроводкамРезерва.Найти(СтрокаТЧ.СчетКт) = Неопределено Тогда
		НоваяСтрока.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500100");
	ИначеЕсли СтрокаТЧ.СчетКт = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ Тогда 
		НоваяСтрока.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500100");
	КонецЕсли;
	НоваяСтрока.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
	НоваяСтрока.СчетКт 		= СтрокаТЧ.СчетДт;
	НоваяСтрока.СубконтоКт1 = СтрокаТЧ.СубконтоДт1;
	НоваяСтрока.СуммаВР 	= СтрокаТЧ.Сумма*-1;
	НоваяСтрока.СтрокаИАСУП = СтрокаТЧ.СтрокаИАСУП;

	//НУ
	НоваяСтрока = ТабЧасть.Добавить();
	НоваяСтрока.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ);
	НоваяСтрока.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
	Если СтрокаТЧ.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда Тогда 
		НоваяСтрока.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20010200");
	ИначеЕсли Не МассивСчетовПоПроводкамРезерва.Найти(СтрокаТЧ.СчетКт) = Неопределено Тогда
		НоваяСтрока.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30000000");
	ИначеЕсли СтрокаТЧ.СчетКт = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ Тогда 
		НоваяСтрока.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30000001");
	КонецЕсли;
	НоваяСтрока.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
	НоваяСтрока.СчетКт 		= СтрокаТЧ.СчетКт;
	НоваяСтрока.СубконтоКт1 = СтрокаТЧ.СубконтоКт1;
	НоваяСтрока.СуммаНУ 	= СтрокаТЧ.Сумма;
	НоваяСтрока.СтрокаИАСУП = СтрокаТЧ.СтрокаИАСУП;
	
КонецПроцедуры

Процедура ВыбратьКаталог() Экспорт
	
	//Режим = РежимДиалогаВыбораФайла.Открытие;
	//ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	////ДиалогОткрытияФайла.Фильтр = "*.*";
	////ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	//ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	//ДиалогОткрытияФайла.Заголовок = "Выберите каталог для загрузки";
	//Если ДиалогОткрытияФайла.Выбрать() = Ложь Тогда
	//	ТекстСообщения = "ru = ""Каталог для загрузки не выбран!""";
	//	Предупреждение(НСтр(ТекстСообщения));
	//	Возврат;
	//Иначе
	//	Каталог = ДиалогОткрытияФайла.ПолноеИмяФайла;
	//КонецЕсли;

	
КонецПроцедуры

Функция ПрочитатьЦСВ(ИмяФайла, Разделитель = ";")
	
	ТЗ = Новый ТаблицаЗначений;
	
	ЗагружаемыйФайл = Новый ТекстовыйДокумент;
	ЗагружаемыйФайл.Прочитать(ИмяФайла);
	
	//Сообщить(КодСимвола("А"));
	//Сообщить(КодСимвола("Я"));
	//шапка по умолчанию 1 строка, из первой строки делаем колонки таблицы
	Шапка = ЗагружаемыйФайл.ПолучитьСтроку(1);
	УдалитьРазделительВКонцеСтроки(Шапка, Разделитель);
	
	
		
	
	//раскладываем строку в массив
	МассивКолонок = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Шапка,Разделитель);
	
	//генерируем колонки	
	ОписаниеЧисла = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой));
	Для Каждого ИмяКолонки Из МассивКолонок Цикл
		
		ИмяБезПробелов = ПолучитьНормализованнуюСтроку(ИмяКолонки); // убираем из имени колонок пробелы
		Если ИмяБезПробелов = "Сумма" Тогда
			ТЗ.Колонки.Добавить(ИмяБезПробелов,ОписаниеЧисла,ИмяКолонки); 		
		Иначе
			ТЗ.Колонки.Добавить(ИмяБезПробелов,,ИмяКолонки); 		
		КонецЕсли;
		
	КонецЦикла;
	
	
	Для НомерСтроки=2 по ЗагружаемыйФайл.КоличествоСтрок() Цикл
		
		//Состояние("Чтение файла "+Строка(Формат(?(ЗагружаемыйФайл.КоличествоСтрок()=0,0,((100*НомерСтроки)/ЗагружаемыйФайл.КоличествоСтрок())),"ЧЦ=3; ЧДЦ=0"))+" %");
		//ОбработкаПрерыванияПользователя(); //указав данный оператор, цикл можно прервать в любой момент нажатие ctrl+break
		
		// получить строку файла с указанным номером и преобразуем её в массив
		Строка = ЗагружаемыйФайл.ПолучитьСтроку(НомерСтроки);
		УдалитьРазделительВКонцеСтроки(Строка, Разделитель);

		МассивКолонок = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Строка,Разделитель);
		Если Лев(МассивКолонок[5],1) = "N" Или СокрЛП(МассивКолонок[3]) = "/863" Тогда
			Продолжить;
		КонецЕсли;
		Если СокрЛП(МассивКолонок[3]) = "X563" Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТЗ.Добавить();
		
		Если МассивКолонок.Количество() <> ТЗ.Колонки.Количество() Тогда
			Сообщить("Ошибка со строкой " + Строка);
			Продолжить; // скорее всего в тексте содержит разделитель
		КонецЕсли;
		
		Для НомерКолонки = 1 по МассивКолонок.Количество() Цикл 
			//заполняем строку значениями
			ТекущееЗначение = МассивКолонок[НомерКолонки-1];
			ИмяКолонки = ТЗ.Колонки[НомерКолонки-1].Имя; 
			Если ИмяКолонки = "Сумма" Тогда
				ТекущееЗначение = Число(СтрЗаменить(ТекущееЗначение,",","."));
			КонецЕсли;
			НоваяСтрока[ИмяКолонки] = ТекущееЗначение;			
		КонецЦикла;   		
		
	КонецЦикла;   
	
	Возврат ТЗ;
	
КонецФункции

Функция ПрочитатьCSV(Папка, ИмяФайла, КолПолей)

    // Параметры:

    // "Папка" - путь к файлу без имени файла с завершающим слешем,

    // "ИмяФайла" - имя файла,

    // "КолПолей" - количество колонок (число).

    // Функция возвращает ТаблицуЗначений с данными файла.



    Текст = "[" + ИмяФайла + "]

    |ColNameHeader=False

    |Format=Delimited(;)

    |TextDelimiter=none

    |CharacterSet=ANSI

    |";

    Для ы = 1 По КолПолей Цикл

        Текст = Текст + "Col" + ы + "=Field" + ы + " Text" + Символы.ПС;

    КонецЦикла;

    ТекстДок = Новый ТекстовыйДокумент;

    ТекстДок.УстановитьТекст(Текст);

    ТекстДок.Записать(Папка + "Schema.ini");



    objRec = Новый COMОбъект("ADODB.Recordset");

    strQuery = "SELECT * FROM [" + ИмяФайла + "]";

    strConn = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + Папка + ";Extended Properties=""text;""";

    adOpenStatic = 3;

    adLockOptimistic = 3;

    adCmdText = 1;

    ТаблЗнач = Новый ТаблицаЗначений;

    Для ы = 1 По КолПолей Цикл

        ТаблЗнач.Колонки.Добавить();

    КонецЦикла;



    objRec.Open(strQuery, strConn, adOpenStatic, adLockOptimistic, adCmdText);

    КолСтрок = objRec.RecordCount;

    Ном = 1;

    Пока Не objRec.EOF Цикл

        Если Ном % 500 = 0 Тогда

            //Состояние(ИмяФайла + " " + Ном + " из " + КолСтрок);

        КонецЕсли;

        НовСтр = ТаблЗнач.Добавить();

        Для i=0 По objRec.Fields.Count-1 Цикл

            НовСтр[i] = Строка(objRec.Fields(i).Value);

        КонецЦикла;

        objRec.MoveNext();

        Ном = Ном + 1;

    КонецЦикла;

    objRec.Close();

    Возврат ТаблЗнач;

КонецФункции


Функция ПолучитьНормализованнуюСтроку(ТекСтрока)
	
	НормСтрока = СокрЛП(ТекСтрока);
	
	//НормСтрока = НРег(НормСтрока);
	
	//ОбщегоНазначения.толькобуквы
	
	//удаляем лишние пробелы
	Пока Найти(НормСтрока, " ") > 0 Цикл
		НормСтрока = СтрЗаменить(НормСтрока, " ", "");
	КонецЦикла;
	
	
	РезСтрока = "";
	ДлинаНормСтроки = СтрДлина(НормСтрока);
	
	//оставляем только буквы, цифры и пробелы
	Для ы = 1 По ДлинаНормСтроки Цикл
		ТекНормСимвол = Сред(НормСтрока, ы, 1);
		Если ЭтоЦифраИлиБукваНРегИлиПробел(ТекНормСимвол) Тогда
			РезСтрока = РезСтрока + ТекНормСимвол;
		Иначе
			//вместо спецсивола ставим пробел
			РезСтрока = РезСтрока + " ";
			//Если мМассивСпецСимволов.Найти(ТекНормСимвол) = Неопределено Тогда	
			//	мМассивСпецСимволов.Добавить(ТекНормСимвол);
			//КонецЕсли;
		КонецЕсли;			
	КонецЦикла;
	
	//удаляем лишние пробелы
	Пока Найти(РезСтрока, " ") > 0 Цикл
		РезСтрока = СтрЗаменить(РезСтрока, " ", "");
	КонецЦикла;
	
	Возврат РезСтрока;

КонецФункции // ПолучитьНормализованнуюСтроку(ТекСтрока)()


Функция ЭтоЦифраИлиБукваНРегИлиПробел(ТекСимв)
	
	//а - 1 072
	//я - 1 103
	//0 - 48
	//1 - 49
	//9 - 57	
	КодСимв = КодСимвола(ТекСимв);

	
	Если КодСимв >= 1072 И КодСимв <= 1103
		Или КодСимв >= 1040 И КодСимв <= 1071
		Или КодСимв >= 48 И КодСимв <= 57
		Или КодСимв = 32
		Тогда
		
		Возврат Истина;
		
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Процедура УдалитьРазделительВКонцеСтроки(ТекСтрока, Разделитель)
	
	Если Прав(ТекСтрока, 1) = Разделитель Тогда
		ТекСтрока = Лев(ТекСтрока, СтрДлина(ТекСтрока)-1);
	КонецЕсли;
	
КонецПроцедуры


Функция ПолучитьСтруктуруСтрокиТабЧасти(стрТЗ)

	//стрТЗ  Табн.;ДляПериод;ВПериод;Видоплаты;ТекстВидаОплаты;СчетДт;СубконтоДт1;СубконтоДт2;СубконтоДт3;СубконтоДт4;СубконтоДт6;СубконтоДт7;СчетКт;СубконтоКт1;СубконтоКт2;СубконтоКт3;СубконтоКт4;СубконтоКт5;Содержание;Количество;Сумма;СубконтоДт5;Валюта
	//условие точки останова
	//стрТЗ.Видоплаты = "0020"
	
	//иногда пропадают лидирующие нули
	Попытка
		ВидОплатыФормат= Формат(Число(стрТЗ.Видоплаты), "ЧЦ=4; ЧВН=; ЧГ=0");
	Исключение
		ВидОплатыФормат = СокрЛП(стрТЗ.Видоплаты);
	КонецПопытки;
	
	Если мМассивБезПроводок.Найти(ВидОплатыФормат) <> Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НетПодразделенияПоМВЗ = Ложь;
	ЕстьОшибки = Ложь;
	ДопТекстСтрокиТЧ = "";
	КолонкиТЗ = стрТЗ.Владелец().Колонки;
	РезСтр = Новый Структура("СчетДт, СубконтоДт1, СубконтоДт2, СубконтоДт3, СчетКт, СубконтоКт1, СубконтоКт2, СубконтоКт3, Сумма, ОтражениеВУСН, ВидРасчета, Физлицо, ВидНачисленияПоСт255НК, ВидНачисленияУдержания, ПодразделениеДт, ПодразделениеКт, СуммаПР, СуммаВР, СуммаНУ, СтрокаИАСУП, ВидОплатыИАСУП, ТекстВидаОплатыИАСУП");
	Если Ложь Тогда
		//чтоб работало через точку
		РезСтр = Документы.ОтражениеЗарплатыВРеглУчете.СоздатьДокумент().ОтражениеВУчете.Добавить();
	КонецЕсли;
	
	Если ВидОплатыФормат = "/322" ИЛИ ВидОплатыФормат = "/32E" ИЛИ ВидОплатыФормат = "/32F" Тогда
		
		Если стрТЗ.СчетДт = "7000000000" Тогда
			РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		ИначеЕсли стрТЗ.СчетДт = "7618520000" Тогда
			РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчиками;
		КонецЕсли;
		
		Если стрТЗ.СчетКт = "6801110000" Тогда
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.НДФЛ;
		ИначеЕсли ВидОплатыФормат = "/32F" Тогда
			//РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.НДФЛ_ДоходыСвышеПредельнойВеличины;
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("68.01.2");//.НДФЛ_ДоходыСвышеПредельнойВеличины;  2509кра 20211230
		КонецЕсли;
		
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
		ПодразделениеКт = ПолучитьПодразделениеПоИдентификаторуМВЗ(стрТЗ.СубконтоДт1);
		Если ЗначениеЗаполнено(ПодразделениеКт) Тогда
			РезСтр.СубконтоКт2 = ПодразделениеКт.РегистрацияВИФНС;
		КонецЕсли;
		Если ЗначениеЗаполнено(ПодразделениеКт) И Не ЗначениеЗаполнено(РезСтр.СубконтоКт2) Тогда
			РезСтр.СубконтоКт2 = ПодразделениеКт.Родитель.РегистрацияВИФНС;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РезСтр.СубконтоКт2) Тогда
			РезСтр.СубконтоКт2 = Справочники.РегистрацияВИФНС.НайтиПоРеквизиту("КПП", Организация.КПП);
		КонецЕсли;
		
		//Если ЗначениеЗаполнено(стрТЗ.СубконтоДт3) Тогда
		//	РезСтр.СубконтоКт2 = Справочники.РегистрацияВИФНС.НайтиПоКоду(СокрЛП(стрТЗ.СубконтоДт3));
		//КонецЕсли;
		
	КонецЕсли;
	
	РезСтр.Сумма = стрТЗ.Сумма;
	
	//Заработная плата, начисленная по тарифным ставкам, окладам	
	Если мМассивЗПпоТарифнымСтавкамОкладам.Найти(ВидОплатыФормат) <> Неопределено ИЛИ ВидОплатыФормат = "8225" Или ВидОплатыФормат = "8253" ИЛИ ВидОплатыФормат = "8211" 
		ИЛИ ВидОплатыФормат = "6095" Тогда
		//ВидОплатыФормат = "0020" Или ВидОплатыФормат = "20"
		//Или ВидОплатыФормат = "1273"
		//Или ВидОплатыФормат = "225" Или ВидОплатыФормат = "0225"
		//Или ВидОплатыФормат = ""
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();

		КонецЕсли;
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		Если Не ЗначениеЗаполнено(РезСтр.ПодразделениеДт) Тогда
			НетПодразделенияПоМВЗ = Истина;
		КонецЕсли;
		
	КонецЕсли;
		
	Если ВидОплатыФормат = "6020" ИЛИ ВидОплатыФормат = "6030" Тогда
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	
	Если ВидОплатыФормат = "4506" Тогда
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("14180200");
		РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоПрочимОперациям;
		РезСтр.ПодразделениеКт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
	КонецЕсли;
	
	Если ВидОплатыФормат = "83L2" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ФСС;
		РезСтр.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ФСС;
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;
	Если ВидОплатыФормат = "83L3" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ФСС;
		РезСтр.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ФФОМС;
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;
	Если ВидОплатыФормат = "83L5" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ФСС;
		РезСтр.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;
	Если ВидОплатыФормат = "83L6" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ФСС;
		РезСтр.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;
	
	//Премии, вознаграждения и другие поощрительные выплаты
	Если мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Найти(ВидОплатыФормат) <> Неопределено Тогда
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		Если Не ЗначениеЗаполнено(РезСтр.ПодразделениеДт) Тогда
			НетПодразделенияПоМВЗ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	//Корректирующие виды оплат
	Если мМассивКорректирующиеВидыОплат.Найти(ВидОплатыФормат) <> Неопределено Тогда
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		Если Не ЗначениеЗаполнено(РезСтр.ПодразделениеДт) Тогда
			НетПодразделенияПоМВЗ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	//Корректирующие виды оплат - ФСС
	Если мМассивКорректирующиеВидыОплат_ФСС.Найти(ВидОплатыФормат) <> Неопределено Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ФСС;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		РезСтр.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
	КонецЕсли;
	
	
	//Учебный отпуск
	Если ВидОплатыФормат = "3200" Тогда
		
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
		
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		Если Не ЗначениеЗаполнено(РезСтр.ПодразделениеДт) Тогда
			НетПодразделенияПоМВЗ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	//КоррНДФЛ13%ПрошлПериод
	Если ВидОплатыФормат = "8299" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.НДФЛ;
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
	КонецЕсли;	
	//Оплата дополнительного отработанного времени
	Если мМассивОплатаДополнительногоОтработанногоВремени.Найти(ВидОплатыФормат) <> Неопределено Тогда
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	Если ВидОплатыФормат = "3466" Тогда
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	
	
	Если ВидОплатыФормат = "8150" Или ВидОплатыФормат = "8151" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоИсполнительнымДокументамРаботников; //76.41
	КонецЕсли;
	
	Если ВидОплатыФормат = "8302" Или ВидОплатыФормат = "8303"
		Или ВидОплатыФормат = "8305" Или ВидОплатыФормат = "8311"
		Или ВидОплатыФормат = "8E11" Или ВидОплатыФормат = "83H1"
		Или ВидОплатыФормат = "83H2" Или ВидОплатыФормат = "83HX"
		Или ВидОплатыФормат = "83HY" 
		//Или ВидОплатыФормат = "" Или ВидОплатыФормат = ""
		Тогда
		//по КШ так:
		//РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы;
		//по правильному так:
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);

		
		
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			Если ВидОплатыФормат = "8305" Тогда
				РезСтр.СубконтоДт2 = Справочники.СтатьиЗатрат.НайтиПоКоду("30000001");
			Иначе
				РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_СтраховыеВзносы;
			КонецЕсли;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_СтраховыеВзносы;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
		
		КодСчета = мСоотвСчетов[стрТЗ.СчетКт];
		Если ЗначениеЗаполнено(КодСчета) Тогда
			РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду(КодСчета);
			РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
		Иначе
			Сообщить("Не найдено соответствия счету: " + стрТЗ.СчетКт);
			ЕстьОшибки = Истина;
		КонецЕсли;
		//        
	КонецЕсли;

	Если ВидОплатыФормат = "83S3" 
		Или ВидОплатыФормат = "83S5" Или ВидОплатыФормат = "83S6"
		Или ВидОплатыФормат = "8ES6" Или ВидОплатыФормат = "8ES6"
		Или ВидОплатыФормат = "83S8" Или ВидОплатыФормат = "83S9"
		Или ВидОплатыФормат = "83SX" Или ВидОплатыФормат = "83SY"
		//Или ВидОплатыФормат = "" Или ВидОплатыФормат = ""
		Тогда
		//по КШ так:
		//РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы;
		//по правильному так:
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		Если ВидОплатыФормат = "83S5" или ВидОплатыФормат = "83S6" ИЛИ ВидОплатыФормат = "83S3" Тогда
			РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
			//РезСтр.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;
			РезСтр.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("2610100");
		Иначе
			РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_СтраховыеВзносы;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
		
		
		КодСчета = мСоотвСчетов[стрТЗ.СчетКт];
		Если ЗначениеЗаполнено(КодСчета) Тогда
			РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду(КодСчета);
			РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
		Иначе
			Сообщить("Не найдено соответствия счету: " + стрТЗ.СчетКт);
			ЕстьОшибки = Истина;
		КонецЕсли;
		//        
	КонецЕсли;

	//Дни по уходу за ребенком инвалидом (ст.262 ТК РФ): ФСС, ФФОМС, ФСС НС, ПФ
	Если ВидОплатыФормат = "83I2" 
		Или ВидОплатыФормат = "83I3" Или ВидОплатыФормат = "83I5"
		Или ВидОплатыФормат = "83I6" Или ВидОплатыФормат = "8EI6"
		Или ВидОплатыФормат = "83I8" Или ВидОплатыФормат = "83I9"
		Или ВидОплатыФормат = "83IX" Или ВидОплатыФормат = "83IY"
		//Или ВидОплатыФормат = "" Или ВидОплатыФормат = ""
		Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ФСС;
		Если ВидОплатыФормат = "83I2" Или ВидОплатыФормат = "83I6" Или ВидОплатыФормат = "83I3" Или ВидОплатыФормат = "83I5" Тогда
			РезСтр.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
		КонецЕсли;
		
		КодСчета = мСоотвСчетов[стрТЗ.СчетКт];
		Если ЗначениеЗаполнено(КодСчета) Тогда
			РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду(КодСчета);
			РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
			РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
		Иначе
			Сообщить("Не найдено соответствия счету: " + стрТЗ.СчетКт);
			ЕстьОшибки = Истина;
		КонецЕсли;
		//        
	КонецЕсли;
	                        
	
	
	Если ВидОплатыФормат = "922A" Или ВидОплатыФормат = "8B1A" Или ВидОплатыФормат = "8B2A" // кпэ
		ИЛИ ВидОплатыФормат = "922K" ИЛИ ВидОплатыФормат = "8BK1" ИЛИ  ВидОплатыФормат = "8BK2" //кпэ
		Или ВидОплатыФормат = "9RA1" Или ВидОплатыФормат = "8RA1" Или ВидОплатыФормат = "8RA2" //отпуска
		Или ВидОплатыФормат = "8S01" Или ВидОплатыФормат = "8S02" Или ВидОплатыФормат = "9S01" //отпуска
		Или ВидОплатыФормат = "8RA5" Или ВидОплатыФормат = "8RA6" Или ВидОплатыФормат = "9RA3" //отпуска
		//Или ВидОплатыФормат = "" Или ВидОплатыФормат = ""
		Тогда
			//ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы - так в КШ
			//а в жизни так:

		    РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
			Если ВидОплатыФормат = "9RA1" ИЛИ ВидОплатыФормат = "9S01" Тогда
				Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
					РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
					РезСтр.СубконтоДт2 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030200");
				Иначе
					РезСтр.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030200");
					РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
				КонецЕсли;
			ИначеЕсли ВидОплатыФормат = "8RA1" ИЛИ ВидОплатыФормат = "8RA2" ИЛИ ВидОплатыФормат = "8S01" ИЛИ ВидОплатыФормат = "8S02" Тогда
				Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
					РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
					РезСтр.СубконтоДт2 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500200");
				Иначе
					РезСтр.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500200");
					РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
				КонецЕсли;
			ИначеЕсли ВидОплатыФормат = "922A" ИЛИ ВидОплатыФормат = "922K" Тогда
				Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
					РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
					РезСтр.СубконтоДт2 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030100");
				Иначе
					РезСтр.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20030100");
					РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
				КонецЕсли;
			Иначе
				Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
					РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
					РезСтр.СубконтоДт2 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500100");
				Иначе
					РезСтр.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("30500100");
					РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
				КонецЕсли;
			КонецЕсли;
			
			Если ВидОплатыФормат = "8RA1" Или ВидОплатыФормат = "8RA2" Или ВидОплатыФормат = "9RA1" 
				ИЛИ ВидОплатыФормат = "8RA5" Или ВидОплатыФормат = "8RA6" Или ВидОплатыФормат = "9RA3" 
				ИЛИ ВидОплатыФормат = "8S01" Или ВидОплатыФормат = "8S02" Или ВидОплатыФормат = "9S01" Тогда 
				РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду("96.01"); 
				РезСтр.ПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			ИначеЕсли ВидОплатыФормат = "8B1A" Или ВидОплатыФормат = "8B2A" Или ВидОплатыФормат = "922A" 
				ИЛИ ВидОплатыФормат = "922K" ИЛИ ВидОплатыФормат = "8BK1" ИЛИ  ВидОплатыФормат = "8BK2" Тогда 
				РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду("96.02"); 
				РезСтр.ПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			Иначе
				РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
				Если Не ЗначениеЗаполнено(РезСтр.ПодразделениеКт) Тогда
					РезСтр.ПодразделениеКт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
				КонецЕсли;
			КонецЕсли;
			РезСтр.СубконтоКт1 = ПолучитьСубконто96(ВидОплатыФормат,  стрТЗ);
	КонецЕсли;
                	
	//ИСПОЛНИТЕЛЬНЫЕ ЛИСТЫ
	Если ВидОплатыФормат = "8400" Или ВидОплатыФормат = "8401" Или ВидОплатыФормат = "8405" 
		Или ВидОплатыФормат = "8406" Или ВидОплатыФормат = "8407" Или ВидОплатыФормат = "8408"
		Или ВидОплатыФормат = "8410" Или ВидОплатыФормат = "8411" Или ВидОплатыФормат = "8415"
		Или ВидОплатыФормат = "8416" Или ВидОплатыФормат = "/PST" Или ВидОплатыФормат = "8PST"
		Или ВидОплатыФормат = "M751" Или ВидОплатыФормат = "M751" Или ВидОплатыФормат = "8751"
		ИЛИ ВидОплатыФормат = "8424"
		Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		//РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_СтраховыеВзносы;
		//в корп.шаблоне - так:
		//РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчиками;//76.05...
		// но логинка подсказывает так:
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоИсполнительнымДокументамРаботников;
		Если ЗначениеЗаполнено(стрТЗ.СубконтоДт3) Тогда
			РезСтр.СубконтоКт1 = ПолучитьСубконто76(стрТЗ.СубконтоДт3);	
		КонецЕсли;
		РезСтр.ПодразделениеКт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		//РезСтр.СубконтоКт1 = ПолучитьСубконто76(КодСчета);
		
	КонецЕсли;
	
    //доплаты и надбавки
	Если мМассивДоплатыИНадбавки.Найти(ВидОплатыФормат) <> Неопределено Тогда
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;

    //Оплата отработанного времени с сохранением среднего заработка
	Если мМассивОплатаПоСреднемуЗаработку.Найти(ВидОплатыФормат) <> Неопределено Тогда
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		ИначеЕсли ВидОплатыФормат = "2006" Тогда 
			РезСтр.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20020000");
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
    //ПРОФСОЮЗНЫЕ ВЗНОСЫ
	Если мМассивПрофсоюзныеВзносы.Найти(ВидОплатыФормат) <> Неопределено Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		
		 
		
		// РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоИсполнительнымДокументамРаботников; //76.41
		// Изменено на 76.09.3 (по письму Царикаева Артура)
		РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду("76.09.3");
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		//!!!!
		Если стрТЗ.СубконтоДт3 = "13576" Тогда
			//по коду не получается из-за дублей кодов 
			//РезСтр.СубконтоКт1 = Справочники.Контрагенты.НайтиПоКоду("00013576");
			РезСтр.СубконтоКт1 = Справочники.Контрагенты.НайтиПоНаименованию("Профком концерна «Росэнергоатом»", Истина);
			РезСтр.СубконтоКт2 = Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию("Профвзносы-1%");
		КонецЕсли;
		РезСтр.ПодразделениеКт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
	КонецЕсли;
	
	//Оценочное обязательство по предстоящей оплате отпусков:  страховые взносов в гос. внебюджетные фонды, начисленные от суммы отпускных выплатОценочное обязательство по предстоящей оплате отпусков:  страховые взносов в гос. внебюджетные фонды, начисленные от суммы отпускных выплатОценочное обязательство по предстоящей оплате отпусков:  страховые взносов в гос. внебюджетные фонды, начисленные от суммы отпускных выплатОценочное обязательство по предстоящей оплате отпусков:  страховые взносов в гос. внебюджетные фонды, начисленные от суммы отпускных выплатОценочное обязательство по предстоящей оплате отпусков:  страховые взносов в гос. внебюджетные фонды, начисленные от суммы отпускных выплатОценочное обязательство по предстоящей оплате отпусков:  страховые взносов в гос. внебюджетные фонды, начисленные от суммы отпускных выплатОценочное обязательство по предстоящей оплате отпусков:  страховые взносов в гос. внебюджетные фонды, начисленные от суммы отпускных выплат
	Если мМассивРезервыПоВзносам.Найти(ВидОплатыФормат) <> Неопределено Тогда
		Если ВидОплатыФормат = "8343" ИЛИ ВидОплатыФормат = "8345" ИЛИ ВидОплатыФормат = "8351" ИЛИ ВидОплатыФормат = "8342" Тогда
			РезСтр.СчетДт = ПланыСчетовХозрасчетныйНайтиПоКоду("96.01");
		Иначе
			РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
		КонецЕсли;
		РезСтр.СубконтоДт1 = ПолучитьСубконто96(ВидОплатыФормат,  стрТЗ);
		КодСчета = мСоотвСчетов[стрТЗ.СчетКт];
		Если ЗначениеЗаполнено(КодСчета) Тогда
			РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду(КодСчета);
			РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
			Если ВидОплатыФормат = "8343" ИЛИ ВидОплатыФормат = "8345" ИЛИ ВидОплатыФормат = "8351" ИЛИ ВидОплатыФормат = "8342" Тогда
				РезСтр.ПодразделениеДт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			Иначе
				РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
			КонецЕсли;
		Иначе
			Сообщить("Не найдено соответствия счету: " + стрТЗ.СчетКт);
			ЕстьОшибки = Истина;
    	КонецЕсли;
	КонецЕсли;
	
	//Оценочное обязательство по предстоящей оплате отпусков (дополнительных):  страховые взносов в гос. внебюджетные фонды, начисленные от суммы отпускных выплат
	Если мМассивРезервыПоВзносамДоп.Найти(ВидОплатыФормат) <> Неопределено Тогда
		Если ВидОплатыФормат = "8362" ИЛИ ВидОплатыФормат = "8363" ИЛИ ВидОплатыФормат = "8365" ИЛИ ВидОплатыФормат = "8371" Тогда
			РезСтр.СчетДт = ПланыСчетовХозрасчетныйНайтиПоКоду("96.01");
		Иначе
			РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
		КонецЕсли;
		РезСтр.СубконтоДт1 = ПолучитьСубконто96(ВидОплатыФормат,  стрТЗ);
		КодСчета = мСоотвСчетов[стрТЗ.СчетКт];
		Если ЗначениеЗаполнено(КодСчета) Тогда
			РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду(КодСчета);
			РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
			Если ВидОплатыФормат = "8362" ИЛИ ВидОплатыФормат = "8363" ИЛИ ВидОплатыФормат = "8365" ИЛИ ВидОплатыФормат = "8371" Тогда
				РезСтр.ПодразделениеДт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			Иначе
				РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
			КонецЕсли;
    	КонецЕсли;
	КонецЕсли;
	
	
	//Основной отпуск
	//Дополнительный отпуск (96)
	Если мМассивОтпускИДопОтпуск.Найти(ВидОплатыФормат) <> Неопределено Тогда
		Если ВидОплатыФормат = "3000" ИЛИ ВидОплатыФормат = "3120" ИЛИ ВидОплатыФормат = "3010" ИЛИ ВидОплатыФормат = "6010"  ИЛИ ВидОплатыФормат = "3140" ИЛИ ВидОплатыФормат = "8212" Тогда
			РезСтр.ПодразделениеДт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.01");
		Иначе
			РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
			РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
		КонецЕсли;
		РезСтр.СубконтоДт1 = ПолучитьСубконто96(ВидОплатыФормат,  стрТЗ);
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	
	//
	Если ВидОплатыФормат = "4410" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("96.01");
		РезСтр.СубконтоДт1 = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	
	
	
	//Социальные выплаты за счет средств работодателя - Дт91
	Если мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Найти(ВидОплатыФормат) <> Неопределено Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;//91.02
		//РезСтр.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;
		РезСтр.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("2413000");
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		Если ВидОплатыФормат = "5265" Тогда
			РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
			РезСтр.СубконтоДт2 = Справочники.Номенклатура.НайтиПоКоду("00000007343");	
		ИначеЕсли ВидОплатыФормат = "5316" ИЛИ ВидОплатыФормат = "5311" Тогда
			РезСтр.СубконтоДт2 = Справочники.Номенклатура.НайтиПоКоду("00000007344");	
		КонецЕсли;
		Если ВидОплатыФормат = "5267" Тогда
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.09.3");
			//РезСтр.СубконтоКт1
		Иначе
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда; //70
		КонецЕсли;
	КонецЕсли;
	
	//Социальные выплаты за счет средств работодателя - затраты
	Если мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Найти(ВидОплатыФормат) <> Неопределено Тогда
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		Если ЗначениеЗаполнено(РезСтр.СчетДт) И РезСтр.СчетДт.Код = "20.01" Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");// "Прочие производственные услуги" - по умолчанию
		Иначе
			Если ВидОплатыФормат = "5000" ИЛИ ВидОплатыФормат = "8209" Тогда
				РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_СВЗаСчетРаботодателя;
				РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
			ИначеЕсли ВидОплатыФормат = "5360" ИЛИ ВидОплатыФормат = "5361" Тогда
				РезСтр.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("200102501");
				РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
			ИначеЕсли ВидОплатыФормат = "5565" Или ВидОплатыФормат = "556A" Тогда 
				//РезСтр.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20010240");
				РезСтр.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("20010241");
				РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
			Иначе
				Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
					РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
					РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
				Иначе
					РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
					РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	Если ВидОплатыФормат = "4457" ИЛИ ВидОплатыФормат = "4431" ИЛИ ВидОплатыФормат = "4450" ИЛИ ВидОплатыФормат = "4452" Тогда
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("200102501");
		РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
	КонецЕсли;
		
	
	// Социальные выплаты за счет средств ФСС, ФСС НС 
	Если мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Найти(ВидОплатыФормат) <> Неопределено Тогда
		Если ВидОплатыФормат = "83G2" Тогда
			РезСтр.СчетДт = СчетКомиссариат;
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ФСС;
			РезСтр.СубконтоДт1 = мКомиссариаты.Получить(Организация);
		ИначеЕсли ВидОплатыФормат = "83G3" Тогда
			РезСтр.СчетДт = СчетКомиссариат;
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ФФОМС;
			РезСтр.СубконтоДт1 = мКомиссариаты.Получить(Организация);
		ИначеЕсли ВидОплатыФормат = "83G6" Тогда
			РезСтр.СчетДт = СчетКомиссариат;
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
			РезСтр.СубконтоДт1 = мКомиссариаты.Получить(Организация);
		ИначеЕсли ВидОплатыФормат = "83G5" Тогда
			РезСтр.СчетДт = СчетКомиссариат;
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
			РезСтр.СубконтоДт1 = мКомиссариаты.Получить(Организация);
		Иначе
			РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ФСС;
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
			РезСтр.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
		КонецЕсли;
	КонецЕсли;
	
	//ПРОЧИЕ РАЗОВЫЕ И РЕГУЛЯРНЫЕ УДЕРЖАНИЯ			
	Если мМассивПрочиеРазовыеИРегулярныеУдержания.Найти(ВидОплатыФормат) <> Неопределено Тогда
		
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		
		КодСчета = мСоотвСчетов[стрТЗ.СчетКт];
		Если ЗначениеЗаполнено(КодСчета) Тогда
			Если ВидОплатыФормат = "8040" Тогда
				РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоВозмещениюМатериальногоУщерба;
			Иначе
				РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду(КодСчета);
			КонецЕсли;
			//РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
		Иначе
			Сообщить("Не найдено соответствия счету: " + стрТЗ.СчетКт);
			ЕстьОшибки = Истина;
		КонецЕсли;
		РезСтр.СубконтоКт1 = ПолучитьФизЛицо(стрТЗ.Табн);
		Если ВидОплатыФормат = "8130" Тогда
			РезСтр.СубконтоКт2 = Справочники.ВидыНачисленийУдержаний.НайтиПоКоду("00023");	
		Иначе
			РезСтр.СубконтоКт2 = Справочники.ВидыНачисленийУдержаний.НайтиПоКоду("00011");
		КонецЕсли;
		
		РезСтр.ПодразделениеКт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);

	КонецЕсли;
	
	Если ВидОплатыФормат = "8426" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоИсполнительнымДокументамРаботников;
	КонецЕсли;
	
	
	//С сохранением среднего заработка
	Если мМассивССохранениемСреднегоЗаработка.Найти(ВидОплатыФормат) <> Неопределено Тогда
		
		КодСчета = мСоотвСчетов[стрТЗ.СчетДт];
		Если ВидОплатыФормат = "3430" Тогда  
			РезСтр.СчетДт = СчетКомиссариат; 
		ИначеЕсли ЗначениеЗаполнено(КодСчета) Тогда
			РезСтр.СчетДт = ПланыСчетовХозрасчетныйНайтиПоКоду(КодСчета);
			РезСтр.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
		Иначе
			Сообщить("Не найдено соответствия счету: " + стрТЗ.СчетДт);
			ЕстьОшибки = Истина;
		КонецЕсли;
		
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;

		
	КонецЕсли;
	
	//С сохранением среднего заработка - затраты
	Если мМассивССохранениемСреднегоЗаработка_Затраты.Найти(ВидОплатыФормат) <> Неопределено Тогда
		Если ВидОплатыФормат = "3492" ИЛИ ВидОплатыФормат = "3493" ИЛИ ВидОплатыФормат = "3485" Тогда 
			РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Иначе
			РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		КонецЕсли;
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);	
		Если ВидОплатыФормат = "3485" ИЛИ ВидОплатыФормат = "3495" Тогда
			РезСтр.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("2413000");
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		ИначеЕсли ВидОплатыФормат = "3492" ИЛИ ВидОплатыФормат = "3493" Тогда
			РезСтр.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("2610100");
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		ИначеЕсли ВидОплатыФормат = "3430" Тогда
			РезСтр.СубконтоДт1 = мКомиссариаты.Получить(ОрганизацияЗП);
		Иначе
			Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
				РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
				РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			Иначе
				РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
				РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;	
		
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;

		
	КонецЕсли;

	/////////////////////////////////////////////////////////////////////////////////////
	//!!!!Изменить потом
	Если ВидОплатыФормат = "4424"
		//Или ВидОплатыФормат = "4505"
		//Или ВидОплатыФормат = "8209"   А.М.А
		Или ВидОплатыФормат = "8231" 
		Тогда
		
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
		
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	Если ВидОплатыФормат = "4505" Тогда
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоПрочимОперациям;
		РезСтр.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("14180200");
		РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		РезСтр.СубконтоКт1 = ПолучитьФизЛицо(стрТЗ.Табн);
		РезСтр.СубконтоКт2 = Справочники.ВидыНачисленийУдержаний.НайтиПоКоду("000000005");
		РезСтр.ПодразделениеКт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
	КонецЕсли;
	Если ВидОплатыФормат = "4479" Тогда
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоПрочимОперациям;
		РезСтр.СубконтоДт1 = Справочники.СтатьиЗатрат.НайтиПоКоду("14189900");
	    РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.НайтиПоКоду("03006");
		РезСтр.СубконтоКт1 = ПолучитьФизЛицо(стрТЗ.Табн);
		РезСтр.ПодразделениеКт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
	КонецЕсли;
	
	Если ВидОплатыФормат = "4442" 
		//Или ВидОплатыФормат = "" 
		Тогда
		
		Если Лев(стрТЗ.СчетДт, 3) = "912" Тогда
			РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
			РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
			РезСтр.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("2413000");
			РезСтр.СубконтоДт2 = Справочники.Номенклатура.НайтиПоКоду("00000009934");
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		КонецЕсли;
	КонецЕсли;
	Если ВидОплатыФормат = "3490" Тогда
		Если Лев(стрТЗ.СчетДт, 3) = "912" Тогда
			РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
			РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
			РезСтр.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("2413000");
			РезСтр.СубконтоДт2 = Справочники.Номенклатура.НайтиПоКоду("00000009936");
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		КонецЕсли;
	КонецЕсли;
	Если ВидОплатыФормат = "8210" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ФСС;	
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		РезСтр.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
	КонецЕсли;
	
	Если ВидОплатыФормат = "83S2" Тогда
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;	
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ФСС;
		РезСтр.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("2610100");
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;
	
	Если ВидОплатыФормат = "8206" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
		РезСтр.СубконтоДт1 = ПолучитьСубконто96(ВидОплатыФормат,  стрТЗ);
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
	КонецЕсли;
	
	Если ВидОплатыФормат = "8202" Тогда
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
		
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	
	Если ВидОплатыФормат = "8207" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);		
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	
	Если ВидОплатыФормат = "1124" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ИздержкиОбращения;
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);	
		РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	Если ВидОплатыФормат = "4430" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ИздержкиОбращения;
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);	
		РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	Если ВидОплатыФормат = "8252" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ИздержкиОбращения;
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
	КонецЕсли;
	Если ВидОплатыФормат = "6050" Тогда
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ИздержкиОбращения;
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
	КонецЕсли;
	Если ВидОплатыФормат = "1221" ИЛИ ВидОплатыФормат = "4245" ИЛИ ВидОплатыФормат = "4265" Тогда
		РезСтр.СчетДт = ПланыСчетовХозрасчетныйНайтиПоКоду("96.03");
		//РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СубконтоДт1 = Справочники.Резервы.НайтиПоКоду("000000013"); //Менять ежегодно 2509кра - это за прошлый год
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;
	// 424E  426E
	Если ВидОплатыФормат = "424E" ИЛИ ВидОплатыФормат = "426E" Тогда
		РезСтр.СчетДт = ПланыСчетовХозрасчетныйНайтиПоКоду("96.02");
		//РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СубконтоДт1 = Справочники.Резервы.НайтиПоКоду("000000013"); //меняем каждый год на КПЭ... номер года 2509кра
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;

	
	Если ВидОплатыФормат = "3501" Тогда 
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	Если ВидОплатыФормат = "83B1" ИЛИ ВидОплатыФормат = "83B3" ИЛИ ВидОплатыФормат = "83B5" ИЛИ ВидОплатыФормат = "83B6" ИЛИ ВидОплатыФормат = "83B7" ИЛИ ВидОплатыФормат = "83B8" Тогда
		РезСтр.СчетДт = ПланыСчетовХозрасчетныйНайтиПоКоду("96.03");
		//РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СубконтоДт1 = Справочники.Резервы.НайтиПоКоду("000000013"); //меняем каждый год на КПЭ... номер года 2509кра
		Если ВидОплатыФормат = "83B1" Тогда
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
		ИначеЕсли ВидОплатыФормат = "83B3" Тогда
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ФФОМС;
		ИначеЕсли ВидОплатыФормат = "83B5" Тогда
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ФСС;
		ИначеЕсли ВидОплатыФормат = "83B6" Тогда
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
		ИначеЕсли ВидОплатыФормат = "83B7" Тогда
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда;
		ИначеЕсли ВидОплатыФормат = "83B8" Тогда
			РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда;
		КонецЕсли;
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;

	//2509кра 20211224 +++
	Если ВидОплатыФормат = "1234" ИЛИ ВидОплатыФормат = "424E" ИЛИ ВидОплатыФормат = "426E" Тогда
		РезСтр.СчетДт = ПланыСчетовХозрасчетныйНайтиПоКоду("96.02");
		РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду("70");
		РезСтр.СубконтоДт1 = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп2ст255;
	КонецЕсли;
	
	Если ВидОплатыФормат = "83M1" ИЛИ ВидОплатыФормат = "8ZM1" Тогда
		РезСтр.СчетДт = ПланыСчетовХозрасчетныйНайтиПоКоду("96.02");
		РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду("69.02.7");
		РезСтр.СубконтоДт1 = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;
	
	Если ВидОплатыФормат = "83M3" ИЛИ ВидОплатыФормат = "8ZM3" Тогда
		РезСтр.СчетДт = ПланыСчетовХозрасчетныйНайтиПоКоду("96.02");
		РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду("69.03.1");
		РезСтр.СубконтоДт1 = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;

	Если ВидОплатыФормат = "83M5" ИЛИ ВидОплатыФормат = "8ZM5" Тогда
		РезСтр.СчетДт = ПланыСчетовХозрасчетныйНайтиПоКоду("96.02");
		РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду("69.01");
		РезСтр.СубконтоДт1 = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;

	
	Если ВидОплатыФормат = "83M6" ИЛИ ВидОплатыФормат = "8ZM6" Тогда
		РезСтр.СчетДт = ПланыСчетовХозрасчетныйНайтиПоКоду("96.02");
		РезСтр.СчетКт = ПланыСчетовХозрасчетныйНайтиПоКоду("69.11");
		РезСтр.СубконтоДт1 = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		РезСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;

	
	
	//2509кра 20211224 ---
	
	
	
	//Статьи налогового учета
	Если ВидОплатыФормат = "0001" ИЛИ ВидОплатыФормат = "0010" ИЛИ ВидОплатыФормат = "0015" ИЛИ ВидОплатыФормат = "0020" ИЛИ ВидОплатыФормат = "002P" ИЛИ ВидОплатыФормат = "0025" ИЛИ ВидОплатыФормат = "0030" 
		ИЛИ ВидОплатыФормат = "8201" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп1ст255;
	ИначеЕсли ВидОплатыФормат = "1010" Или ВидОплатыФормат = "101P" Или ВидОплатыФормат = "1060" Или ВидОплатыФормат = "1011" Или ВидОплатыФормат = "1061" Или ВидОплатыФормат = "111P"
		ИЛИ ВидОплатыФормат = "1020" ИЛИ ВидОплатыФормат = "1024" Или ВидОплатыФормат = "1051" Или ВидОплатыФормат = "1053" Или ВидОплатыФормат = "1058" Или ВидОплатыФормат = "1158"
		ИЛИ ВидОплатыФормат = "1059" Или ВидОплатыФормат = "1221" Или ВидОплатыФормат = "122P" Или ВидОплатыФормат = "1227" Или ВидОплатыФормат = "1228" Или ВидОплатыФормат = "1275"
		ИЛИ ВидОплатыФормат = "1273" Или ВидОплатыФормат = "1274" Или ВидОплатыФормат = "1201" Или ВидОплатыФормат = "1202" Или ВидОплатыФормат = "1206" Или ВидОплатыФормат = "1222" 
		Или ВидОплатыФормат = "1226" Или ВидОплатыФормат = "1229" Или ВидОплатыФормат = "1230" Или ВидОплатыФормат = "1231" Или ВидОплатыФормат = "1240" Или ВидОплатыФормат = "1268" 
		Или ВидОплатыФормат = "1270" Или ВидОплатыФормат = "1280" Или ВидОплатыФормат = "1272" Или ВидОплатыФормат = "1274" Или ВидОплатыФормат = "1284" Или ВидОплатыФормат = "8225"
		ИЛИ ВидОплатыФормат = "8202" Или ВидОплатыФормат = "8252" ИЛИ ВидОплатыФормат = "8253" Или ВидОплатыФормат = "8211" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп2ст255;
	ИначеЕсли ВидОплатыФормат = "0200" Или ВидОплатыФормат = "0201" Или ВидОплатыФормат = "0202" или ВидОплатыФормат = "0203" или ВидОплатыФормат = "0204" или ВидОплатыФормат = "0205" или ВидОплатыФормат = "0206"
		или ВидОплатыФормат = "0207" или ВидОплатыФормат = "0208" или ВидОплатыФормат = "0209" или ВидОплатыФормат = "0210" или ВидОплатыФормат = "0211" или ВидОплатыФормат = "0212" или ВидОплатыФормат = "0213" 
		или ВидОплатыФормат = "0215" или ВидОплатыФормат = "0223" или ВидОплатыФормат = "0220" или ВидОплатыФормат = "0221" или ВидОплатыФормат = "0222" или ВидОплатыФормат = "0230" или ВидОплатыФормат = "0231" 
		или ВидОплатыФормат = "0232" или ВидОплатыФормат = "0214" или ВидОплатыФормат = "0216" или ВидОплатыФормат = "0217" или ВидОплатыФормат = "0218" или ВидОплатыФормат = "0219" или ВидОплатыФормат = "0225" 
		или ВидОплатыФормат = "0226" или ВидОплатыФормат = "0227" или ВидОплатыФормат = "0250" или ВидОплатыФормат = "0251" или ВидОплатыФормат = "0252" или ВидОплатыФормат = "0260" или ВидОплатыФормат = "0261" 
		или ВидОплатыФормат = "0262" или ВидОплатыФормат = "1000" или ВидОплатыФормат = "1001" или ВидОплатыФормат = "1002" или ВидОплатыФормат = "1003" или ВидОплатыФормат = "1004" или ВидОплатыФормат = "1005" 
		или ВидОплатыФормат = "1006" или ВидОплатыФормат = "1106" или ВидОплатыФормат = "1007" или ВидОплатыФормат = "1008" или ВидОплатыФормат = "1009" или ВидОплатыФормат = "1109" или ВидОплатыФормат = "1110" 
		или ВидОплатыФормат = "1160" или ВидОплатыФормат = "1111" или ВидОплатыФормат = "1161" или ВидОплатыФормат = "1113" или ВидОплатыФормат = "1015" или ВидОплатыФормат = "1018" или ВидОплатыФормат = "1118" 
		или ВидОплатыФормат = "1019" или ВидОплатыФормат = "1120" или ВидОплатыФормат = "1021" или ВидОплатыФормат = "1023" или ВидОплатыФормат = "1124" или ВидОплатыФормат = "1133" или ВидОплатыФормат = "1134"
		или ВидОплатыФормат = "1136" или ВидОплатыФормат = "1151" или ВидОплатыФормат = "1155" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп3ст255;
	ИначеЕсли ВидОплатыФормат = "7160" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп5ст255;
	ИначеЕсли ВидОплатыФормат = "1014" или ВидОплатыФормат ="114P" или ВидОплатыФормат ="1056" или ВидОплатыФормат ="2000" или ВидОплатыФормат ="2005" или ВидОплатыФормат ="3466" //или ВидОплатыФормат ="2007" 
		или ВидОплатыФормат ="2003" или ВидОплатыФормат ="200P" или ВидОплатыФормат ="2010" или ВидОплатыФормат ="2015" или ВидОплатыФормат ="2035" или ВидОплатыФормат ="2040" ИЛИ ВидОплатыФормат ="8205" 
		ИЛИ ВидОплатыФормат ="556B" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп6ст255;
	ИначеЕсли ВидОплатыФормат = "4458"  Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп12_1ст255;
	ИначеЕсли ВидОплатыФормат = "3000" или ВидОплатыФормат = "300P" или ВидОплатыФормат = "3110" или ВидОплатыФормат = "3120" или ВидОплатыФормат = "312P" или ВидОплатыФормат = "3440" или ВидОплатыФормат = "3445" 
		или ВидОплатыФормат = "3465" или ВидОплатыФормат = "2030" или ВидОплатыФормат = "5360" или ВидОплатыФормат = "5361" или ВидОплатыФормат = "5362" Или ВидОплатыФормат = "3140" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп7ст255;
	ИначеЕсли ВидОплатыФормат = "4410" или ВидОплатыФормат ="441P" или ВидОплатыФормат ="4412" или ВидОплатыФормат ="6010" или ВидОплатыФормат ="601P" или ВидОплатыФормат ="3010" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп8ст255;
	ИначеЕсли ВидОплатыФормат = "6020" или ВидОплатыФормат = "6021" или ВидОплатыФормат = "6030" или ВидОплатыФормат = "6031" или ВидОплатыФормат = "6035" или ВидОплатыФормат = "6036" или ВидОплатыФормат = "6040" 
		или ВидОплатыФормат = "6041" или ВидОплатыФормат = "6050" или ВидОплатыФормат = "6051" или ВидОплатыФормат = "6060" или ВидОплатыФормат = "6065" или ВидОплатыФормат = "6066" или ВидОплатыФормат = "6067"
		или ВидОплатыФормат = "6080" или ВидОплатыФормат = "6081" или ВидОплатыФормат = "6095" или ВидОплатыФормат = "6096" или ВидОплатыФормат = "6097" или ВидОплатыФормат = "6098" или ВидОплатыФормат = "4424" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп9ст255;
	ИначеЕсли ВидОплатыФормат = "1013" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп10ст255;
	ИначеЕсли ВидОплатыФормат = "4250" ИЛИ ВидОплатыФормат = "4247" ИЛИ ВидОплатыФормат = "4248" ИЛИ ВидОплатыФормат = "424B" ИЛИ ВидОплатыФормат = "4241" ИЛИ ВидОплатыФормат = "424C"
		ИЛИ ВидОплатыФормат = "4245" ИЛИ ВидОплатыФормат = "424E" ИЛИ ВидОплатыФормат = "426E" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп11ст255;
	ИначеЕсли ВидОплатыФормат = "4255" или ВидОплатыФормат = "8237" ИЛИ ВидОплатыФормат = "4267" ИЛИ ВидОплатыФормат = "4268" ИЛИ ВидОплатыФормат = "426B" ИЛИ ВидОплатыФормат = "4261" ИЛИ ВидОплатыФормат = "426C" ИЛИ ВидОплатыФормат = "4265"Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп12ст255;
	ИначеЕсли ВидОплатыФормат = "4430" Тогда 
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп12_1ст255;
	ИначеЕсли ВидОплатыФормат = "3200" или ВидОплатыФормат = "4425" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп13ст255;
	ИначеЕсли ВидОплатыФормат = "3455" ИЛИ ВидОплатыФормат = "3460" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп14ст255;
	ИначеЕсли ВидОплатыФормат = "240" ИЛИ ВидОплатыФормат = "1040" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп17ст255;
	ИначеЕсли ВидОплатыФормат = "3470" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп19ст255;
	ИначеЕсли ВидОплатыФормат = "3420" ИЛИ ВидОплатыФормат = "3425" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп20ст255;
	ИначеЕсли ВидОплатыФормат = "4470" ИЛИ ВидОплатыФормат = "4600" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп21ст255;
	ИначеЕсли ВидОплатыФормат = "4010" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп23ст255;
	ИначеЕсли ВидОплатыФормат = "1012" ИЛИ ВидОплатыФормат = "4431" ИЛИ ВидОплатыФормат = "4433" ИЛИ ВидОплатыФормат = "5565" ИЛИ ВидОплатыФормат = "556A" ИЛИ ВидОплатыФормат = "4457" ИЛИ ВидОплатыФормат = "4450" Тогда
		РезСтр.СубконтоКт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп25ст255;
	ИначеЕсли ВидОплатыФормат = "/322" Или ВидОплатыФормат = "/32E"Тогда
		РезСтр.СубконтоДт1 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп1ст255;
	КонецЕсли;

	
	
	Если мМассивРайонныеКоэффициентИСеверныеНадбавки.Найти(ВидОплатыФормат) <> Неопределено Тогда
		
		РезСтр.СчетДт = ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ДопТекстСтрокиТЧ);
		РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000083");
			РезСтр.СубконтоДт2 = мСправочникиСтатьиЗатрат_ОплатаТруда;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_ОплатаТруда;
			РезСтр.СубконтоДт2 = Справочники.АЭС_ТипыПроектов.ПустаяСсылка();
		КонецЕсли;
		
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;
	
	
	Если Не ЗначениеЗаполнено(РезСтр.СчетДт) И стрТЗ.СчетДт = "7000000000" Тогда 
		РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(РезСтр.СчетКт) И стрТЗ.СчетКт = "7000000000" Тогда
		РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	КонецЕсли;	
	
	//!!!!отладка 
	Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство
			Или РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы
			Или РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ИздержкиОбращения
		Тогда 		
		
		Если Не ЗначениеЗаполнено(РезСтр.ПодразделениеДт) Тогда
			РезСтр.ПодразделениеДт = ПолучитьПодразделениеПоСоответствию(стрТЗ.СубконтоДт1);
		КонецЕсли;

		
		
		Если Не ЗначениеЗаполнено(РезСтр.СубконтоДт1) Тогда
			Сообщить("Не заполнено СубконтоДт1 по виду оплаты " + стрТЗ.Видоплаты + " (" + стрТЗ.ТекстВидаОплаты + ") " + "(" + стрТЗ.Табн + ")");
		КонецЕсли;		
			
		
	КонецЕсли;
	
	
	//немного индокода - у затратных счетов в корреспонденции со счетом ФСС_НСиПЗ субконто1 = налоги и сборы
	Если РезСтр.СчетКт = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ 
		И ( РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство //20
			Или	РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы //26
			Или РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ИздержкиОбращения //44
			) Тогда 
		Если РезСтр.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			РезСтр.СубконтоДт3 = мСправочникиСтатьиЗатрат_НалогиИСборы_НСвФСС;
		Иначе
			РезСтр.СубконтоДт1 = мСправочникиСтатьиЗатрат_НалогиИСборы_НСвФСС;
		КонецЕсли;
	
	КонецЕсли;
	/////////////////////////////////////////////////////////////////////////////////////
	
	ТекСтрока = "";
	Для каждого КолТЗ Из КолонкиТЗ Цикл
		ТекСтрока = ТекСтрока + КолТЗ.Имя + ": " + стрТЗ[КолТЗ.Имя] + Символы.ПС;
	КонецЦикла;
	РезСтр.СтрокаИАСУП = СокрЛП(ТекСтрока);
	РезСтр.ВидОплатыИАСУП = стрТЗ.Видоплаты;
	РезСтр.ТекстВидаОплатыИАСУП = стрТЗ.ТекстВидаОплаты;
	 
	Если Не ЗначениеЗаполнено(РезСтр.СчетКт) Или Не ЗначениеЗаполнено(РезСтр.СчетДт) Тогда
		Если НетПодразделенияПоМВЗ Или ЕстьОшибки Тогда
			//не сообщаем - проблема в заполнении идентификатора МВЗ или других ошибках
			РезСтр.СтрокаИАСУП = "Не найдено МВЗ или есть ошибки" + Символы.ПС + РезСтр.СтрокаИАСУП;
		Иначе
			Сообщить("Не удалось определить СчетДт и/или СчетКт по виду оплаты: " + ВидОплатыФормат);
			ЕстьОшибки = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		//отделим от следующего
		Сообщить("----------------------------------------------------------------");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДопТекстСтрокиТЧ) Тогда
		РезСтр.СтрокаИАСУП = ДопТекстСтрокиТЧ + Символы.ПС + РезСтр.СтрокаИАСУП;
	КонецЕсли;

	
	
	Возврат РезСтр;

КонецФункции // ПолучитьСтруктуруСтрокиТабЧасти

Функция ПолучитьФизЛицо(ТабНомер)
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ЗначенияСвойствОбъектов.Объект
	//| 
	//|ИЗ
	//|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//|ГДЕ
	//|	ЗначенияСвойствОбъектов.Свойство = &мПВХ_ТабНомерИАСУП
	//|	И ЗначенияСвойствОбъектов.Значение = &ТабНомерИАСУП";
	//
	//Запрос.УстановитьПараметр("мПВХ_ТабНомерИАСУП",	мПВХ_ТабНомерИАСУП);
	//Запрос.УстановитьПараметр("ТабНомерИАСУП",		ТабНомер);
	//Выборка = Запрос.Выполнить().Выбрать();
	//Если Выборка.Следующий() Тогда
	//	Возврат Выборка.Объект;
	//Иначе
	//	Возврат Неопределено;
	//КонецЕсли;

	Возврат Неопределено;
	
КонецФункции


Функция ПолучитьСчетЗатратПоТабНомеруИАСУП(стрТЗ, ТекстДополнения = Неопределено)
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ЗначенияСвойствОбъектов.Объект
	//|ПОМЕСТИТЬ ФизЛицо
	//|ИЗ
	//|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//|ГДЕ
	//|	ЗначенияСвойствОбъектов.Свойство = &мПВХ_ТабНомерИАСУП
	//|	И ЗначенияСвойствОбъектов.Значение = &ТабНомерИАСУП
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ЗначенияСвойствОбъектов.Объект
	//|ПОМЕСТИТЬ Подразделение
	//|ИЗ
	//|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//|ГДЕ
	//|	ЗначенияСвойствОбъектов.Свойство = &мПВХ_ИдентификаторМВЗ
	//|	И ЗначенияСвойствОбъектов.Значение = &ИдентификаторМВЗ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ЗначенияСвойствОбъектов.Значение,
	//|	1 КАК Приоритет
	//|ПОМЕСТИТЬ КодСчета
	//|ИЗ
	//|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//|ГДЕ
	//|	ЗначенияСвойствОбъектов.Объект В
	//|			(ВЫБРАТЬ
	//|				ФизЛицо.Объект
	//|			ИЗ
	//|				ФизЛицо КАК ФизЛицо)
	//|	И ЗначенияСвойствОбъектов.Свойство = &мПВХ_СчетЗатратЗП
	//|
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ
	//|	ЗначенияСвойствОбъектов.Значение,
	//|	2
	//|ИЗ
	//|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//|ГДЕ
	//|	ЗначенияСвойствОбъектов.Объект В
	//|			(ВЫБРАТЬ
	//|				Подразделение.Объект
	//|			ИЗ
	//|				Подразделение КАК Подразделение)
	//|	И ЗначенияСвойствОбъектов.Свойство = &мПВХ_СчетЗатратПодразделения
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Хозрасчетный.Ссылка,
	//|	КодСчета.Приоритет КАК Приоритет
	//|ИЗ
	//|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КодСчета КАК КодСчета
	//|		ПО Хозрасчетный.Код = КодСчета.Значение
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	Приоритет
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ФизЛицо.Объект
	//|ИЗ
	//|	ФизЛицо КАК ФизЛицо
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Подразделение.Объект
	//|ИЗ
	//|	Подразделение КАК Подразделение";
	//
	//
	//Запрос.УстановитьПараметр("мПВХ_ТабНомерИАСУП",				мПВХ_ТабНомерИАСУП);
	//Запрос.УстановитьПараметр("мПВХ_ИдентификаторМВЗ",			мПВХ_ИдентификаторМВЗ);
	//Запрос.УстановитьПараметр("мПВХ_СчетЗатратЗП",				мПВХ_СчетЗатратЗП);
	//Запрос.УстановитьПараметр("мПВХ_СчетЗатратПодразделения",	мПВХ_СчетЗатратПодразделения);
	//
	//
	//Запрос.УстановитьПараметр("ТабНомерИАСУП",		стрТЗ.Табн);
	//Запрос.УстановитьПараметр("ИдентификаторМВЗ",	стрТЗ.СубконтоДт1);
	//
	//Результат = Запрос.ВыполнитьПакет();
	//ВыборкаСчет = Результат[3].Выбрать();
	
	Рез = Неопределено;
	
	//Если ВыборкаСчет.Следующий() И ЗначениеЗаполнено(ВыборкаСчет.Ссылка) Тогда
	//	Рез = ВыборкаСчет.Ссылка;
	//КонецЕсли;	
	//	
	//ВыборкаФЛ	= Результат[4].Выбрать();//для проверки количества найденных физлиц по табномерам
	//ВыборкаПодр	= Результат[5].Выбрать();//для проверки 
	//
	//Если Рез = Неопределено Или ВыборкаФЛ.Количество() > 1 Тогда //Не найден счет или найдено несколько физлиц
	//	Если ВыборкаФЛ.Количество() = 0 Тогда
	//		Сообщить("Не найден счет затрат подразделения и/или физлицо с таб.номером: " + стрТЗ.Табн + " - СубконтоДт1: " + стрТЗ.СубконтоДт1);
	//	ИначеЕсли ВыборкаФЛ.Количество() = 1 Тогда
	//	    Сообщить("Не найден счет затрат для таб.номера: " + стрТЗ.Табн + "(" + ВыборкаФЛ.Объект + ")" + " - СубконтоДт1: " + стрТЗ.СубконтоДт1);
	//	Иначе
	//		Рез = Неопределено;// не ставим счет, т.к. найдено несколько физлиц
	//		Сообщить("Найдено несколько физ.лиц для таб.номера " + стрТЗ.Табн + ":");
	//		Пока ВыборкаФЛ.Следующий() Цикл
	//			 Сообщить("	- " + ВыборкаФЛ.Объект);
	//		КонецЦикла;
	//	КонецЕсли;
	//	//!!!!для филиалов/ОП - как правило счет 44
	//	ТекстДополнения = "Не найден счет затрат";
	//	Если мЭтоФилиалОП Тогда
	//		ТекстДополнения = ТекстДополнения + " (установлен 44 по умолчанию)";
	//		Рез = ПланыСчетов.Хозрасчетный.ИздержкиОбращения;
	//	КонецЕсли;
	//	
	//КонецЕсли;	
	
	Возврат Рез;
	
КонецФункции

Функция ПолучитьПодразделениеПоИдентификаторуМВЗ(ИдентификаторМВЗ)

	//Если Не ЗначениеЗаполнено(ИдентификаторМВЗ) Тогда
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ЗначенияСвойствОбъектов.Объект
	//|ИЗ
	//|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//|ГДЕ
	//|	(ЗначенияСвойствОбъектов.Свойство.Наименование = ""ИдентификаторМВЗ""
	//|			ИЛИ ЗначенияСвойствОбъектов.Свойство.Наименование = ""ИдентификаторМВЗ2"")
	//|	И НЕ ЗначенияСвойствОбъектов.Свойство.ПометкаУдаления
	//|	И ЗначенияСвойствОбъектов.Значение = &ИдентификаторМВЗ";
	//
	//Запрос.УстановитьПараметр("ИдентификаторМВЗ", ИдентификаторМВЗ);
	//
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать();
	//
	//Если Выборка.Следующий() Тогда
	//	
	//	Если Выборка.Количество() > 1 Тогда
	//		
	//		Сообщить("Найдено несколько подразделений по идентификатору МВЗ: " + ИдентификаторМВЗ);	
	//		Выборка.Сбросить();
	//		
	//		Пока Выборка.Следующий() Цикл 
	//			Сообщить(" - " + (Выборка.Объект.Родитель) + " - " + Выборка.Объект);
	//		КонецЦикла;
	//		//Сообщить("Будет подставлено первое");
	//		Возврат Выборка.Объект; //пока... м/б потом вышестоящее брать (например)
	//	Иначе
	//		
	//		Возврат Выборка.Объект;
	//		
	//	КонецЕсли;
	//	
	//	
	//Иначе
	//	Сообщить("Не найдено подразделение по идентификатору МВЗ: " + ИдентификаторМВЗ);
	//	Возврат Неопределено;
	//КонецЕсли;
	
	Возврат Неопределено;

КонецФункции // ПолучитьПодразделениеПоМВЗ()

Функция ПолучитьПодразделениеПоСоответствию(МВЗ)
	Отбор = Новый  Структура;
	Отбор.Вставить("МВЗ", МВЗ); 
	мСтрока = мПодразделениеСчетаЗатрат.НайтиСтроки(Отбор);
	
	Если мСтрока.Количество() = 0 Тогда
		Подразделение = мПодразделениеСчетаЗатрат.Найти("По умолчанию").Подразделение;
	ИначеЕсли  мСтрока.Количество() = 1 Тогда
		Подразделение = мСтрока[0].Подразделение;
	Иначе
		Подразделение = мПодразделениеСчетаЗатрат.Найти("По умолчанию").Подразделение;
	КонецЕсли;
	Возврат Подразделение;

КонецФункции // ПолучитьПодразделениеПоМВЗ()

Функция ПланыСчетовХозрасчетныйНайтиПоКоду(КодСчета)
	
	ТекСчет = ПланыСчетов.Хозрасчетный.НайтиПоКоду(КодСчета);
	
	Если ЗначениеЗаполнено(ТекСчет) Тогда
		Возврат ТекСчет;
	Иначе
		Сообщить("Не найден счет: " + КодСчета);
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьСубконто96(ВидОплатыФормат, стрТЗ)
	
	Если ВидОплатыФормат = "922A" Или ВидОплатыФормат = "8B1A" Или ВидОплатыФормат = "8B2A" Тогда// кпэ
		
		Рез = мСправочникиРезервы_КПЭ;
		
		
	ИначеЕсли ВидОплатыФормат = "9RA1" Или ВидОплатыФормат = "8RA1" Или ВидОплатыФормат = "8RA2" //отпуска
		Или ВидОплатыФормат = "8S01" Или ВидОплатыФормат = "8S02" Или ВидОплатыФормат = "9S01"
		Или ВидОплатыФормат = "8BK2" Или ВидОплатыФормат = "922K" Тогда
		
		Рез = мСправочникиРезервыНайтиПоКоду000000001;
		
	ИначеЕсли Найти(НРег(стрТЗ.ТекстВидаОплаты), "бонус") > 0 Тогда
		
		Рез = мСправочникиРезервы_КПЭ;
		
	ИначеЕсли Найти(НРег(стрТЗ.ТекстВидаОплаты), "Корр-каДляРезерваПремГод") > 0 Тогда
		
		Рез = мСправочникиРезервы_КПЭ;
		
	ИначеЕсли Найти(НРег(стрТЗ.ТекстВидаОплаты), "КорРезерваПремГод (НСиПЗ)") > 0 Тогда
		
		Рез = мСправочникиРезервы_КПЭ;

		
	ИначеЕсли Найти(НРег(стрТЗ.ТекстВидаОплаты), "отпуск") > 0 Тогда

		Рез = мСправочникиРезервыНайтиПоКоду000000001;
		
	ИначеЕсли Найти(НРег(стрТЗ.ТекстВидаОплаты), "фонд") > 0 Тогда

		Рез = мСправочникиРезервыНайтиПоКоду000000001;
		
	ИначеЕсли стрТЗ.ТекстВидаОплаты = "УдержНеотрДнейОтпПриУволь" Тогда
		
		Рез = мСправочникиРезервыНайтиПоКоду000000001;
		
	ИначеЕсли стрТЗ.ТекстВидаОплаты = "КомпЗаНеиспользОтп/Увольн" Тогда
		
		Рез = мСправочникиРезервыНайтиПоКоду000000001;
		
	Иначе
		
		Сообщить("Не найдено ОО: " +  стрТЗ.ТекстВидаОплаты);
		
	КонецЕсли;
	
	
	
	
	Возврат Рез;	
		

КонецФункции // ПолучитьСубконто96(КодСчета)()

Функция ПолучитьСубконто76(КодПолучателяПлатежа)

	//Если Не ЗначениеЗаполнено(КодПолучателяПлатежа) Тогда
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ЗначенияСвойствОбъектов.Объект
	//|ИЗ
	//|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//|ГДЕ
	//|	ЗначенияСвойствОбъектов.Свойство.Наименование = ""Код получателя платежа (ИАСУП)""
	//|	И ЗначенияСвойствОбъектов.Значение = &КодПолучателяПлатежа";
	//
	//Запрос.УстановитьПараметр("КодПолучателяПлатежа", КодПолучателяПлатежа);
	//
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать();
	//
	//Если Выборка.Следующий() Тогда
	//	
	//	Если Выборка.Количество() > 1 Тогда
	//		
	//		Сообщить("Найдено несколько получателей платежа по коду получателя платежа (ИАСУП): " + КодПолучателяПлатежа);	
	//		Выборка.Сбросить();
	//		
	//		Пока Выборка.Следующий() Цикл 
	//			Сообщить(" - " + Выборка.Объект);
	//		КонецЦикла;
	//		//Сообщить("Будет подставлено первое");
	//	Иначе
	//		
	//		Возврат Выборка.Объект;
	//		
	//	КонецЕсли;
	//	
	//	
	//Иначе
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	Контрагенты.Ссылка
	//	|ИЗ
	//	|	Справочник.Контрагенты КАК Контрагенты
	//	|ГДЕ
	//	|	Контрагенты.Код = &КодПолучателяПлатежа";
	//	
	//	//Если СтрДлина(КодПолучателяПлатежа)<9 Тогда
	//	//	КодПолучателяПлатежа = Формат(Число(КодПолучателяПлатежа), "ЧЦ=9; ЧВН=; ЧГ=0");
	//	//КонецЕсли;
	//	Запрос.УстановитьПараметр("КодПолучателяПлатежа", КодПолучателяПлатежа);
	//	
	//	Результат = Запрос.Выполнить();
	//	Выборка = Результат.Выбрать();
	//	Если Выборка.Следующий() Тогда
	//		
	//		Если Выборка.Количество() > 1 Тогда
	//			
	//			Сообщить("Найдено несколько получателей платежа по коду контрагента: " + КодПолучателяПлатежа);	
	//			Выборка.Сбросить();
	//			
	//			Пока Выборка.Следующий() Цикл 
	//				Сообщить(" - " + Выборка.Ссылка);
	//			КонецЦикла;
	//			//Сообщить("Будет подставлено первое");
	//		Иначе
	//			
	//			Возврат Выборка.Ссылка;
	//			
	//		КонецЕсли;
	//	КонецЕсли;
	//	
	//	
	//	
	//	Сообщить("Не найдено получателей платежа по коду: " + КодПолучателяПлатежа);
	//	Возврат Неопределено;
	//КонецЕсли;
	
	
 Возврат Неопределено;
КонецФункции // ПолучитьСубконто76(СубконтоКт3)()




Функция ПолучитьСоответствиеОрганизацийПодразделений()  Экспорт

	//мСоответствиеОрганизацийПодразделений = Новый Соответствие;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ЗначенияСвойствОбъектов.Объект КАК Подразделение,
	//               |	ЗначенияСвойствОбъектов.Значение КАК Организация,
	//               |	ЕСТЬNULL(МВЗ.Значение, ""По умолчанию"") КАК МВЗ
	//               |ИЗ
	//               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК МВЗ
	//               |		ПО ЗначенияСвойствОбъектов.Объект = МВЗ.Объект
	//               |			И (МВЗ.Свойство.Наименование В (""ИдентификаторМВЗ""))
	//               |ГДЕ
	//               |	ЗначенияСвойствОбъектов.Свойство.Наименование В (""ОрганизацияДляОтраженияЗП"")
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	ЗначенияСвойствОбъектов.Свойство.Наименование";
	//
	//Запрос.УстановитьПараметр("", );
	
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	Если мСоответствиеОрганизацийПодразделений[Выборка.Орг] = Неопределено Тогда
	//		мПодразделение = Новый Соответствие;
	//		мПодразделение.Вставить(Выборка.Подр, Выборка.МВЗ); 
	//		мСоответствиеОрганизацийПодразделений.Вставить(Выборка.Орг, мПодразделение);		
	//	Иначе
	//		мСоответствиеОрганизацийПодразделений[Выборка.Орг].Вставить(Выборка.Подр, Выборка.МВЗ); 
	//	КонецЕсли;
	//КонецЦикла;
	
	Возврат НЕОПРЕДЕЛЕНО;// Запрос.Выполнить().Выгрузить(); 

КонецФункции // ПолучитьСоответствиеОрганизацийПодразделений()


///////////////////////////////////////////////////////


мИнтерактивноеОткрытиОбработки = Ложь;

//#Область Соответствия

//мСоответствиеОрганизацийПодразделений = Новый Соответствие;
//мСоответствиеОрганизацийПодразделений = ПолучитьСоответствиеОрганизацийПодразделений();

//мСоотвСчетов = Новый Соответствие;

//мСоотвСчетов.Вставить("6911000000", "69.01");
//мСоотвСчетов.Вставить("6931000000", "69.03.1");
//мСоотвСчетов.Вставить("6912000000", "69.11");
//мСоотвСчетов.Вставить("6927000000", "69.02.7");
//мСоотвСчетов.Вставить("6921000000", "69.02.7");
//мСоотвСчетов.Вставить("6928000000", "69.02.7");
//мСоотвСчетов.Вставить("6924000000", "69.02.5");
//мСоотвСчетов.Вставить("6925000000", "69.02.6");

//мСоотвСчетов.Вставить("9610111020", "96.02.01");
//мСоотвСчетов.Вставить("9610121020", "96.02.02");
//мСоотвСчетов.Вставить("9610210020", "96.01.01");
//мСоотвСчетов.Вставить("9610220020", "96.01.02");

//мСоотвСчетов.Вставить("7618400000", "76.04");

//мСоотвСчетов.Вставить("7300022000", "73.03");
//мСоотвСчетов.Вставить("7300042000", "73.03");
//мСоотвСчетов.Вставить("7300031000", "73.03");
//мСоотвСчетов.Вставить("7300032000", "73.03");
//мСоотвСчетов.Вставить("7390040000", "73.03");

//мСоотвСчетов.Вставить("7618520000", "76.41");

////мСоотвСчетов.Вставить("7111000000", "71.01");
////мСоотвСчетов.Вставить("7111000000", "71.01");
//мСоотвСчетов.Вставить("7111000000", "73.03");
//мСоотвСчетов.Вставить("7111000000", "73.03");

//мСоотвСчетов.Вставить("9124130000", "91.02");

//мКомиссариаты = Новый Соответствие;
//мКомиссариаты.Вставить(Справочники.Организации.НайтиПоКоду("000000040"),Справочники.Контрагенты.НайтиПоКоду("БК04052"));//КОЛ
//мКомиссариаты.Вставить(Справочники.Организации.НайтиПоКоду("000000038"),Справочники.Контрагенты.НайтиПоКоду("67719732"));//КУР
//мКомиссариаты.Вставить(Справочники.Организации.НайтиПоКоду("000000039"),Справочники.Контрагенты.НайтиПоКоду("67700509"));//СМЛ
//мКомиссариаты.Вставить(Справочники.Организации.НайтиПоКоду("000000001"),Справочники.Контрагенты.НайтиПоКоду("БК04047"));//ТВР

//СчетКомиссариат = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.09.3"); 




//мПВХ_ТабНомеруИАСУП	= "ТабНомерИАСУП";//ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("ТабНомерИАСУП");
//мПВХ_СчетЗатратЗП	= "СчетЗатратЗП";//ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("СчетЗатратЗП");


////доплаты и надбавки
//мМассивДоплатыИНадбавки = Новый Массив;
//	
//мМассивДоплатыИНадбавки.Добавить("1000");мМассивДоплатыИНадбавки.Добавить("1001");
//мМассивДоплатыИНадбавки.Добавить("1002");мМассивДоплатыИНадбавки.Добавить("1003");
//мМассивДоплатыИНадбавки.Добавить("1004");мМассивДоплатыИНадбавки.Добавить("1005");
//мМассивДоплатыИНадбавки.Добавить("1006");мМассивДоплатыИНадбавки.Добавить("1106");
//мМассивДоплатыИНадбавки.Добавить("1007");мМассивДоплатыИНадбавки.Добавить("1008");
//мМассивДоплатыИНадбавки.Добавить("1009");мМассивДоплатыИНадбавки.Добавить("1109");
//мМассивДоплатыИНадбавки.Добавить("1010");мМассивДоплатыИНадбавки.Добавить("1060");
//мМассивДоплатыИНадбавки.Добавить("1011");мМассивДоплатыИНадбавки.Добавить("1061");
//мМассивДоплатыИНадбавки.Добавить("1012");мМассивДоплатыИНадбавки.Добавить("1013");
//мМассивДоплатыИНадбавки.Добавить("1014");мМассивДоплатыИНадбавки.Добавить("1015");
//мМассивДоплатыИНадбавки.Добавить("1018");мМассивДоплатыИНадбавки.Добавить("1118");
//мМассивДоплатыИНадбавки.Добавить("1019");мМассивДоплатыИНадбавки.Добавить("1020");
//мМассивДоплатыИНадбавки.Добавить("1021");мМассивДоплатыИНадбавки.Добавить("1022");
//мМассивДоплатыИНадбавки.Добавить("1023");мМассивДоплатыИНадбавки.Добавить("1024");
//мМассивДоплатыИНадбавки.Добавить("1028");мМассивДоплатыИНадбавки.Добавить("1032");
//мМассивДоплатыИНадбавки.Добавить("1033");мМассивДоплатыИНадбавки.Добавить("1034");
//мМассивДоплатыИНадбавки.Добавить("1036");мМассивДоплатыИНадбавки.Добавить("1040");
//мМассивДоплатыИНадбавки.Добавить("1041");мМассивДоплатыИНадбавки.Добавить("1045");
//мМассивДоплатыИНадбавки.Добавить("1051");мМассивДоплатыИНадбавки.Добавить("1053");
//мМассивДоплатыИНадбавки.Добавить("1054");мМассивДоплатыИНадбавки.Добавить("1055");
//мМассивДоплатыИНадбавки.Добавить("1056");мМассивДоплатыИНадбавки.Добавить("1057");
//мМассивДоплатыИНадбавки.Добавить("1058");мМассивДоплатыИНадбавки.Добавить("1059");
//мМассивДоплатыИНадбавки.Добавить("1062");мМассивДоплатыИНадбавки.Добавить("1063");
//мМассивДоплатыИНадбавки.Добавить("1064");мМассивДоплатыИНадбавки.Добавить("4446");
//мМассивДоплатыИНадбавки.Добавить("1070");мМассивДоплатыИНадбавки.Добавить("8217");
//мМассивДоплатыИНадбавки.Добавить("1070");мМассивДоплатыИНадбавки.Добавить("1110");//нет в КШ но по логике этот вид оплаты тоже относится сюда

//мМассивОплатаПоСреднемуЗаработку = Новый Массив;
//мМассивОплатаПоСреднемуЗаработку.Добавить("2000");
//мМассивОплатаПоСреднемуЗаработку.Добавить("2005");
//мМассивОплатаПоСреднемуЗаработку.Добавить("2006");
//мМассивОплатаПоСреднемуЗаработку.Добавить("2003");
//мМассивОплатаПоСреднемуЗаработку.Добавить("2010");
//мМассивОплатаПоСреднемуЗаработку.Добавить("2015");
//мМассивОплатаПоСреднемуЗаработку.Добавить("2035");
//мМассивОплатаПоСреднемуЗаработку.Добавить("2040");
//мМассивОплатаПоСреднемуЗаработку.Добавить("4458");
//мМассивОплатаПоСреднемуЗаработку.Добавить("556B");

//мМассивОтпускИДопОтпуск = Новый Массив;
//мМассивОтпускИДопОтпуск.Добавить("3000");
//мМассивОтпускИДопОтпуск.Добавить("3010");
//мМассивОтпускИДопОтпуск.Добавить("3110");
//мМассивОтпускИДопОтпуск.Добавить("3140");
//мМассивОтпускИДопОтпуск.Добавить("3120");
//мМассивОтпускИДопОтпуск.Добавить("3160");
//мМассивОтпускИДопОтпуск.Добавить("3161");
//мМассивОтпускИДопОтпуск.Добавить("/863");//Будущие расходы отпуск
//мМассивОтпускИДопОтпуск.Добавить("6010");//Компенсация за неиспользованный отпуск уволенным работникам
//мМассивОтпускИДопОтпуск.Добавить("8212");//Кор. Компенсации отпуска

//мМассивРезервыПоВзносам = Новый Массив;

//мМассивРезервыПоВзносам.Добавить("8342");
//мМассивРезервыПоВзносам.Добавить("8343");
//мМассивРезервыПоВзносам.Добавить("8345");
//мМассивРезервыПоВзносам.Добавить("8351");
//мМассивРезервыПоВзносам.Добавить("8358");
//мМассивРезервыПоВзносам.Добавить("8359");
//мМассивРезервыПоВзносам.Добавить("835X");
//мМассивРезервыПоВзносам.Добавить("835Y");


////Оценочное обязательство по предстоящей оплате отпусков (дополнительных):  страховые взносов в гос. внебюджетные фонды, начисленные от суммы отпускных выплат
//мМассивРезервыПоВзносамДоп = Новый Массив;

//мМассивРезервыПоВзносамДоп.Добавить("8362");
//мМассивРезервыПоВзносамДоп.Добавить("8363");
//мМассивРезервыПоВзносамДоп.Добавить("8365");
//мМассивРезервыПоВзносамДоп.Добавить("8371");
//мМассивРезервыПоВзносамДоп.Добавить("8E71");
//мМассивРезервыПоВзносамДоп.Добавить("8378");
//мМассивРезервыПоВзносамДоп.Добавить("8379");
//мМассивРезервыПоВзносамДоп.Добавить("837X");
//мМассивРезервыПоВзносамДоп.Добавить("837Y");
////МассивРезервыПоВзносам.Добавить("");

//мМассивОплатаДополнительногоОтработанногоВремени = Новый Массив;

//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0200");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0201");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0202");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0203");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0204");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0205");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0206");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0207");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0208");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0209");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0210");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0211");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0212");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0213");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0215");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0220");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0221");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0222");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0230");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0231");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0232");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0240");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0214");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0216");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0217");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0218");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0219");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0225");//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("225");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0226");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0227");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0250");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0251");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0252");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0260");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0261");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("0262");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("8222");
//мМассивОплатаДополнительногоОтработанногоВремени.Добавить("8223");

////Социальные выплаты за счет средств работодателя
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91 = Новый Массив;
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5101");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5266");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5311");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5314");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5315");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5330");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5340");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5341");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5342");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5343");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5583");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5584");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5586");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5588");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5590");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5003");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5264");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5265");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5267");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5316");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5582");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5600");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5605");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5615");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5620");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5625");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("5690");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("6386");
////мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя91.Добавить("");

//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты = Новый Массив;
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("1037");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("1038");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("1415");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("5000");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("5001");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("5002");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("5100");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("5360");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("5361");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("5362");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("5565");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("556A");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("5567");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("5569");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("5570");
//мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("8209");
////мМассивСоциальныеВыплатыЗаСчетСредствРаботодателя_Затраты.Добавить("");


////Социальные выплаты за счет средств ФСС, ФСС НС 
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС = Новый Массив;
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5415");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5416");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5640");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5641");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5500");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5505");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5509");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5503");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5504");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5512");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5513");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5514");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5515");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5516");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5502");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5511");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5501");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5510");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5519");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5517");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5518");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5520");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5521");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5508");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5522");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5523");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5526");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5525");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5524");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5530");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5532");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5534");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5535");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5538");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5540");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5541");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5542");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5550");
////мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("5551");//!!!!
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("8214");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("83G2");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("83G3");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("83G5");
//мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("83G6");



////мМассивСоциальныеВыплатыЗаСчетСредствФССФССНС.Добавить("");

////ПРОЧИЕ РАЗОВЫЕ И РЕГУЛЯРНЫЕ УДЕРЖАНИЯ			
//мМассивПрочиеРазовыеИРегулярныеУдержания = Новый Массив;
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8010");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8020");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8030");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8040");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8045");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8050");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8090");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8120");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8127");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8121");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8125");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8130");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8131");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8140");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8145");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8155");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8160");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8165");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8166");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8167");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8168");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8170");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8173");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8175");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8180");
//мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("8185");
////мМассивПрочиеРазовыеИРегулярныеУдержания.Добавить("");


//мМассивССохранениемСреднегоЗаработка = Новый Массив;
//мМассивССохранениемСреднегоЗаработка.Добавить("3435");
//мМассивССохранениемСреднегоЗаработка.Добавить("3495");
//мМассивССохранениемСреднегоЗаработка.Добавить("3496");
////мМассивССохранениемСреднегоЗаработка.Добавить("3485");
//мМассивССохранениемСреднегоЗаработка.Добавить("3486");
////мМассивССохранениемСреднегоЗаработка.Добавить("3490");
//мМассивССохранениемСреднегоЗаработка.Добавить("3491");
//мМассивССохранениемСреднегоЗаработка.Добавить("5527");
//мМассивССохранениемСреднегоЗаработка.Добавить("5528");
//мМассивССохранениемСреднегоЗаработка.Добавить("3430");
////мМассивССохранениемСреднегоЗаработка.Добавить("");


//мМассивССохранениемСреднегоЗаработка_Затраты = Новый Массив;
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3415");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3420");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3425");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3440");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3445");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3455");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3460");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3465");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("2030");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3470");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3485");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3475");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("2050");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("2051");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3400");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3405");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3476");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3477");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3482");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3483");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3492");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3493");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("8215");
//мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("3410");
////мМассивССохранениемСреднегоЗаработка_Затраты.Добавить("");

////Заработная плата, начисленная по тарифным ставкам, окладам
//мМассивЗПпоТарифнымСтавкамОкладам = Новый Массив;
//мМассивЗПпоТарифнымСтавкамОкладам.Добавить("0001");
//мМассивЗПпоТарифнымСтавкамОкладам.Добавить("0010");
//мМассивЗПпоТарифнымСтавкамОкладам.Добавить("0015");
//мМассивЗПпоТарифнымСтавкамОкладам.Добавить("0020");
//мМассивЗПпоТарифнымСтавкамОкладам.Добавить("0025");
//мМассивЗПпоТарифнымСтавкамОкладам.Добавить("0030");
//мМассивЗПпоТарифнымСтавкамОкладам.Добавить("0040");
//мМассивЗПпоТарифнымСтавкамОкладам.Добавить("0050");
//мМассивЗПпоТарифнымСтавкамОкладам.Добавить("0041");
//мМассивЗПпоТарифнымСтавкамОкладам.Добавить("0051");

////Премии, вознаграждения и другие поощрительные выплаты
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты = Новый Массив;
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Добавить("1201");
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Добавить("1202");
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Добавить("1206");
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Добавить("1224");
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Добавить("1225");
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Добавить("1240");
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Добавить("1268");
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Добавить("1270");
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Добавить("1271");
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Добавить("1272");
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Добавить("1273");
//мМассивПремииВознагражденияДругиеПоощрительныеВыплаты_Затраты.Добавить("1274");

//мМассивКорректирующиеВидыОплат = Новый Массив;
//мМассивКорректирующиеВидыОплат.Добавить("8201");
//мМассивКорректирующиеВидыОплат.Добавить("8202");
//мМассивКорректирующиеВидыОплат.Добавить("8203");
//мМассивКорректирующиеВидыОплат.Добавить("8204");
//мМассивКорректирующиеВидыОплат.Добавить("8205");
//мМассивКорректирующиеВидыОплат.Добавить("8208");
//мМассивКорректирующиеВидыОплат.Добавить("8209");
//мМассивКорректирующиеВидыОплат.Добавить("8211");
//мМассивКорректирующиеВидыОплат.Добавить("8213");
//мМассивКорректирующиеВидыОплат.Добавить("8218");
//мМассивКорректирующиеВидыОплат.Добавить("8220");
//мМассивКорректирующиеВидыОплат.Добавить("8221");
//мМассивКорректирующиеВидыОплат.Добавить("8224");
//мМассивКорректирующиеВидыОплат.Добавить("8225");
//мМассивКорректирующиеВидыОплат.Добавить("8226");
//мМассивКорректирующиеВидыОплат.Добавить("8229");
//мМассивКорректирующиеВидыОплат.Добавить("8231");
//мМассивКорректирующиеВидыОплат.Добавить("8232");
//мМассивКорректирующиеВидыОплат.Добавить("8233");
//мМассивКорректирующиеВидыОплат.Добавить("8234");
//мМассивКорректирующиеВидыОплат.Добавить("8235");
//мМассивКорректирующиеВидыОплат.Добавить("8236");
//мМассивКорректирующиеВидыОплат.Добавить("8237");
//мМассивКорректирующиеВидыОплат.Добавить("8239");
//мМассивКорректирующиеВидыОплат.Добавить("8240");
//мМассивКорректирующиеВидыОплат.Добавить("8241");
//мМассивКорректирующиеВидыОплат.Добавить("8256");
//мМассивКорректирующиеВидыОплат.Добавить("8267");

//мМассивКорректирующиеВидыОплат_ФСС = Новый Массив;
//мМассивКорректирующиеВидыОплат_ФСС.Добавить("8210");
//мМассивКорректирующиеВидыОплат_ФСС.Добавить("8216");
//мМассивКорректирующиеВидыОплат_ФСС.Добавить("8219");
//мМассивКорректирующиеВидыОплат_ФСС.Добавить("8230");
//мМассивКорректирующиеВидыОплат_ФСС.Добавить("8243");
//мМассивКорректирующиеВидыОплат_ФСС.Добавить("8245");
//мМассивКорректирующиеВидыОплат_ФСС.Добавить("8242");
////мМассивКорректирующиеВидыОплат_ФСС.Добавить("");

//мМассивПрофсоюзныеВзносы = Новый Массив;
//мМассивПрофсоюзныеВзносы.Добавить("8000");
//мМассивПрофсоюзныеВзносы.Добавить("8005");
//мМассивПрофсоюзныеВзносы.Добавить("8290");


////Районные коэффициенты и северные надбавки
//мМассивРайонныеКоэффициентИСеверныеНадбавки = Новый Массив;
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("4241");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("4244");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("4246");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("4247");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("4248");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("4249");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("424A");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("424B");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("424C");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("4261");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("4264");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("4266");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("4267");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("4268");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("4269");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("426A");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("426B");
//мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("426C");
////мМассивРайонныеКоэффициентИСеверныеНадбавки.Добавить("");












//мМассивБезПроводок = Новый Массив;
//мМассивБезПроводок.Добавить("83S1");
////мМассивБезПроводок.Добавить("");
//мМассивБезПроводок.Добавить("9Z61");
//мМассивБезПроводок.Добавить("4250");
//мМассивБезПроводок.Добавить("4255");
//мМассивБезПроводок.Добавить("4490");
//мМассивБезПроводок.Добавить("7000");
//мМассивБезПроводок.Добавить("7001");
//мМассивБезПроводок.Добавить("7002");
//мМассивБезПроводок.Добавить("7003");
//мМассивБезПроводок.Добавить("7004");
//мМассивБезПроводок.Добавить("7005");
//мМассивБезПроводок.Добавить("7007");
//мМассивБезПроводок.Добавить("7008");
//мМассивБезПроводок.Добавить("7010");
//мМассивБезПроводок.Добавить("7013");
//мМассивБезПроводок.Добавить("7100");
//мМассивБезПроводок.Добавить("7110");
//мМассивБезПроводок.Добавить("7121");
//мМассивБезПроводок.Добавить("7130");
//мМассивБезПроводок.Добавить("7140");
//мМассивБезПроводок.Добавить("7155");
//мМассивБезПроводок.Добавить("7160");
//мМассивБезПроводок.Добавить("7165");
//мМассивБезПроводок.Добавить("7170");
//мМассивБезПроводок.Добавить("7174");
//мМассивБезПроводок.Добавить("7175");
//мМассивБезПроводок.Добавить("7176");
//мМассивБезПроводок.Добавить("7178");
//мМассивБезПроводок.Добавить("7179");
//мМассивБезПроводок.Добавить("7180");
//мМассивБезПроводок.Добавить("7181");
//мМассивБезПроводок.Добавить("7182");
//мМассивБезПроводок.Добавить("9100");
//мМассивБезПроводок.Добавить("9101");
//мМассивБезПроводок.Добавить("9102");
//мМассивБезПроводок.Добавить("9103");
//мМассивБезПроводок.Добавить("9106");
//мМассивБезПроводок.Добавить("9900");
//мМассивБезПроводок.Добавить("9901");
//мМассивБезПроводок.Добавить("9861");
//мМассивБезПроводок.Добавить("9863");
//мМассивБезПроводок.Добавить("/861");
//мМассивБезПроводок.Добавить("/866");
//мМассивБезПроводок.Добавить("9Z61");
//мМассивБезПроводок.Добавить("9Z66");
//мМассивБезПроводок.Добавить("8557");
//мМассивБезПроводок.Добавить("8559");
//мМассивБезПроводок.Добавить("8255");
//мМассивБезПроводок.Добавить("8522");
//мМассивБезПроводок.Добавить("8523");
//мМассивБезПроводок.Добавить("8524");
//мМассивБезПроводок.Добавить("8810");
//мМассивБезПроводок.Добавить("8811");
//мМассивБезПроводок.Добавить("8812");
//мМассивБезПроводок.Добавить("8813");
//мМассивБезПроводок.Добавить("8814");
//мМассивБезПроводок.Добавить("90A7");
//мМассивБезПроводок.Добавить("90A8");
//мМассивБезПроводок.Добавить("90A9");
//мМассивБезПроводок.Добавить("90A1");
//мМассивБезПроводок.Добавить("90A2");

////дополнительно
//мМассивБезПроводок.Добавить("X561");
//мМассивБезПроводок.Добавить("9Z63");
////мМассивБезПроводок.Добавить("");

//мМассивПроводкиПоРезервуОтпусков = Новый Массив;
//мМассивПроводкиПоРезервуОтпусков.Добавить("3000");
//мМассивПроводкиПоРезервуОтпусков.Добавить("3010");
//мМассивПроводкиПоРезервуОтпусков.Добавить("3120");
//мМассивПроводкиПоРезервуОтпусков.Добавить("3140");
//мМассивПроводкиПоРезервуОтпусков.Добавить("3200");
//мМассивПроводкиПоРезервуОтпусков.Добавить("4410");
//мМассивПроводкиПоРезервуОтпусков.Добавить("6010");
//мМассивПроводкиПоРезервуОтпусков.Добавить("8362");
//мМассивПроводкиПоРезервуОтпусков.Добавить("8363");
//мМассивПроводкиПоРезервуОтпусков.Добавить("8365");
//мМассивПроводкиПоРезервуОтпусков.Добавить("8371");
//мМассивПроводкиПоРезервуОтпусков.Добавить("8342");
//мМассивПроводкиПоРезервуОтпусков.Добавить("8343");
//мМассивПроводкиПоРезервуОтпусков.Добавить("8345");
//мМассивПроводкиПоРезервуОтпусков.Добавить("8351");
//мМассивПроводкиПоРезервуОтпусков.Добавить("8212");

//мМассивПроводкиПоРезервуКПЭ = Новый Массив;
//мМассивПроводкиПоРезервуКПЭ.Добавить("1221");
//мМассивПроводкиПоРезервуКПЭ.Добавить("4245");
//мМассивПроводкиПоРезервуКПЭ.Добавить("4265");
//мМассивПроводкиПоРезервуКПЭ.Добавить("83B1");
//мМассивПроводкиПоРезервуКПЭ.Добавить("83B3");
//мМассивПроводкиПоРезервуКПЭ.Добавить("83B5");
//мМассивПроводкиПоРезервуКПЭ.Добавить("424E");
//мМассивПроводкиПоРезервуКПЭ.Добавить("426E");

//// 424E  426E



//МассивСчетовПоПроводкамРезерва = Новый Массив;
//МассивСчетовПоПроводкамРезерва.Добавить(ПланыСчетов.Хозрасчетный.ФСС);
//МассивСчетовПоПроводкамРезерва.Добавить(ПланыСчетов.Хозрасчетный.ПФР);
//МассивСчетовПоПроводкамРезерва.Добавить(ПланыСчетов.Хозрасчетный.ПФР_страх);
//МассивСчетовПоПроводкамРезерва.Добавить(ПланыСчетов.Хозрасчетный.ПФР_нак);
//МассивСчетовПоПроводкамРезерва.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп);
//МассивСчетовПоПроводкамРезерва.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры);
//МассивСчетовПоПроводкамРезерва.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда);
//МассивСчетовПоПроводкамРезерва.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда);
//МассивСчетовПоПроводкамРезерва.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС);
//МассивСчетовПоПроводкамРезерва.Добавить(ПланыСчетов.Хозрасчетный.ФОМС);
//МассивСчетовПоПроводкамРезерва.Добавить(ПланыСчетов.Хозрасчетный.ФФОМС);
//МассивСчетовПоПроводкамРезерва.Добавить(ПланыСчетов.Хозрасчетный.ТФОМС);


//#КонецОбласти
