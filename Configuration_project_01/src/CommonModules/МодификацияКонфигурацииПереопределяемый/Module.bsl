////////////////////////////////////////////////////////////////////////////////
// Переопределяемые процедуры, вызываемые из обработчиков форм, таких как:
// "ПриСозданииНаСервере", "ПриЧтенииНаСервере", "ПередЗаписьюНаСервере", 
// "ПослеЗаписи", а также при изменении некоторых реквизитов табличной части,
// таких как "Номенклатура", "Характеристика".
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ЗаполнениеОбработчиковФормы

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
// 	Форма - форма, из обработчика события которой происходит вызов процедуры.
//	см. справочную информацию по событиям управляемой формы.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	//Сидоров+
	ИмяФормы = Форма.ИмяФормы;
	
	Если ИмяФормы = "Справочник.Контрагенты.Форма.ФормаЭлементаЛС" Тогда
		//пока кода мало - не выносим в отд.процедуру
		НомерЛС = Форма.Объект.НомерЛС;
		Если ЗначениеЗаполнено(НомерЛС) Тогда
			Форма.Элементы.НомерЛС.ТолькоПросмотр				= Истина;
			МассПартнеров = АЭС_Сервер.ПолучитьМассивПартнеровПоУмолчанию();
			Если Ложь Тогда МассПартнеров = Новый Массив; КонецЕсли;
			Если МассПартнеров.Найти(Форма.Объект.Партнер) <> Неопределено Или Лев(НомерЛС, 2) = "67" Тогда
				// для ЛС которые есть в СТЕК - заполнение наименования и адреса - по кнопке Обновить данные по ЛС
				//(кроме Смоленска - есть платежи принимаемые по упр.компаниям)
				Форма.Элементы.РабочееНаименованиеЛС.ТолькоПросмотр	= Истина;
				Форма.Элементы.АдресЛС.ТолькоПросмотр				= Истина;
			Иначе
				// для ЛС которые нет в СТЕК - делаем кнопки недоступными 
				Форма.Элементы.ОбновитьДанныеПоЛС.Доступность = Ложь;
				Форма.Элементы.ОбновитьТаблицыЗадолженностиИОплат.Доступность = Ложь;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокумента" Тогда
		//Если ЗначениеЗаполнено(Форма.Объект.СозданныйПКО) Тогда
		//	Форма.Элементы.СозданныйПКО.ТолькоПросмотр			= Истина;
		//КонецЕсли;
	ИначеЕсли ИмяФормы = "Документ.ПриходныйКассовыйОрдер.Форма.ФормаДокумента"
		Или ИмяФормы = "Документ.РасходныйКассовыйОрдер.Форма.ФормаДокумента"
		Тогда
		//Форма.Элементы.ДопРеквизиты_АЭС.Видимость = РольДоступна("ПолныеПрава");
		
		Элемент = Форма.Элементы.Добавить("АгентскийПлатеж", Тип("ПолеФормы"), );
		Элемент.Вид			= ВидПоляФормы.ПолеФлажка;
		Элемент.ПутьКДанным	= "Объект.АгентскийПлатеж";
	ИначеЕсли Форма.ИмяФормы = "Справочник.Кассы.Форма.ФормаЭлемента" Тогда
		Элемент = Форма.Элементы.Добавить("ОсновнаяКассаПодразделения", Тип("ПолеФормы"), );
		Элемент.Вид			= ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным	= "Объект.ОсновнаяКассаПодразделения";
	//ИначеЕсли Форма.ИмяФормы = "" Тогда
	ИначеЕсли ИмяФормы = "Документ.ОтчетОРозничныхПродажах.Форма.ФормаДокумента" Тогда
	   Элемент				= Форма.Элементы.Добавить("НомерZОтчета", Тип("ПолеФормы"), Форма.Элементы.Страницы.ПодчиненныеЭлементы.СтраницаДополнительно.ПодчиненныеЭлементы.ГруппаДополнительно.ПодчиненныеЭлементы.ГруппаДополнительноПраво);
	   Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	   Элемент.ПутьКДанным  = "Объект.НомерZОтчета";
	 //АЭС МИС(
 	ИначеЕсли ИмяФормы = "Справочник.Номенклатура.Форма.ФормаЭлемента" Тогда
	   Элемент				= Форма.Элементы.Добавить("ОтражатьВКниге", Тип("ПолеФормы"), Форма.Элементы.СтраницыКарточкаНоменклатуры.ПодчиненныеЭлементы.СтраницаРеквизитыНоменклатуры.ПодчиненныеЭлементы.ГруппаРеквизиты.ПодчиненныеЭлементы.ГруппаГруппировкаЛевоПраво.ПодчиненныеЭлементы.ГруппаПраво);
	   Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	   Элемент.ПутьКДанным  = "Объект.ОтражатьВКниге";
    ИначеЕсли ИмяФормы = "Справочник.Организации.Форма.ФормаЭлемента" Тогда
	   Элемент				= Форма.Элементы.Добавить("АЭС_ПечатьДанныхАгентаЮЛ", Тип("ПолеФормы"), Форма.Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницыПараметрыОрганизации.ПодчиненныеЭлементы.ГруппаОбщаяИнформация.ПодчиненныеЭлементы.ГруппаСтраницОсновныхКодов.ПодчиненныеЭлементы.ОсновныеКодыЮрЛица.ПодчиненныеЭлементы.ГруппаКолонокЮрЛица.ПодчиненныеЭлементы.ПраваяСторонаЮрЛица.ПодчиненныеЭлементы.ГруппаПраваяСторонаЮрЛицаКоды);
	   Элемент.Вид			= ВидПоляФормы.ПолеФлажка;
	   Элемент.ПутьКДанным  = "Объект.АЭС_ПечатьДанныхАгента";
	   Элемент				= Форма.Элементы.Добавить("АЭС_ПечатьДанныхАгентаИП", Тип("ПолеФормы"), Форма.Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницыПараметрыОрганизации.ПодчиненныеЭлементы.ГруппаОбщаяИнформация.ПодчиненныеЭлементы.ГруппаСтраницОсновныхКодов.ПодчиненныеЭлементы.ОсновныеКодыИндивидуальногоПредпринимателя.ПодчиненныеЭлементы.ПраваяСторонаИндивидуальногоПредпринимателя.ПодчиненныеЭлементы.ПраваяСторонаИндивидуальногоПредпринимателяЗаголовкиЗначения);
	   Элемент.Вид			= ВидПоляФормы.ПолеФлажка;
	   Элемент.ПутьКДанным  = "Объект.АЭС_ПечатьДанныхАгента";
	   Элемент				= Форма.Элементы.Добавить("АЭС_ПечатьДанныхАгентаОП", Тип("ПолеФормы"), Форма.Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницыПараметрыОрганизации.ПодчиненныеЭлементы.ГруппаОбщаяИнформация.ПодчиненныеЭлементы.ГруппаСтраницОсновныхКодов.ПодчиненныеЭлементы.ОсновныеКодыОбособленногоПодразделения.ПодчиненныеЭлементы.ПраваяСторонаОбособленногоПодразделения);
	   Элемент.Вид			= ВидПоляФормы.ПолеФлажка;
	   Элемент.ПутьКДанным  = "Объект.АЭС_ПечатьДанныхАгента";	
	ИначеЕсли ИмяФормы = "Справочник.Пользователи.Форма.ФормаЭлемента" Тогда
	   Элемент				= Форма.Элементы.Добавить("ФОП", Тип("ПолеФормы"), Форма.Элементы.ГруппаШапка.ПодчиненныеЭлементы.ГруппаДанныеШапки);
	   Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	   Элемент.ПутьКДанным  = "Объект.ФОП";  
	ИначеЕсли ИмяФормы = "Документ.ВыемкаДенежныхСредствИзКассыККМ.Форма.ФормаДокумента" Тогда
	   Элемент				= Форма.Элементы.Вставить("АгентскийПлатеж", Тип("ПолеФормы"),,Форма.Элементы.Найти("Комментарий"));
	   Элемент.Вид			= ВидПоляФормы.ПолеФлажка;
	   Элемент.ПутьКДанным  = "Объект.АгентскийПлатеж";     
	  //) АЭС
	КонецЕсли;
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
// 	Форма - форма, из обработчика события которой происходит вызов процедуры.
//	см. справочную информацию по событиям управляемой формы.
//
Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
// 	Форма - форма, из обработчика события которой происходит вызов процедуры.
//	см. справочную информацию по событиям управляемой формы.
//
Процедура ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи)Экспорт
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
// 	Форма - форма, из обработчика события которой происходит вызов процедуры.
//	см. справочную информацию по событиям управляемой формы.
//
Процедура ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи)Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеНоменклатуры

// Переопределяемая процедура, вызываемая из обработчика реквизита "Номенклатура" табличной части.
//
// Параметры:
// 	ТекущаяСтрока - ДанныеФормыЭлементКоллекции - текущая строка табличной части.
// 	ПараметрыДействия - Структура - допустимые действия для табличной части.
//	КэшированныеЗначения - Структура - Кэшированные значения табличной части.
Процедура НоменклатураПриИзмененииПереопределяемый(ТекущаяСтрока, ПараметрыДействия, КэшированныеЗначения)Экспорт


КонецПроцедуры

#КонецОбласти 

#Область ЗаполнениеХарактеристики

// Переопределяемая процедура, вызываемая из обработчика реквизита "Характеристика" табличной части.
//
// Параметры:
// 	ТекущаяСтрока - ДанныеФормыЭлементКоллекции - текущая строка табличной части.
// 	ПараметрыДействия - Структура - допустимые действия для табличной части.
//	КэшированныеЗначения - Структура - Кэшированные значения табличной части.
Процедура ХарактеристикаПриИзмененииПереопределяемый(ТекущаяСтрока, ПараметрыДействия, КэшированныеЗначения)Экспорт


КонецПроцедуры
	
#КонецОбласти 

#Область РассылкиИОповещенияКлиентам

// Переопределяемая процедура, возвращающая признак необходимости настройки для типа события регламентного задания.
//
// Параметры:
//  ТипСобытия  - ПеречислениеСсылка.ТипыСобытийОповещений - тип события оповещения, для которого указывается признак.
//
// Возвращаемое значение:
//   Булево   - Истина, если настройка регламентного задания необходима, Ложь в обратном случае.
//
Функция ДляТипаСобытияТребуетсяНастройкаРегламентногоЗадания(ТипСобытия) Экспорт

	Возврат Ложь;

КонецФункции

// Переопределяемая процедура, в которой можно настроить параметры обработки очереди оповещений по типу события.
//
// Параметры:
//  ТипСобытия         - ПеречислениеСсылка.ТипыСобытийОповещений - тип события оповещения для которого указываются настройки.
//  СтруктураНастроек  - Структура - Настройки, подробное описание см. в модуле менеджера перечисления ТипыСобытийОповещений.
//
Процедура НастройкиТипаСобытияДляОбработкиОчередиОповещений(ТипСобытия, СтруктураНастроек) Экспорт

	

КонецПроцедуры

// Переопределяемая процедура, в которой можно настроить анализ данных для оповещений клиентам и запись в очередь оповещений.
// Примеры реализации см. в общем модуле РассылкиИОповещенияКлиентам.
//
// Параметры:
//  ВидОповещения  - Справочник.ВидыОповещенийКлиентам - вид оповещения, для которого выполняется анализ данных.
//
Процедура АнализДанныхДляВидаОповещения(ВидОповещения) Экспорт

	

КонецПроцедуры 

// Переопределяемая процедура, в которой можно получить состояние объекта до записи.
//
// Параметры:
//  Источник  - Произвольный - объект или набор записей регистра, который вызвал событие "перед записью".
//  Отказ  - Булево - признак отказа от записи объекта.
//  РежимЗаписи  - РежимЗаписиДокумента - действительно, только в случае записи документа, в остальных случаях Неопределено.
//  РежимПроведения  - РежимПроведения - действительно, только в случае проведения документа, в остальных случаях Неопределено.
//
Процедура ИсточникОповещенияПередЗаписью(Источник, Отказ, РежимЗаписи , РежимПроведения) Экспорт
	
	
	
КонецПроцедуры

// Переопределяемая процедура, в которой можно получить новое состояние объекта и при необходимости выполнить запись
// в очередь оповещений.
//
// Параметры:
//  Источник  - Произвольный - объект или набор записей регистра, который вызвал событие "при записи".
//  Отказ  - Булево - признак отказа от записи объекта.
//
Процедура ИсточникОповещенияПриЗаписи(Источник, Отказ) Экспорт
	
	
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти
