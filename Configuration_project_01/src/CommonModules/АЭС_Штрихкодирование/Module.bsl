//Le8niD 03012016
//Дополнительная работа со штрихкодами.

#Область ПрограммныйИнтерфейс

Функция ЗаполнитьЧекККМПоШтрихКоду(ЭтотОбъект, Элементы, Штрихкод) Экспорт 
	
	//Возврат Ложь;//заглушка
	Если Ложь Тогда ЭтотОбъект = Документы.ЧекККМ.СоздатьДокумент(); КонецЕсли;
	
	СтруктураКвитанции = ПолучитьДанныеКвитанции(Штрихкод, Неопределено);
	////!!!!отладка
	//СтруктураКвитанции = Новый Структура("НомерЛС", "4671241373");
	////!!!!отладка
	Если СтруктураКвитанции <> Неопределено Тогда 
		ЭтотОбъект.ВидОплаты = Справочники.АЭС_ВидОплаты.ОсновнаяДеятельность;
		
		//!!!!ПЕРЕДЕЛАТЬ на поиск по НомерЛС и ЮридическоеФизическоеЛицо 
		ЛицевойСчет = Справочники.Контрагенты.НайтиПоРеквизиту("НомерЛС", СтруктураКвитанции.НомерЛС);
		Если ЗначениеЗаполнено(ЛицевойСчет) Тогда
			ЭтотОбъект.ЛицевойСчет	= ЛицевойСчет;
			ЭтотОбъект.ПартнерДляЛС	= ЛицевойСчет.Партнер;
			//у ЮЛ нет квитанций (?)
			ЭтотОбъект.ЮЛФЛ = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		КонецЕсли;
		
		Если СтруктураКвитанции.Свойство("ВидДокумента") И СтруктураКвитанции.ВидДокумента = "4" Тогда
			ЭтотОбъект.ВидПлатежа = Справочники.АЭС_ВидОплаты.Электроэнергия;
		КонецЕсли;
		
		Попытка
			ЭтотОбъект.СуммаДокумента = Число(СтруктураКвитанции.СуммаОплаты)/100;
		Исключение
			Сообщить("Не удалось преобразовать к числу: " + СтруктураКвитанции.СуммаОплаты);
		КонецПопытки;
		ЭтотОбъект.ПериодОплаты = СтруктураКвитанции.МесяцОплаты + СтруктураКвитанции.ГодОплаты;
		
		
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	


КонецФункции // ЗаполнитьЧеККМПоШтрихКоду(ЭтотОбъект, Элементы, ДанныеШтрихкода.Штрихкод)()



//Раскладывает строку штрихкода
//
// Параметры:
//  СтрокаШК  - Строка - строка штрихкода
//
// Возвращаемое значение:
//  Структура   - ЛицевойСчет - строка (перем) / неопределено
//              - СуммаСчета  - строка (8) / неопределено
//              - МесяцСчета  - строка (2) / неопределено
//              - ГодОплаты   - строка (2) / неопределено
//              - ВидДокумента - строка (1) / неопределено
//              - ТарифностьПУ - строка (1) / неопределено
//Функция ПолучитьДанныеКвитанции(СтрокаШК, Партнер) Экспорт
//	
//	ДлиннаШК = СтрДлина(СтрокаШК);
//	КодШК = лев(СтрокаШК,2);
//	
//	Если ДлиннаШК = 25 И КодШК="46" тогда     //4671462006000126501216415
//		возврат Курск(СтрокаШК);	
//	иначеЕсли  ДлиннаШК = 33 Тогда//и КодШК="69" 
//		возврат Тверь(СтрокаШК);	
//	иначеЕсли  ДлиннаШК = 11   и КодШК="67" тогда    // 67272005066
//		возврат Смоленск(СтрокаШК);	
//	иначеЕсли  ДлиннаШК = 12   и КодШК="51" тогда
//		возврат Мурманск(СтрокаШК);	
//	иначе
//		возврат неопределено;	
//	КонецЕсли ;
//	
//возврат неопределено;	
//  	
//КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеКвитанции(СтрокаШК, Партнер)Экспорт
	Распознано = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	АЭС_ШтрихКоды.Партнер,
	               |	АЭС_ШтрихКоды.ЛС,
	               |	АЭС_ШтрихКоды.Сумма,
	               |	АЭС_ШтрихКоды.Месяц,
	               |	АЭС_ШтрихКоды.Год,
	               |	АЭС_ШтрихКоды.ВидДокумента,
	               |	АЭС_ШтрихКоды.Тарифность,
	               |	АЭС_ШтрихКоды.Показания,
	               |	АЭС_ШтрихКоды.IDОрганизации,
	               |	АЭС_ШтрихКоды.ПозицияID,
	               |	АЭС_ШтрихКоды.ДлинаШК
	               |ИЗ
	               |	РегистрСведений.АЭС_ШтрихКоды КАК АЭС_ШтрихКоды
	               |ГДЕ
	               |	АЭС_ШтрихКоды.Партнер = &Партнер";
	
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если НЕ Результат.Пустой() Тогда
		Пока Выборка.Следующий() Цикл                                                                                                                                
			Если ЗначениеЗаполнено(Выборка.ПозицияID) Тогда
				мПозицияID 	= СтрРазделить(Выборка.ПозицияID,"/", Ложь);
				ID			= Сред(СтрокаШК, Вычислить(мПозицияID[0]),Вычислить(мПозицияID[1]));
			Иначе
				ID = "";
			КонецЕсли;
			Если ID = Выборка.IDОрганизации И (Выборка.ДлинаШК = СтрДлина(СтрокаШК) Или Выборка.ДлинаШК = 0) Тогда
				Если Не ПустаяСтрока(Выборка.ЛС) Тогда
					МассивСоставляющих = СтрРазделить(Выборка.ЛС,";", Ложь);
					НомерЛС = "";
					Для каждого ЭлементМ Из МассивСоставляющих Цикл 
						мЛС 			= СтрРазделить(ЭлементМ,"/", Ложь);
						НомерЛС			= НомерЛС+Сред(СтрокаШК, Вычислить(мЛС[0]),Вычислить(мЛС[1]));
					КонецЦикла;
				КонецЕсли;
				Если Не ПустаяСтрока(Выборка.Сумма) Тогда
					мСуммаОплаты	= СтрРазделить(Выборка.Сумма,"/", Ложь);
					СуммаОплаты		= Сред(СтрокаШК,Вычислить(мСуммаОплаты[0]),Вычислить(мСуммаОплаты[1]));
				КонецЕсли;
				Если Не ПустаяСтрока(Выборка.Месяц) Тогда
					мМесяцОплаты    = СтрРазделить(Выборка.Месяц,"/", Ложь);
					МесяцОплаты		= Сред(СтрокаШК,Вычислить(мМесяцОплаты[0]),Вычислить(мМесяцОплаты[1]));
				КонецЕсли;
				Если Не ПустаяСтрока(Выборка.Год) Тогда
					мГодОплаты  	= СтрРазделить(Выборка.Год,"/", Ложь);
					ГодОплаты		= Сред(СтрокаШК,Вычислить(мГодОплаты[0]),Вычислить(мГодОплаты[1]));
				КонецЕсли;
				Если Не ПустаяСтрока(Выборка.ВидДокумента) Тогда
					мВидДокумента   = СтрРазделить(Выборка.ВидДокумента,"/", Ложь);
					ВидДокумента	= Сред(СтрокаШК,Вычислить(мВидДокумента[0]),Вычислить(мВидДокумента[1]));
				КонецЕсли;
				Если Не ПустаяСтрока(Выборка.Тарифность) Тогда
					мТарифностьПУ   = СтрРазделить(Выборка.Тарифность,"/", Ложь);
					ТарифностьПУ	= Сред(СтрокаШК,Вычислить(мТарифностьПУ[0]),Вычислить(мТарифностьПУ[1]));
				КонецЕсли;
				Если Не ПустаяСтрока(Выборка.Показания) Тогда
					мПоказания		= СтрРазделить(Выборка.Показания,"/", Ложь);
					Показания		= Сред(СтрокаШК,Вычислить(мПоказания[0]),Вычислить(мПоказания[1]));
				КонецЕсли;
				Распознано = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ Распознано Тогда 
			Распознано = Ложь;
			ОписаниеОшибки = "Считываемый штрихкод не соответствует выбранному Партнеру";
		КонецЕсли;
	Иначе
		Распознано = Ложь;
		ОписаниеОшибки = "Распознование штрих кода не настроено";
	КонецЕсли;
	//1-10    код абонента 
	//11-18   сумма платежа умноженная на 100
	//19-20   месяц оплаты
	//21-22   год оплаты
	//23      вид документа (4)
	//24      тарифность ПУ
	//25      контрольная сумма (последняя цифра сумма всех символов)
	//Пример: 4671103725000300750112410
	
	Структура = Новый Структура();
	Структура.Вставить("Распознано",	Распознано);
	Структура.Вставить("ОписаниеОшибки",		ОписаниеОшибки);	
	Структура.Вставить("НомерЛС",		НомерЛС);
	Структура.Вставить("СуммаОплаты",	СуммаОплаты);	
	Структура.Вставить("МесяцОплаты",	МесяцОплаты);
	Структура.Вставить("ГодОплаты",		ГодОплаты);
	Структура.Вставить("ВидДокумента",	ВидДокумента);
	Структура.Вставить("ТарифностьПУ",	ТарифностьПУ);
	Структура.Вставить("Показания",		Показания);
	Возврат Структура;
	
конецфункции

//Функция Тверь(СтрокаШК)
//	
//	//566956050129120170100005740018968
//	//  69560501291 - ЛС
//	Структура = Новый Структура();
//	
//	НомерЛС			= Сред(СтрокаШК,3, 11);
//	ГодОплаты		= Сред(СтрокаШК,16,2);
//	МесяцОплаты		= Сред(СтрокаШК,18,2);
//	СуммаОплаты		= Сред(СтрокаШК,20,9);
//	//ВидДокумента	= Сред(СтрокаШК,23,1);
//	//ТарифностьПУ	= Сред(СтрокаШК,24,1);
//	
//	Структура = Новый Структура();
//	Структура.Вставить("НомерЛС",		НомерЛС);
//	Структура.Вставить("ГодОплаты",		ГодОплаты);
//	Структура.Вставить("СуммаОплаты",	СуммаОплаты);	
//	Структура.Вставить("МесяцОплаты",	МесяцОплаты);
//	//Структура.Вставить("ВидДокумента",	Неопределено);
//	//Структура.Вставить("ТарифностьПУ",	Неопределено);
//	
//	Возврат Структура;
//	
//конецфункции

//Функция Смоленск(СтрокаШК)
//	
//	Структура = Новый Структура();
//	Структура.Вставить("НомерЛС",		СтрокаШК);
//	Структура.Вставить("СуммаОплаты",	Неопределено);	
//	Структура.Вставить("МесяцОплаты",	Неопределено);
//	Структура.Вставить("ГодОплаты",		Неопределено);
//	Структура.Вставить("ВидДокумента",	Неопределено);
//	Структура.Вставить("ТарифностьПУ",	Неопределено);
//	
//	Возврат Структура;
//	
//конецфункции

//Функция Мурманск(СтрокаШК)

//	Структура = Новый Структура();
//	Структура.Вставить("НомерЛС",		СтрокаШК);
//	Структура.Вставить("СуммаОплаты",	Неопределено);	
//	Структура.Вставить("МесяцОплаты",	Неопределено);
//	Структура.Вставить("ГодОплаты",		Неопределено);
//	Структура.Вставить("ВидДокумента",	Неопределено);
//	Структура.Вставить("ТарифностьПУ",	Неопределено);
//	
//	Возврат Структура;
//	
//конецфункции
#КонецОбласти
